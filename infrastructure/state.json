{
    "version": 3,
    "deployment": {
        "manifest": {
            "time": "2019-12-05T21:17:50.869358-08:00",
            "magic": "1be485475e3351f07e1a191bcbcfde3428a4d0e3294f7e251ecc064f0fd8a04b",
            "version": "v1.6.1"
        },
        "secrets_providers": {
            "type": "passphrase",
            "state": {
                "salt": "v1:XbXkmtQXqho=:v1:6o4UwkRsA7k9Z5FQ:JVS2P6aKESljV6XQG+SPO0Uh7DRkPw=="
            }
        },
        "resources": [
            {
                "urn": "urn:pulumi:cluster::brewed-here::pulumi:pulumi:Stack::brewed-here-cluster",
                "custom": false,
                "type": "pulumi:pulumi:Stack"
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::pulumi:providers:digitalocean::default_1_1_0",
                "custom": true,
                "id": "2af0647a-7baa-4592-bc1c-b05b3902430b",
                "type": "pulumi:providers:digitalocean",
                "inputs": {
                    "version": "1.1.0"
                },
                "outputs": {
                    "version": "1.1.0"
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::external-dns",
                "custom": false,
                "type": "kubernetes:helm.sh/v2:Chart",
                "parent": "urn:pulumi:cluster::brewed-here::pulumi:pulumi:Stack::brewed-here-cluster"
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::traefik",
                "custom": false,
                "type": "kubernetes:helm.sh/v2:Chart",
                "parent": "urn:pulumi:cluster::brewed-here::pulumi:pulumi:Stack::brewed-here-cluster"
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server::metrics-server",
                "custom": false,
                "type": "k8s:metrics-server",
                "outputs": {
                    "apiService": "v1beta1.metrics.k8s.io",
                    "clusterRole": "system:metrics-server",
                    "deployment": "kube-system/metrics-server-fzv5dhaw",
                    "service": "kube-system/metrics-server-peby28wf",
                    "serviceAccount": "kube-system/metrics-server"
                },
                "parent": "urn:pulumi:cluster::brewed-here::pulumi:pulumi:Stack::brewed-here-cluster"
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "custom": false,
                "type": "kubernetes:helm.sh/v2:Chart",
                "parent": "urn:pulumi:cluster::brewed-here::pulumi:pulumi:Stack::brewed-here-cluster"
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::digitalocean:index/kubernetesCluster:KubernetesCluster::do1",
                "custom": true,
                "id": "abb8a380-d585-4aec-8aa0-739a556b0431",
                "type": "digitalocean:index/kubernetesCluster:KubernetesCluster",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "name": "do1-44e7dd8",
                    "nodePool": {
                        "__defaults": [],
                        "autoScale": true,
                        "maxNodes": 3,
                        "minNodes": 1,
                        "name": "pool1",
                        "size": "s-1vcpu-2gb"
                    },
                    "region": "sfo2",
                    "version": "1.16.2-do.0"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"1\"}",
                    "clusterSubnet": "10.244.0.0/16",
                    "createdAt": "2019-12-05 07:15:54 +0000 UTC",
                    "endpoint": "https://abb8a380-d585-4aec-8aa0-739a556b0431.k8s.ondigitalocean.com",
                    "id": "abb8a380-d585-4aec-8aa0-739a556b0431",
                    "ipv4Address": "167.172.121.216",
                    "kubeConfigs": [
                        {
                            "clientCertificate": "",
                            "clientKey": "",
                            "clusterCaCertificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHhPVEV5TURVdwpOekUxTlRWYUZ3MHpPVEV5TURVd056RTFOVFZhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUnNsMFBnd043bnJIWjc0VUY0cDVCaitKdlRUL0JBRTgxS3JIdk5lekV6OVYvTDdxeApzS1RZNXBGdE0xVmVJOXpXUXUvTFZEdDQwUWJhR3NCNGVpUVJCOXlaNGYxVUZ6aVFOUUZqa281NVdpcmpOQVowClZxVVhaOTVnUzJ4WkNpelQ3RzNlSUtSblh3RFZydWFTSGhtTWZoY3p0MlAyZWIxbVRzUlhDK2VJcy9XSUhEejgKR2JFRUQ0MVZ1YlI0QTZYeURFMjBYVXdzUXdVcXJtVDhnQ3U5TTJ2SGFiWE13L2xQcisxMm5EUDNWUkhpMHJpdwowSTRGWFhXRytMQ0daZFRsY0IvY2YvQzI1enNqZXR3bFU5Snh6aXRmK1M2UzdjUEFIU3lpUitydG1jb0d6SWRaCktJMVkvYWUwWjltQzBuQVpsZjRnTWN6UmZhcVMwMTRVTWc1OUFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlNzREhnbkkwZzBPYlAyQi9PUwp0M2ZZMXF1S29EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFPQmpWbzBYNDBrT2VjT0dxa0I2citpOHR3a29lCnUvZjUrSG93NVRnOW5Zb3pFa041cXZZR1EwZ3YxZjhTZE8xVnFkUnVEd3dOY3JoYXptbWRBKzJCckMxS0QzdEoKMEFTYU92V0hqSGQ5SzJuK3ZwM2ErTUVvUW8zUUREVXZjaTJFdlQ1NzVLTWlLQzAvY04xV0lYNE43SktpdCtpQwp6Q0JnN1pLaWJqM2M0UVF4RDJCTlFCTGVBQ2E3aUIrZkJYVllnWlREQ0RqT0Yzek5JTW5PUXJqOWpFc0k1RHhLCnRzUXFyeE1tays3YTY2QzhSekdHL3d1MkxIVDlZK2E4Q0NxY1AxWXVETXlGVDhQMTF1U1dGZFR3ZmJnMzBxVG4KV0RwYkZpMXkxSks3RE9jNHhmTzAwdXhvd1JJSjJPdThVcWNaT3NTemJwSGF2Vm40NFd6QmFhL09GUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "expiresAt": "2019-12-12T07:21:25Z",
                            "host": "https://abb8a380-d585-4aec-8aa0-739a556b0431.k8s.ondigitalocean.com",
                            "rawConfig": "apiVersion: v1\nkind: Config\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHhPVEV5TURVdwpOekUxTlRWYUZ3MHpPVEV5TURVd056RTFOVFZhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUnNsMFBnd043bnJIWjc0VUY0cDVCaitKdlRUL0JBRTgxS3JIdk5lekV6OVYvTDdxeApzS1RZNXBGdE0xVmVJOXpXUXUvTFZEdDQwUWJhR3NCNGVpUVJCOXlaNGYxVUZ6aVFOUUZqa281NVdpcmpOQVowClZxVVhaOTVnUzJ4WkNpelQ3RzNlSUtSblh3RFZydWFTSGhtTWZoY3p0MlAyZWIxbVRzUlhDK2VJcy9XSUhEejgKR2JFRUQ0MVZ1YlI0QTZYeURFMjBYVXdzUXdVcXJtVDhnQ3U5TTJ2SGFiWE13L2xQcisxMm5EUDNWUkhpMHJpdwowSTRGWFhXRytMQ0daZFRsY0IvY2YvQzI1enNqZXR3bFU5Snh6aXRmK1M2UzdjUEFIU3lpUitydG1jb0d6SWRaCktJMVkvYWUwWjltQzBuQVpsZjRnTWN6UmZhcVMwMTRVTWc1OUFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlNzREhnbkkwZzBPYlAyQi9PUwp0M2ZZMXF1S29EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFPQmpWbzBYNDBrT2VjT0dxa0I2citpOHR3a29lCnUvZjUrSG93NVRnOW5Zb3pFa041cXZZR1EwZ3YxZjhTZE8xVnFkUnVEd3dOY3JoYXptbWRBKzJCckMxS0QzdEoKMEFTYU92V0hqSGQ5SzJuK3ZwM2ErTUVvUW8zUUREVXZjaTJFdlQ1NzVLTWlLQzAvY04xV0lYNE43SktpdCtpQwp6Q0JnN1pLaWJqM2M0UVF4RDJCTlFCTGVBQ2E3aUIrZkJYVllnWlREQ0RqT0Yzek5JTW5PUXJqOWpFc0k1RHhLCnRzUXFyeE1tays3YTY2QzhSekdHL3d1MkxIVDlZK2E4Q0NxY1AxWXVETXlGVDhQMTF1U1dGZFR3ZmJnMzBxVG4KV0RwYkZpMXkxSks3RE9jNHhmTzAwdXhvd1JJSjJPdThVcWNaT3NTemJwSGF2Vm40NFd6QmFhL09GUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://abb8a380-d585-4aec-8aa0-739a556b0431.k8s.ondigitalocean.com\n  name: do-sfo2-do1-44e7dd8\ncontexts:\n- context:\n    cluster: do-sfo2-do1-44e7dd8\n    user: do-sfo2-do1-44e7dd8-admin\n  name: do-sfo2-do1-44e7dd8\ncurrent-context: do-sfo2-do1-44e7dd8\nusers:\n- name: do-sfo2-do1-44e7dd8-admin\n  user:\n    token: a1f9f50af4a3167b5b4f6aed5ea8b30c423b7c690704929759428e66577970d0\n",
                            "token": "a1f9f50af4a3167b5b4f6aed5ea8b30c423b7c690704929759428e66577970d0"
                        }
                    ],
                    "name": "do1-44e7dd8",
                    "nodePool": {
                        "actualNodeCount": 1,
                        "autoScale": true,
                        "id": "51eee88e-947b-43e0-b227-36bf08b1ae0c",
                        "maxNodes": 3,
                        "minNodes": 1,
                        "name": "pool1",
                        "nodeCount": 0,
                        "nodes": [
                            {
                                "createdAt": "2019-12-05 07:15:54 +0000 UTC",
                                "id": "fb828132-20ed-4cfc-9a62-2724eabe5e2a",
                                "name": "pool1-lqv5",
                                "status": "running",
                                "updatedAt": "2019-12-05 07:20:38 +0000 UTC"
                            }
                        ],
                        "size": "s-1vcpu-2gb",
                        "tags": []
                    },
                    "region": "sfo2",
                    "serviceSubnet": "10.245.0.0/16",
                    "status": "running",
                    "tags": [],
                    "updatedAt": "2019-12-05 07:21:18 +0000 UTC",
                    "version": "1.16.2-do.0"
                },
                "parent": "urn:pulumi:cluster::brewed-here::pulumi:pulumi:Stack::brewed-here-cluster",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:digitalocean::default_1_1_0::2af0647a-7baa-4592-bc1c-b05b3902430b",
                "propertyDependencies": {
                    "nodePool": null,
                    "region": null,
                    "version": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3",
                "custom": true,
                "id": "fc664eaf-2867-4761-9818-3615cd8990ac",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "version": "1.3.3"
                },
                "outputs": {
                    "version": "1.3.3"
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::digitalocean:index/domain:Domain::brewedhere",
                "custom": true,
                "id": "brewedhere.co",
                "type": "digitalocean:index/domain:Domain",
                "inputs": {
                    "__defaults": [],
                    "name": "brewedhere.co"
                },
                "outputs": {
                    "id": "brewedhere.co",
                    "name": "brewedhere.co",
                    "urn": "do:domain:brewedhere.co"
                },
                "parent": "urn:pulumi:cluster::brewed-here::pulumi:pulumi:Stack::brewed-here-cluster",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:digitalocean::default_1_1_0::2af0647a-7baa-4592-bc1c-b05b3902430b",
                "propertyDependencies": {
                    "name": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:deployment::metrics-server",
                "custom": false,
                "type": "k8s:metrics-server:deployment",
                "outputs": {
                    "deployment": "kube-system/metrics-server-fzv5dhaw"
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server::metrics-server"
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:service::metrics-server",
                "custom": false,
                "type": "k8s:metrics-server:service",
                "outputs": {
                    "apiService": "v1beta1.metrics.k8s.io",
                    "service": "kube-system/metrics-server-peby28wf"
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server::metrics-server"
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac::metrics-server",
                "custom": false,
                "type": "k8s:metrics-server:rbac",
                "outputs": {
                    "clusterRole": "system:metrics-server",
                    "serviceAccount": "kube-system/metrics-server"
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server::metrics-server"
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Secret::traefik-dashboard-auth",
                "custom": true,
                "id": "traefik/authsecret",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "authsecret",
                        "namespace": "traefik"
                    },
                    "stringData": {
                        "users": "brewedhere:$apr1$HkFfbu2E$uzgittuYAx51CpupwL4Rv0"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "authsecret",
                            "namespace": "traefik"
                        },
                        "stringData": {
                            "users": "brewedhere:$apr1$HkFfbu2E$uzgittuYAx51CpupwL4Rv0"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "v1:5zQnB420UlRWAMAR:EL168qUjn607ba9uYSu0F1KpluFT64NiE2z4dP7pbSSY1CJwQ5ChQKJjb8Phoqe9bCzsTlIslLP6ibIm9zkdIM7kaMHxC1kCPjDCxt57bINAfuT7FdkyA58rFP4="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Secret\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"authsecret\",\"namespace\":\"traefik\"},\"stringData\":{\"users\":\"brewedhere:$apr1$HkFfbu2E$uzgittuYAx51CpupwL4Rv0\"},\"type\":\"Opaque\"}\n"
                        },
                        "creationTimestamp": "2019-12-06T03:47:53Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "authsecret",
                        "namespace": "traefik",
                        "resourceVersion": "72518",
                        "selfLink": "/api/v1/namespaces/traefik/secrets/authsecret",
                        "uid": "fb34f464-a44d-4152-bd61-0bd9d47fdc28"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:cluster::brewed-here::pulumi:pulumi:Stack::brewed-here-cluster",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "stringData": null,
                    "type": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s",
                "custom": true,
                "id": "d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "apiVersion: v1\nkind: Config\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHhPVEV5TURVdwpOekUxTlRWYUZ3MHpPVEV5TURVd056RTFOVFZhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUnNsMFBnd043bnJIWjc0VUY0cDVCaitKdlRUL0JBRTgxS3JIdk5lekV6OVYvTDdxeApzS1RZNXBGdE0xVmVJOXpXUXUvTFZEdDQwUWJhR3NCNGVpUVJCOXlaNGYxVUZ6aVFOUUZqa281NVdpcmpOQVowClZxVVhaOTVnUzJ4WkNpelQ3RzNlSUtSblh3RFZydWFTSGhtTWZoY3p0MlAyZWIxbVRzUlhDK2VJcy9XSUhEejgKR2JFRUQ0MVZ1YlI0QTZYeURFMjBYVXdzUXdVcXJtVDhnQ3U5TTJ2SGFiWE13L2xQcisxMm5EUDNWUkhpMHJpdwowSTRGWFhXRytMQ0daZFRsY0IvY2YvQzI1enNqZXR3bFU5Snh6aXRmK1M2UzdjUEFIU3lpUitydG1jb0d6SWRaCktJMVkvYWUwWjltQzBuQVpsZjRnTWN6UmZhcVMwMTRVTWc1OUFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlNzREhnbkkwZzBPYlAyQi9PUwp0M2ZZMXF1S29EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFPQmpWbzBYNDBrT2VjT0dxa0I2citpOHR3a29lCnUvZjUrSG93NVRnOW5Zb3pFa041cXZZR1EwZ3YxZjhTZE8xVnFkUnVEd3dOY3JoYXptbWRBKzJCckMxS0QzdEoKMEFTYU92V0hqSGQ5SzJuK3ZwM2ErTUVvUW8zUUREVXZjaTJFdlQ1NzVLTWlLQzAvY04xV0lYNE43SktpdCtpQwp6Q0JnN1pLaWJqM2M0UVF4RDJCTlFCTGVBQ2E3aUIrZkJYVllnWlREQ0RqT0Yzek5JTW5PUXJqOWpFc0k1RHhLCnRzUXFyeE1tays3YTY2QzhSekdHL3d1MkxIVDlZK2E4Q0NxY1AxWXVETXlGVDhQMTF1U1dGZFR3ZmJnMzBxVG4KV0RwYkZpMXkxSks3RE9jNHhmTzAwdXhvd1JJSjJPdThVcWNaT3NTemJwSGF2Vm40NFd6QmFhL09GUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://abb8a380-d585-4aec-8aa0-739a556b0431.k8s.ondigitalocean.com\n  name: do-sfo2-do1-44e7dd8\ncontexts:\n- context:\n    cluster: do-sfo2-do1-44e7dd8\n    user: do-sfo2-do1-44e7dd8-admin\n  name: do-sfo2-do1-44e7dd8\ncurrent-context: do-sfo2-do1-44e7dd8\nusers:\n- name: do-sfo2-do1-44e7dd8-admin\n  user:\n    token: a1f9f50af4a3167b5b4f6aed5ea8b30c423b7c690704929759428e66577970d0\n"
                },
                "outputs": {
                    "kubeconfig": "apiVersion: v1\nkind: Config\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHhPVEV5TURVdwpOekUxTlRWYUZ3MHpPVEV5TURVd056RTFOVFZhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFEUnNsMFBnd043bnJIWjc0VUY0cDVCaitKdlRUL0JBRTgxS3JIdk5lekV6OVYvTDdxeApzS1RZNXBGdE0xVmVJOXpXUXUvTFZEdDQwUWJhR3NCNGVpUVJCOXlaNGYxVUZ6aVFOUUZqa281NVdpcmpOQVowClZxVVhaOTVnUzJ4WkNpelQ3RzNlSUtSblh3RFZydWFTSGhtTWZoY3p0MlAyZWIxbVRzUlhDK2VJcy9XSUhEejgKR2JFRUQ0MVZ1YlI0QTZYeURFMjBYVXdzUXdVcXJtVDhnQ3U5TTJ2SGFiWE13L2xQcisxMm5EUDNWUkhpMHJpdwowSTRGWFhXRytMQ0daZFRsY0IvY2YvQzI1enNqZXR3bFU5Snh6aXRmK1M2UzdjUEFIU3lpUitydG1jb0d6SWRaCktJMVkvYWUwWjltQzBuQVpsZjRnTWN6UmZhcVMwMTRVTWc1OUFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlNzREhnbkkwZzBPYlAyQi9PUwp0M2ZZMXF1S29EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFPQmpWbzBYNDBrT2VjT0dxa0I2citpOHR3a29lCnUvZjUrSG93NVRnOW5Zb3pFa041cXZZR1EwZ3YxZjhTZE8xVnFkUnVEd3dOY3JoYXptbWRBKzJCckMxS0QzdEoKMEFTYU92V0hqSGQ5SzJuK3ZwM2ErTUVvUW8zUUREVXZjaTJFdlQ1NzVLTWlLQzAvY04xV0lYNE43SktpdCtpQwp6Q0JnN1pLaWJqM2M0UVF4RDJCTlFCTGVBQ2E3aUIrZkJYVllnWlREQ0RqT0Yzek5JTW5PUXJqOWpFc0k1RHhLCnRzUXFyeE1tays3YTY2QzhSekdHL3d1MkxIVDlZK2E4Q0NxY1AxWXVETXlGVDhQMTF1U1dGZFR3ZmJnMzBxVG4KV0RwYkZpMXkxSks3RE9jNHhmTzAwdXhvd1JJSjJPdThVcWNaT3NTemJwSGF2Vm40NFd6QmFhL09GUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: https://abb8a380-d585-4aec-8aa0-739a556b0431.k8s.ondigitalocean.com\n  name: do-sfo2-do1-44e7dd8\ncontexts:\n- context:\n    cluster: do-sfo2-do1-44e7dd8\n    user: do-sfo2-do1-44e7dd8-admin\n  name: do-sfo2-do1-44e7dd8\ncurrent-context: do-sfo2-do1-44e7dd8\nusers:\n- name: do-sfo2-do1-44e7dd8-admin\n  user:\n    token: a1f9f50af4a3167b5b4f6aed5ea8b30c423b7c690704929759428e66577970d0\n"
                },
                "parent": "urn:pulumi:cluster::brewed-here::pulumi:pulumi:Stack::brewed-here-cluster",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::digitalocean:index/kubernetesCluster:KubernetesCluster::do1"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:cluster::brewed-here::digitalocean:index/kubernetesCluster:KubernetesCluster::do1"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::linkerd/linkerd-psp",
                "custom": true,
                "id": "linkerd/linkerd-psp",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:Role",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-psp",
                        "namespace": "linkerd"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "policy",
                                "extensions"
                            ],
                            "resourceNames": [
                                "linkerd-linkerd-control-plane"
                            ],
                            "resources": [
                                "podsecuritypolicies"
                            ],
                            "verbs": [
                                "use"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-psp",
                            "namespace": "linkerd"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "policy",
                                    "extensions"
                                ],
                                "resourceNames": [
                                    "linkerd-linkerd-control-plane"
                                ],
                                "resources": [
                                    "podsecuritypolicies"
                                ],
                                "verbs": [
                                    "use"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-psp\",\"namespace\":\"linkerd\"},\"rules\":[{\"apiGroups\":[\"policy\",\"extensions\"],\"resourceNames\":[\"linkerd-linkerd-control-plane\"],\"resources\":[\"podsecuritypolicies\"],\"verbs\":[\"use\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:40Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-psp",
                        "namespace": "linkerd",
                        "resourceVersion": "44628",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/linkerd/roles/linkerd-psp",
                        "uid": "6e2ab08a-68e5-4aa5-a389-7889b498709d"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "policy",
                                "extensions"
                            ],
                            "resourceNames": [
                                "linkerd-linkerd-control-plane"
                            ],
                            "resources": [
                                "podsecuritypolicies"
                            ],
                            "verbs": [
                                "use"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ConfigMap::linkerd/linkerd-config",
                "custom": true,
                "id": "linkerd/linkerd-config",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "global": "{\n  \"linkerdNamespace\": \"linkerd\",\n  \"cniEnabled\": false,\n  \"version\": \"stable-2.6.0\",\n  \"identityContext\":{\n    \"trustDomain\": \"cluster.local\",\n    \"trustAnchorsPem\": \"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\",\n    \"issuanceLifeTime\": \"86400s\",\n    \"clockSkewAllowance\": \"20s\"\n  },\n  \"autoInjectContext\": null,\n  \"omitWebhookSideEffects\": false,\n  \"clusterDomain\": \"cluster.local\"\n}\n",
                        "install": "{\n  \"uuid\":\"88ca0cdb-eb0c-48f7-83c8-1656a950e23f\",\n  \"cliVersion\":\"stable-2.6.0\",\n  \"flags\":[]\n}\n",
                        "proxy": "{\n  \"proxyImage\":{\n    \"imageName\":\"gcr.io/linkerd-io/proxy\",\n    \"pullPolicy\":\"IfNotPresent\"\n  },\n  \"proxyInitImage\":{\n    \"imageName\":\"gcr.io/linkerd-io/proxy-init\",\n    \"pullPolicy\":\"IfNotPresent\"\n  },\n  \"controlPort\":{\n    \"port\": 4190\n  },\n  \"ignoreInboundPorts\":[],\n  \"ignoreOutboundPorts\":[],\n  \"inboundPort\":{\n    \"port\": 4143\n  },\n  \"adminPort\":{\n    \"port\": 4191\n  },\n  \"outboundPort\":{\n    \"port\": 4140\n  },\n  \"resource\":{\n    \"requestCpu\": \"\",\n    \"limitCpu\": \"\",\n    \"requestMemory\": \"\",\n    \"limitMemory\": \"\"\n  },\n  \"proxyUid\": 2102,\n  \"logLevel\":{\n    \"level\": \"warn,linkerd2_proxy=info\"\n  },\n  \"disableExternalProfiles\": true,\n  \"proxyVersion\": \"stable-2.6.0\",\n  \"proxyInitImageVersion\": \"v1.1.0\"\n}\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-config",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "global": "{\n  \"linkerdNamespace\": \"linkerd\",\n  \"cniEnabled\": false,\n  \"version\": \"stable-2.6.0\",\n  \"identityContext\":{\n    \"trustDomain\": \"cluster.local\",\n    \"trustAnchorsPem\": \"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\",\n    \"issuanceLifeTime\": \"86400s\",\n    \"clockSkewAllowance\": \"20s\"\n  },\n  \"autoInjectContext\": null,\n  \"omitWebhookSideEffects\": false,\n  \"clusterDomain\": \"cluster.local\"\n}\n",
                            "install": "{\n  \"uuid\":\"88ca0cdb-eb0c-48f7-83c8-1656a950e23f\",\n  \"cliVersion\":\"stable-2.6.0\",\n  \"flags\":[]\n}\n",
                            "proxy": "{\n  \"proxyImage\":{\n    \"imageName\":\"gcr.io/linkerd-io/proxy\",\n    \"pullPolicy\":\"IfNotPresent\"\n  },\n  \"proxyInitImage\":{\n    \"imageName\":\"gcr.io/linkerd-io/proxy-init\",\n    \"pullPolicy\":\"IfNotPresent\"\n  },\n  \"controlPort\":{\n    \"port\": 4190\n  },\n  \"ignoreInboundPorts\":[],\n  \"ignoreOutboundPorts\":[],\n  \"inboundPort\":{\n    \"port\": 4143\n  },\n  \"adminPort\":{\n    \"port\": 4191\n  },\n  \"outboundPort\":{\n    \"port\": 4140\n  },\n  \"resource\":{\n    \"requestCpu\": \"\",\n    \"limitCpu\": \"\",\n    \"requestMemory\": \"\",\n    \"limitMemory\": \"\"\n  },\n  \"proxyUid\": 2102,\n  \"logLevel\":{\n    \"level\": \"warn,linkerd2_proxy=info\"\n  },\n  \"disableExternalProfiles\": true,\n  \"proxyVersion\": \"stable-2.6.0\",\n  \"proxyInitImageVersion\": \"v1.1.0\"\n}\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "controller",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-config",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "global": "{\n  \"linkerdNamespace\": \"linkerd\",\n  \"cniEnabled\": false,\n  \"version\": \"stable-2.6.0\",\n  \"identityContext\":{\n    \"trustDomain\": \"cluster.local\",\n    \"trustAnchorsPem\": \"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\",\n    \"issuanceLifeTime\": \"86400s\",\n    \"clockSkewAllowance\": \"20s\"\n  },\n  \"autoInjectContext\": null,\n  \"omitWebhookSideEffects\": false,\n  \"clusterDomain\": \"cluster.local\"\n}\n",
                        "install": "{\n  \"uuid\":\"88ca0cdb-eb0c-48f7-83c8-1656a950e23f\",\n  \"cliVersion\":\"stable-2.6.0\",\n  \"flags\":[]\n}\n",
                        "proxy": "{\n  \"proxyImage\":{\n    \"imageName\":\"gcr.io/linkerd-io/proxy\",\n    \"pullPolicy\":\"IfNotPresent\"\n  },\n  \"proxyInitImage\":{\n    \"imageName\":\"gcr.io/linkerd-io/proxy-init\",\n    \"pullPolicy\":\"IfNotPresent\"\n  },\n  \"controlPort\":{\n    \"port\": 4190\n  },\n  \"ignoreInboundPorts\":[],\n  \"ignoreOutboundPorts\":[],\n  \"inboundPort\":{\n    \"port\": 4143\n  },\n  \"adminPort\":{\n    \"port\": 4191\n  },\n  \"outboundPort\":{\n    \"port\": 4140\n  },\n  \"resource\":{\n    \"requestCpu\": \"\",\n    \"limitCpu\": \"\",\n    \"requestMemory\": \"\",\n    \"limitMemory\": \"\"\n  },\n  \"proxyUid\": 2102,\n  \"logLevel\":{\n    \"level\": \"warn,linkerd2_proxy=info\"\n  },\n  \"disableExternalProfiles\": true,\n  \"proxyVersion\": \"stable-2.6.0\",\n  \"proxyInitImageVersion\": \"v1.1.0\"\n}\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"global\":\"{\\n  \\\"linkerdNamespace\\\": \\\"linkerd\\\",\\n  \\\"cniEnabled\\\": false,\\n  \\\"version\\\": \\\"stable-2.6.0\\\",\\n  \\\"identityContext\\\":{\\n    \\\"trustDomain\\\": \\\"cluster.local\\\",\\n    \\\"trustAnchorsPem\\\": \\\"-----BEGIN CERTIFICATE-----\\\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\\\n-----END CERTIFICATE-----\\\",\\n    \\\"issuanceLifeTime\\\": \\\"86400s\\\",\\n    \\\"clockSkewAllowance\\\": \\\"20s\\\"\\n  },\\n  \\\"autoInjectContext\\\": null,\\n  \\\"omitWebhookSideEffects\\\": false,\\n  \\\"clusterDomain\\\": \\\"cluster.local\\\"\\n}\\n\",\"install\":\"{\\n  \\\"uuid\\\":\\\"88ca0cdb-eb0c-48f7-83c8-1656a950e23f\\\",\\n  \\\"cliVersion\\\":\\\"stable-2.6.0\\\",\\n  \\\"flags\\\":[]\\n}\\n\",\"proxy\":\"{\\n  \\\"proxyImage\\\":{\\n    \\\"imageName\\\":\\\"gcr.io/linkerd-io/proxy\\\",\\n    \\\"pullPolicy\\\":\\\"IfNotPresent\\\"\\n  },\\n  \\\"proxyInitImage\\\":{\\n    \\\"imageName\\\":\\\"gcr.io/linkerd-io/proxy-init\\\",\\n    \\\"pullPolicy\\\":\\\"IfNotPresent\\\"\\n  },\\n  \\\"controlPort\\\":{\\n    \\\"port\\\": 4190\\n  },\\n  \\\"ignoreInboundPorts\\\":[],\\n  \\\"ignoreOutboundPorts\\\":[],\\n  \\\"inboundPort\\\":{\\n    \\\"port\\\": 4143\\n  },\\n  \\\"adminPort\\\":{\\n    \\\"port\\\": 4191\\n  },\\n  \\\"outboundPort\\\":{\\n    \\\"port\\\": 4140\\n  },\\n  \\\"resource\\\":{\\n    \\\"requestCpu\\\": \\\"\\\",\\n    \\\"limitCpu\\\": \\\"\\\",\\n    \\\"requestMemory\\\": \\\"\\\",\\n    \\\"limitMemory\\\": \\\"\\\"\\n  },\\n  \\\"proxyUid\\\": 2102,\\n  \\\"logLevel\\\":{\\n    \\\"level\\\": \\\"warn,linkerd2_proxy=info\\\"\\n  },\\n  \\\"disableExternalProfiles\\\": true,\\n  \\\"proxyVersion\\\": \\\"stable-2.6.0\\\",\\n  \\\"proxyInitImageVersion\\\": \\\"v1.1.0\\\"\\n}\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"controller\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-config\",\"namespace\":\"linkerd\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-06T04:33:27Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-config",
                        "namespace": "linkerd",
                        "resourceVersion": "75621",
                        "selfLink": "/api/v1/namespaces/linkerd/configmaps/linkerd-config",
                        "uid": "3c7ec701-b85e-4cbb-bbab-29b1bddbb866"
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::linkerd/linkerd-controller",
                "custom": true,
                "id": "linkerd/linkerd-controller",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-controller",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "controller",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-controller",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"controller\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-controller\",\"namespace\":\"linkerd\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:09Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-controller",
                        "namespace": "linkerd",
                        "resourceVersion": "44543",
                        "selfLink": "/api/v1/namespaces/linkerd/serviceaccounts/linkerd-controller",
                        "uid": "97413f1e-0c58-4a17-8e8d-299a0def4203"
                    },
                    "secrets": [
                        {
                            "name": "linkerd-controller-token-qjgjp"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ConfigMap::linkerd/linkerd-grafana-config",
                "custom": true,
                "id": "linkerd/linkerd-grafana-config",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "dashboards.yaml": "apiVersion: 1\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: true\n  editable: true\n  options:\n    path: /var/lib/grafana/dashboards\n    homeDashboardId: linkerd-top-line",
                        "datasources.yaml": "apiVersion: 1\ndatasources:\n- name: prometheus\n  type: prometheus\n  access: proxy\n  orgId: 1\n  url: http://linkerd-prometheus.linkerd.svc.cluster.local:9090\n  isDefault: true\n  jsonData:\n    timeInterval: \"5s\"\n  version: 1\n  editable: true",
                        "grafana.ini": "instance_name = linkerd-grafana\n\n[server]\nroot_url = %(protocol)s://%(domain)s:/grafana/\n\n[auth]\ndisable_login_form = true\n\n[auth.anonymous]\nenabled = true\norg_role = Editor\n\n[auth.basic]\nenabled = false\n\n[analytics]\ncheck_for_updates = false\n\n[panels]\ndisable_sanitize_html = true"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "grafana",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-grafana-config",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "dashboards.yaml": "apiVersion: 1\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: true\n  editable: true\n  options:\n    path: /var/lib/grafana/dashboards\n    homeDashboardId: linkerd-top-line",
                            "datasources.yaml": "apiVersion: 1\ndatasources:\n- name: prometheus\n  type: prometheus\n  access: proxy\n  orgId: 1\n  url: http://linkerd-prometheus.linkerd.svc.cluster.local:9090\n  isDefault: true\n  jsonData:\n    timeInterval: \"5s\"\n  version: 1\n  editable: true",
                            "grafana.ini": "instance_name = linkerd-grafana\n\n[server]\nroot_url = %(protocol)s://%(domain)s:/grafana/\n\n[auth]\ndisable_login_form = true\n\n[auth.anonymous]\nenabled = true\norg_role = Editor\n\n[auth.basic]\nenabled = false\n\n[analytics]\ncheck_for_updates = false\n\n[panels]\ndisable_sanitize_html = true"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "grafana",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-grafana-config",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "dashboards.yaml": "apiVersion: 1\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: true\n  editable: true\n  options:\n    path: /var/lib/grafana/dashboards\n    homeDashboardId: linkerd-top-line",
                        "datasources.yaml": "apiVersion: 1\ndatasources:\n- name: prometheus\n  type: prometheus\n  access: proxy\n  orgId: 1\n  url: http://linkerd-prometheus.linkerd.svc.cluster.local:9090\n  isDefault: true\n  jsonData:\n    timeInterval: \"5s\"\n  version: 1\n  editable: true",
                        "grafana.ini": "instance_name = linkerd-grafana\n\n[server]\nroot_url = %(protocol)s://%(domain)s:/grafana/\n\n[auth]\ndisable_login_form = true\n\n[auth.anonymous]\nenabled = true\norg_role = Editor\n\n[auth.basic]\nenabled = false\n\n[analytics]\ncheck_for_updates = false\n\n[panels]\ndisable_sanitize_html = true"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"dashboards.yaml\":\"apiVersion: 1\\nproviders:\\n- name: 'default'\\n  orgId: 1\\n  folder: ''\\n  type: file\\n  disableDeletion: true\\n  editable: true\\n  options:\\n    path: /var/lib/grafana/dashboards\\n    homeDashboardId: linkerd-top-line\",\"datasources.yaml\":\"apiVersion: 1\\ndatasources:\\n- name: prometheus\\n  type: prometheus\\n  access: proxy\\n  orgId: 1\\n  url: http://linkerd-prometheus.linkerd.svc.cluster.local:9090\\n  isDefault: true\\n  jsonData:\\n    timeInterval: \\\"5s\\\"\\n  version: 1\\n  editable: true\",\"grafana.ini\":\"instance_name = linkerd-grafana\\n\\n[server]\\nroot_url = %(protocol)s://%(domain)s:/grafana/\\n\\n[auth]\\ndisable_login_form = true\\n\\n[auth.anonymous]\\nenabled = true\\norg_role = Editor\\n\\n[auth.basic]\\nenabled = false\\n\\n[analytics]\\ncheck_for_updates = false\\n\\n[panels]\\ndisable_sanitize_html = true\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"grafana\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-grafana-config\",\"namespace\":\"linkerd\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:36Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "grafana",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-grafana-config",
                        "namespace": "linkerd",
                        "resourceVersion": "44618",
                        "selfLink": "/api/v1/namespaces/linkerd/configmaps/linkerd-grafana-config",
                        "uid": "4f2bba3e-8b18-439b-872a-831e60d07d34"
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::linkerd/linkerd-grafana",
                "custom": true,
                "id": "linkerd/linkerd-grafana",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "grafana",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-grafana",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "grafana",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-grafana",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"grafana\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-grafana\",\"namespace\":\"linkerd\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:14Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "grafana",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-grafana",
                        "namespace": "linkerd",
                        "resourceVersion": "44568",
                        "selfLink": "/api/v1/namespaces/linkerd/serviceaccounts/linkerd-grafana",
                        "uid": "9945490c-ceda-4d62-9824-8ef06adf4675"
                    },
                    "secrets": [
                        {
                            "name": "linkerd-grafana-token-bfqmg"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns",
                "custom": true,
                "id": "external-dns",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "external-dns"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "external-dns"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"external-dns\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T23:25:15Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "external-dns",
                        "resourceVersion": "56950",
                        "selfLink": "/api/v1/namespaces/external-dns",
                        "uid": "fb8bf119-c218-41af-903a-64a53cfa8bdc"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::pulumi:pulumi:Stack::brewed-here-cluster",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Secret::linkerd/linkerd-identity-issuer",
                "custom": true,
                "id": "linkerd/linkerd-identity-issuer",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "crt.pem": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3RENDQVdhZ0F3SUJBZ0lRU2t5TWZyL2VMcS9YNXNBWXV6U1JVekFLQmdncWhrak9QUVFEQWpBcE1TY3cKSlFZRFZRUURFeDVwWkdWdWRHbDBlUzVzYVc1clpYSmtMbU5zZFhOMFpYSXViRzlqWVd3d0hoY05NVGt4TWpBMQpNVGt6TmpFNVdoY05NakF4TWpBME1Ua3pOakU1V2pBcE1TY3dKUVlEVlFRREV4NXBaR1Z1ZEdsMGVTNXNhVzVyClpYSmtMbU5zZFhOMFpYSXViRzlqWVd3d1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSQkJ2ZVkKdTRncStzR2hEY1BYdFNsdkNJTmUxU3JUWXFyOXlPK0FKSStKV3EyU2pwdDFDRW1DQ2FHdmwvYnZYMDFLUEtnUAplUk9kQjVhOE1oaDduRGRabzNBd2JqQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCCi93SUJBREFkQmdOVkhRNEVGZ1FVNUpRT1FJRStlVlZHdlAxQi91MVg5K2lGM1ZBd0tRWURWUjBSQkNJd0lJSWUKYVdSbGJuUnBkSGt1YkdsdWEyVnlaQzVqYkhWemRHVnlMbXh2WTJGc01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQwpJUUNBbTZiai9QdjV1Y2FqMWdseFpaa0FlU01NZmJra1diWU1aSDhNSDRMOEF3SWdEeFJEeGVBM3dPZk1RTnJ5Cmg2KzVaSk0zMDVIZHNlclNVR1lXWFNwRCtqWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==",
                        "key.pem": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU95Sll3SkFWdFZTVE8vQ2l1OTBhYXNnNVlDMm9CcUF6aWRZNjdQQWtEaGhvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUVFiM21MdUlLdnJCb1EzRDE3VXBid2lEWHRVcTAyS3EvY2p2Z0NTUGlWcXRrbzZiZFFoSgpnZ21ocjVmMjcxOU5TanlvRDNrVG5RZVd2RElZZTV3M1dRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ=="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                            "linkerd.io/identity-issuer-expiry": "2020-12-04T11:48:54Z"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-identity-issuer",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "crt.pem": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3RENDQVdhZ0F3SUJBZ0lRU2t5TWZyL2VMcS9YNXNBWXV6U1JVekFLQmdncWhrak9QUVFEQWpBcE1TY3cKSlFZRFZRUURFeDVwWkdWdWRHbDBlUzVzYVc1clpYSmtMbU5zZFhOMFpYSXViRzlqWVd3d0hoY05NVGt4TWpBMQpNVGt6TmpFNVdoY05NakF4TWpBME1Ua3pOakU1V2pBcE1TY3dKUVlEVlFRREV4NXBaR1Z1ZEdsMGVTNXNhVzVyClpYSmtMbU5zZFhOMFpYSXViRzlqWVd3d1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSQkJ2ZVkKdTRncStzR2hEY1BYdFNsdkNJTmUxU3JUWXFyOXlPK0FKSStKV3EyU2pwdDFDRW1DQ2FHdmwvYnZYMDFLUEtnUAplUk9kQjVhOE1oaDduRGRabzNBd2JqQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCCi93SUJBREFkQmdOVkhRNEVGZ1FVNUpRT1FJRStlVlZHdlAxQi91MVg5K2lGM1ZBd0tRWURWUjBSQkNJd0lJSWUKYVdSbGJuUnBkSGt1YkdsdWEyVnlaQzVqYkhWemRHVnlMbXh2WTJGc01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQwpJUUNBbTZiai9QdjV1Y2FqMWdseFpaa0FlU01NZmJra1diWU1aSDhNSDRMOEF3SWdEeFJEeGVBM3dPZk1RTnJ5Cmg2KzVaSk0zMDVIZHNlclNVR1lXWFNwRCtqWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==",
                            "key.pem": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU95Sll3SkFWdFZTVE8vQ2l1OTBhYXNnNVlDMm9CcUF6aWRZNjdQQWtEaGhvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUVFiM21MdUlLdnJCb1EzRDE3VXBid2lEWHRVcTAyS3EvY2p2Z0NTUGlWcXRrbzZiZFFoSgpnZ21ocjVmMjcxOU5TanlvRDNrVG5RZVd2RElZZTV3M1dRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ=="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                "linkerd.io/identity-issuer-expiry": "2020-12-04T11:48:54Z"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "identity",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-identity-issuer",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "v1:cWSd3I6SEfMapj2V:bXvtbcGwFNRJB7zBc9G/xVrOsMLlwg0nt0TKuPmwYYHVqbtxeXnNXYPo1uZ/CXgTZwWdvV0wNBpaa5PH+D1d/1bp5aV/sGIGLj+P0k16fqN3vdlZKFKlh2S1YFb7s9rU94NrvpwxYlEvmSHIOj24+7Giq2e4traHLp1cNRKHa7sBMufo/sBjzehyzBRmB8Q9sNOq+rF10upx4zooXZnHpmA73m03Jd403WVSj4lZqwXMHe+3qSHD+yL6g7VC4Tul1qTBQ9fxtXU95EpzbltAJI49JGJyoG378HGEaALsxbWUsx14h9D9wWtZJ3kr3WSurXIN3WxsGl5L4Zd27aB6PfXjuHNWRRk8tZE+5GgLSrxKvMezbAs+LqpIHeYDZ51m4FqVfNHcBoPngDrKfQaIerI0t4dA8YCrUEQSHFenOuMGK/Uq82R1jwMojlYtViyIElcsbUkRk9LMk0We+qgaenlYtj496gjmnOkeV1EvQxi7qKdDH5b9h1flAcrCCKa8GSwCwf5GIjeRJJ2n49TULsMlNC9ndvQiDDyPkOumf/EXGuUBeDdBmpr8gSZtg87dBGuYKbyP77o6ih6wa64PKvjkah1l1fT4zm3eqaJwxBZAnB9p7Od9x40W2GzoUsRMMHmdKBrwibihvhDcFiKXJSEjknUf0uthGFKDq7jRuG+dGv9iz6cjRtMcU/Itoaa7DghFA/6gbH2o77LQlrvQhC3m1p+xWoygaPXV/a0cA9txSkV71vi3bB9h4RKaqYPxvgRRZ0320/iUpzE1iRot9JKbDBVX48CO7C/xKYeIdhHALPqJLokY5DB5VsiFtBKwOJgRSSg3MuHp0WDQtNwjPRD7j3NBiCuD7H7dzHdLf2dU+p0I6BbrhSM4/lsUKHMf+yXxTYSeapvZRqrYkg+YxKK4T1x7Nr9pTRwAsp9BHG7SQ0b5LB9wH98Qsw+V/8E5SUSGoBr8AYGFTQ/4Mvc3stuLV6U8hP6CQxqt1en46UF9YhnznQ6xd0z919KJvOejg8N2sFpFuwwPS2QuOdISAu4Yhi3ICeJ6J3W/HmWi4FcUotHjAORyDkEaDIIyqynpWn/l+CxZSm9/Q5rG80qKihrCHt7gCXlVfOq2liC65vQcLRA6LihuZSW2JohFsraREBXb0OaJEBDik0n/Qm+G3DHp34B8DEsqXEhPdki+tc27RAoM8aWtwyq2AjpbcItGMBi8g4M60TJZcaXrr6DSaolJkE+ILAd96Hqi3XhQDGQQWIKlLTkby/O0jVwVjWkDSYY/q2wbY7FgiUKAMImzytpQLYxcdm4T1zEJpgrmao6gseMxtcJkWHX+D9BOVgXBzOFNNDNoxl/y47a3rGSxCK5pa3BrDG0klgfqVajV+kz5z162+nLlOFZpSAtQjRqsywP44xn+Vnh4zFHpqJHulI8Ent55KEOMjbsnVOEBYIOG85oFz6XeVrGLr8cXr6cNKA27c/R2Y9kNIzJ8liEYMiJPqa2xx28PNJDWXXVH9Vj1wUOEdxCQS4IxIXarjNsrrtlorKqnor5RHFvbwKg1YLmY+wgS2QXVTe7VDZBix81YNx/3/Nglncqo1UXl2knMXDHrjhW8XigSBQw157x3SFxxflyKOzw4tjdjnNQS5p0EE26yIRn6"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"crt.pem\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3RENDQVdhZ0F3SUJBZ0lRU2t5TWZyL2VMcS9YNXNBWXV6U1JVekFLQmdncWhrak9QUVFEQWpBcE1TY3cKSlFZRFZRUURFeDVwWkdWdWRHbDBlUzVzYVc1clpYSmtMbU5zZFhOMFpYSXViRzlqWVd3d0hoY05NVGt4TWpBMQpNVGt6TmpFNVdoY05NakF4TWpBME1Ua3pOakU1V2pBcE1TY3dKUVlEVlFRREV4NXBaR1Z1ZEdsMGVTNXNhVzVyClpYSmtMbU5zZFhOMFpYSXViRzlqWVd3d1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSQkJ2ZVkKdTRncStzR2hEY1BYdFNsdkNJTmUxU3JUWXFyOXlPK0FKSStKV3EyU2pwdDFDRW1DQ2FHdmwvYnZYMDFLUEtnUAplUk9kQjVhOE1oaDduRGRabzNBd2JqQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCCi93SUJBREFkQmdOVkhRNEVGZ1FVNUpRT1FJRStlVlZHdlAxQi91MVg5K2lGM1ZBd0tRWURWUjBSQkNJd0lJSWUKYVdSbGJuUnBkSGt1YkdsdWEyVnlaQzVqYkhWemRHVnlMbXh2WTJGc01Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQwpJUUNBbTZiai9QdjV1Y2FqMWdseFpaa0FlU01NZmJra1diWU1aSDhNSDRMOEF3SWdEeFJEeGVBM3dPZk1RTnJ5Cmg2KzVaSk0zMDVIZHNlclNVR1lXWFNwRCtqWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==\",\"key.pem\":\"LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU95Sll3SkFWdFZTVE8vQ2l1OTBhYXNnNVlDMm9CcUF6aWRZNjdQQWtEaGhvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUVFiM21MdUlLdnJCb1EzRDE3VXBid2lEWHRVcTAyS3EvY2p2Z0NTUGlWcXRrbzZiZFFoSgpnZ21ocjVmMjcxOU5TanlvRDNrVG5RZVd2RElZZTV3M1dRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==\"},\"kind\":\"Secret\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\",\"linkerd.io/identity-issuer-expiry\":\"2020-12-04T11:48:54Z\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"identity\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-identity-issuer\",\"namespace\":\"linkerd\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                            "linkerd.io/identity-issuer-expiry": "2020-12-04T11:48:54Z"
                        },
                        "creationTimestamp": "2019-12-05T20:02:37Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-identity-issuer",
                        "namespace": "linkerd",
                        "resourceVersion": "44623",
                        "selfLink": "/api/v1/namespaces/linkerd/secrets/linkerd-identity-issuer",
                        "uid": "7dfbc598-c987-4b4d-85bc-87ce26d01c8d"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::linkerd/linkerd-identity",
                "custom": true,
                "id": "linkerd/linkerd-identity",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-identity",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "grpc",
                                "port": 8080,
                                "targetPort": 8080
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "identity"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "identity",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-identity",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "grpc",
                                    "port": 8080,
                                    "targetPort": 8080
                                }
                            ],
                            "selector": {
                                "linkerd.io/control-plane-component": "identity"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"identity\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-identity\",\"namespace\":\"linkerd\"},\"spec\":{\"ports\":[{\"name\":\"grpc\",\"port\":8080,\"targetPort\":8080}],\"selector\":{\"linkerd.io/control-plane-component\":\"identity\"},\"type\":\"ClusterIP\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:43Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-identity",
                        "namespace": "linkerd",
                        "resourceVersion": "44639",
                        "selfLink": "/api/v1/namespaces/linkerd/services/linkerd-identity",
                        "uid": "777cb17f-4b7f-4560-9d26-2bce322f2dc2"
                    },
                    "spec": {
                        "clusterIP": "10.245.12.104",
                        "ports": [
                            {
                                "name": "grpc",
                                "port": 8080,
                                "protocol": "TCP",
                                "targetPort": 8080
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "identity"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik",
                "custom": true,
                "id": "traefik",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "enabled"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "traefik"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/inject": "enabled"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "traefik"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"linkerd.io/inject\":\"enabled\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"traefik\"}}\n",
                            "linkerd.io/inject": "enabled"
                        },
                        "creationTimestamp": "2019-12-05T21:36:21Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "traefik",
                        "resourceVersion": "59123",
                        "selfLink": "/api/v1/namespaces/traefik",
                        "uid": "5aae8f7c-cba4-486b-811d-005addc92d7b"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::pulumi:pulumi:Stack::brewed-here-cluster",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::linkerd/linkerd-heartbeat",
                "custom": true,
                "id": "linkerd/linkerd-heartbeat",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:Role",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-heartbeat",
                        "namespace": "linkerd"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "linkerd-config"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-heartbeat",
                            "namespace": "linkerd"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "linkerd-config"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-heartbeat\",\"namespace\":\"linkerd\"},\"rules\":[{\"apiGroups\":[\"\"],\"resourceNames\":[\"linkerd-config\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:38Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-heartbeat",
                        "namespace": "linkerd",
                        "resourceVersion": "44624",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/linkerd/roles/linkerd-heartbeat",
                        "uid": "b434210e-7d08-4a1f-a65e-b33cf714cecc"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "linkerd-config"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Namespace::linkerd",
                "custom": true,
                "id": "linkerd",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "disabled"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "config.linkerd.io/admission-webhooks": "disabled",
                            "linkerd.io/is-control-plane": "true"
                        },
                        "name": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/inject": "disabled"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "config.linkerd.io/admission-webhooks": "disabled",
                                "linkerd.io/is-control-plane": "true"
                            },
                            "name": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"linkerd.io/inject\":\"disabled\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"config.linkerd.io/admission-webhooks\":\"disabled\",\"linkerd.io/is-control-plane\":\"true\"},\"name\":\"linkerd\"}}\n",
                            "linkerd.io/inject": "disabled"
                        },
                        "creationTimestamp": "2019-12-05T20:02:08Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "config.linkerd.io/admission-webhooks": "disabled",
                            "linkerd.io/is-control-plane": "true"
                        },
                        "name": "linkerd",
                        "resourceVersion": "44528",
                        "selfLink": "/api/v1/namespaces/linkerd",
                        "uid": "4587b350-6331-4c3f-9d8e-0b079b872301"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::linkerd/linkerd-proxy-injector",
                "custom": true,
                "id": "linkerd/linkerd-proxy-injector",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-proxy-injector",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "proxy-injector",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-proxy-injector",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"proxy-injector\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-proxy-injector\",\"namespace\":\"linkerd\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:10Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-proxy-injector",
                        "namespace": "linkerd",
                        "resourceVersion": "44549",
                        "selfLink": "/api/v1/namespaces/linkerd/serviceaccounts/linkerd-proxy-injector",
                        "uid": "d37a25c7-215d-46d0-812e-d431843e7c20"
                    },
                    "secrets": [
                        {
                            "name": "linkerd-proxy-injector-token-rbffv"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::linkerd-linkerd-tap",
                "custom": true,
                "id": "linkerd-linkerd-tap",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-tap"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-tap"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-tap"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "linkerd-linkerd-tap"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-tap",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-tap\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"linkerd-linkerd-tap\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-tap\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:25Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-tap",
                        "resourceVersion": "44597",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/linkerd-linkerd-tap",
                        "uid": "17521c5b-c648-483a-83f6-d65fabcdf26c"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-tap"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::linkerd-linkerd-prometheus",
                "custom": true,
                "id": "linkerd-linkerd-prometheus",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-prometheus"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-prometheus"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-prometheus",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "prometheus",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-prometheus"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "linkerd-linkerd-prometheus"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-prometheus",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"prometheus\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-prometheus\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"linkerd-linkerd-prometheus\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-prometheus\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:23Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-prometheus",
                        "resourceVersion": "44594",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/linkerd-linkerd-prometheus",
                        "uid": "d28155a9-665b-4275-a130-c867f3a37f54"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-prometheus"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-prometheus",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::linkerd/linkerd-destination",
                "custom": true,
                "id": "linkerd/linkerd-destination",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "destination",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-destination",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "destination",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-destination",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"destination\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-destination\",\"namespace\":\"linkerd\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:13Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "destination",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-destination",
                        "namespace": "linkerd",
                        "resourceVersion": "44565",
                        "selfLink": "/api/v1/namespaces/linkerd/serviceaccounts/linkerd-destination",
                        "uid": "38828970-9769-45f6-985a-e24564eda47c"
                    },
                    "secrets": [
                        {
                            "name": "linkerd-destination-token-9m676"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::linkerd/linkerd-grafana",
                "custom": true,
                "id": "linkerd/linkerd-grafana",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "grafana",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-grafana",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "grafana"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "grafana",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-grafana",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 3000,
                                    "targetPort": 3000
                                }
                            ],
                            "selector": {
                                "linkerd.io/control-plane-component": "grafana"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"grafana\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-grafana\",\"namespace\":\"linkerd\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":3000,\"targetPort\":3000}],\"selector\":{\"linkerd.io/control-plane-component\":\"grafana\"},\"type\":\"ClusterIP\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:45Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "grafana",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-grafana",
                        "namespace": "linkerd",
                        "resourceVersion": "44651",
                        "selfLink": "/api/v1/namespaces/linkerd/services/linkerd-grafana",
                        "uid": "ce9936b5-8736-4016-88e7-e2a6abc4044e"
                    },
                    "spec": {
                        "clusterIP": "10.245.244.218",
                        "ports": [
                            {
                                "name": "http",
                                "port": 3000,
                                "protocol": "TCP",
                                "targetPort": 3000
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "grafana"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::linkerd/linkerd-prometheus",
                "custom": true,
                "id": "linkerd/linkerd-prometheus",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-prometheus",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "prometheus",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-prometheus",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"prometheus\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-prometheus\",\"namespace\":\"linkerd\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:19Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-prometheus",
                        "namespace": "linkerd",
                        "resourceVersion": "44583",
                        "selfLink": "/api/v1/namespaces/linkerd/serviceaccounts/linkerd-prometheus",
                        "uid": "25439be6-db0e-4c77-9f5c-d51e3deabb27"
                    },
                    "secrets": [
                        {
                            "name": "linkerd-prometheus-token-79gvc"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::linkerd/linkerd-identity",
                "custom": true,
                "id": "linkerd/linkerd-identity",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-identity",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "identity",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-identity",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"identity\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-identity\",\"namespace\":\"linkerd\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:17Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-identity",
                        "namespace": "linkerd",
                        "resourceVersion": "44577",
                        "selfLink": "/api/v1/namespaces/linkerd/serviceaccounts/linkerd-identity",
                        "uid": "2764af8c-a49a-4060-95c9-eaae7e30cb1c"
                    },
                    "secrets": [
                        {
                            "name": "linkerd-identity-token-qbgvq"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::linkerd/linkerd-prometheus",
                "custom": true,
                "id": "linkerd/linkerd-prometheus",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-prometheus",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "admin-http",
                                "port": 9090,
                                "targetPort": 9090
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "prometheus"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "prometheus",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-prometheus",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "admin-http",
                                    "port": 9090,
                                    "targetPort": 9090
                                }
                            ],
                            "selector": {
                                "linkerd.io/control-plane-component": "prometheus"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"prometheus\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-prometheus\",\"namespace\":\"linkerd\"},\"spec\":{\"ports\":[{\"name\":\"admin-http\",\"port\":9090,\"targetPort\":9090}],\"selector\":{\"linkerd.io/control-plane-component\":\"prometheus\"},\"type\":\"ClusterIP\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:43Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-prometheus",
                        "namespace": "linkerd",
                        "resourceVersion": "44643",
                        "selfLink": "/api/v1/namespaces/linkerd/services/linkerd-prometheus",
                        "uid": "7e526715-36fb-47fa-8e63-1e612d2c92ec"
                    },
                    "spec": {
                        "clusterIP": "10.245.190.255",
                        "ports": [
                            {
                                "name": "admin-http",
                                "port": 9090,
                                "protocol": "TCP",
                                "targetPort": 9090
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "prometheus"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::linkerd/linkerd-sp-validator",
                "custom": true,
                "id": "linkerd/linkerd-sp-validator",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-sp-validator",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "sp-validator",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-sp-validator",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"sp-validator\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-sp-validator\",\"namespace\":\"linkerd\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:11Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-sp-validator",
                        "namespace": "linkerd",
                        "resourceVersion": "44557",
                        "selfLink": "/api/v1/namespaces/linkerd/serviceaccounts/linkerd-sp-validator",
                        "uid": "602d05e5-2380-4209-8496-fdf232685bb3"
                    },
                    "secrets": [
                        {
                            "name": "linkerd-sp-validator-token-2kpd4"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::linkerd/linkerd-web",
                "custom": true,
                "id": "linkerd/linkerd-web",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "web",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-web",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "web",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-web",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"web\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-web\",\"namespace\":\"linkerd\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:08Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "web",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-web",
                        "namespace": "linkerd",
                        "resourceVersion": "44534",
                        "selfLink": "/api/v1/namespaces/linkerd/serviceaccounts/linkerd-web",
                        "uid": "5e93c48c-3d4b-48bc-81b8-736c637f01ad"
                    },
                    "secrets": [
                        {
                            "name": "linkerd-web-token-l5k52"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::linkerd/linkerd-psp",
                "custom": true,
                "id": "linkerd/linkerd-psp",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:RoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-psp",
                        "namespace": "linkerd"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "linkerd-psp"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-controller",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-destination",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-grafana",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-heartbeat",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-identity",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-prometheus",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-proxy-injector",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-sp-validator",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-web",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-psp",
                            "namespace": "linkerd"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "linkerd-psp"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-controller",
                                "namespace": "linkerd"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-destination",
                                "namespace": "linkerd"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-grafana",
                                "namespace": "linkerd"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-heartbeat",
                                "namespace": "linkerd"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-identity",
                                "namespace": "linkerd"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-prometheus",
                                "namespace": "linkerd"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-proxy-injector",
                                "namespace": "linkerd"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-sp-validator",
                                "namespace": "linkerd"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-tap",
                                "namespace": "linkerd"
                            },
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-web",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-psp\",\"namespace\":\"linkerd\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"linkerd-psp\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-controller\",\"namespace\":\"linkerd\"},{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-destination\",\"namespace\":\"linkerd\"},{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-grafana\",\"namespace\":\"linkerd\"},{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-heartbeat\",\"namespace\":\"linkerd\"},{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-identity\",\"namespace\":\"linkerd\"},{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-prometheus\",\"namespace\":\"linkerd\"},{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-proxy-injector\",\"namespace\":\"linkerd\"},{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-sp-validator\",\"namespace\":\"linkerd\"},{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-tap\",\"namespace\":\"linkerd\"},{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-web\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:56Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-psp",
                        "namespace": "linkerd",
                        "resourceVersion": "44673",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/linkerd/rolebindings/linkerd-psp",
                        "uid": "81c48ee6-6199-42bf-923e-125a79a472eb"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "linkerd-psp"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-controller",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-destination",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-grafana",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-heartbeat",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-identity",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-prometheus",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-proxy-injector",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-sp-validator",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        },
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-web",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::kube-system/linkerd-linkerd-tap-auth-reader",
                "custom": true,
                "id": "kube-system/linkerd-linkerd-tap-auth-reader",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:RoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-tap-auth-reader",
                        "namespace": "kube-system"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "extension-apiserver-authentication-reader"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-tap-auth-reader",
                            "namespace": "kube-system"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "extension-apiserver-authentication-reader"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-tap",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-tap-auth-reader\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"extension-apiserver-authentication-reader\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-tap\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:55Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-tap-auth-reader",
                        "namespace": "kube-system",
                        "resourceVersion": "44669",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/linkerd-linkerd-tap-auth-reader",
                        "uid": "2456dd53-5772-4e13-a8d7-3dd7ad709902"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "extension-apiserver-authentication-reader"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::linkerd-linkerd-tap-admin",
                "custom": true,
                "id": "linkerd-linkerd-tap-admin",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-tap-admin"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "tap.linkerd.io"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-tap-admin"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "tap.linkerd.io"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-tap-admin\"},\"rules\":[{\"apiGroups\":[\"tap.linkerd.io\"],\"resources\":[\"*\"],\"verbs\":[\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:23Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-tap-admin",
                        "resourceVersion": "44593",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/linkerd-linkerd-tap-admin",
                        "uid": "b4b1da4b-bd1e-4c08-a39c-46e7920ccb0b"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "tap.linkerd.io"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::linkerd/linkerd-heartbeat",
                "custom": true,
                "id": "linkerd/linkerd-heartbeat",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "heartbeat",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-heartbeat",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "heartbeat",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-heartbeat",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"heartbeat\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-heartbeat\",\"namespace\":\"linkerd\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:10Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "heartbeat",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-heartbeat",
                        "namespace": "linkerd",
                        "resourceVersion": "44552",
                        "selfLink": "/api/v1/namespaces/linkerd/serviceaccounts/linkerd-heartbeat",
                        "uid": "91b26b25-c8fa-4924-af47-3df09dbc41de"
                    },
                    "secrets": [
                        {
                            "name": "linkerd-heartbeat-token-zckmh"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:core/v1:ServiceAccount::metrics-server",
                "custom": true,
                "id": "kube-system/metrics-server",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app": "metrics-server",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "metrics-server",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T07:30:58Z",
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server",
                        "namespace": "kube-system",
                        "resourceVersion": "1216",
                        "selfLink": "/api/v1/namespaces/kube-system/serviceaccounts/metrics-server",
                        "uid": "dd8baf30-bfe4-4a1a-ba45-b116019c48f2"
                    },
                    "secrets": [
                        {
                            "name": "metrics-server-token-zrkhx"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac::metrics-server",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apiregistration/v1:APIService::v1alpha1.tap.linkerd.io",
                "custom": true,
                "id": "v1alpha1.tap.linkerd.io",
                "type": "kubernetes:apiregistration/v1:APIService",
                "inputs": {
                    "apiVersion": "apiregistration.k8s.io/v1",
                    "kind": "APIService",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "v1alpha1.tap.linkerd.io"
                    },
                    "spec": {
                        "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lSQU1kNlNYYy8vNTFWMWtRVGt1d2JQN3d3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWGJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDNXpkbU13SGhjTk1Ua3hNakEyTURRegpNREF3V2hjTk1qQXhNakExTURRek1EQXdXakFpTVNBd0hnWURWUVFERXhkc2FXNXJaWEprTFhSaGNDNXNhVzVyClpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT0RnTGJLeFZzOUoKbzhqbXUrNmlZeGp2QTVJb09Vcmt0Y2ZwMFo5a1FEaEJGSVd1SnRSTlpYK0lCVFRva1JHeWtobTZYRUtNWkdRYQpBNFlkSmRLZmZpMlBwZUdvZmVnRnoybWFidGxDeHVNRElqNlhpa2dpMDRMa1dFTUJHUmZud3dYSHBNbXQ1NHlkCmRqcW4wYmhKbmgxSTB0L3pBeXdSdS82WFUrUzd6dWwrTFRjakJQb1BuYytYMW42b3ZrYWxvUXNUcWNjc2tudmgKRHBZWmRHRDd1dktQZ3hzRno1aFB5Ym9EY2REaDQ1cDh6b0JNQTIwWEFiWWoxVnFHNjRMMHFQNi8zSGxCNExxVgo1YXp4MjlEQ3ZaeS9NOTl1bnI5ZEsrQVBqbG92K3RDSXZsOGdtK3BBT3JaZDg2VzBPYTJDSW83dktBRU1WMG5zCjJ4V1Nwa3ZnS0s4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFDQTJ3TG9uR1BZU29uek5qVXNMQmJxSVdTMlBwYWRHQ0JzTUgyRFFFdmt5NzRYN0VBZlNrVXpWcS9pCkRGbVlQQTFOY3RJVlNlTksvY1VUZlpRaWh6YnFkMzJjZHFyZWNseVNUaEpEc2FXclBMUkpQVFRrZDE4VWRKQzMKNm1BQmVyNFcvZklkK2QrMUNOM003dm9ZajFkYURIdk1xUnRTcnVaZEw2aUlSdWVLSFZUWERUS2ZacU1kejlCaApxdWZwS2ZIelJWaE5ORzFoTFlmR2ViOE4wK21FeXo4NzM1aWZpS1RLQkUwL1lwdi90UG5vb0lFZ2NQaGUxZklMCkQ0Z1pRTWYrT0N4dWo2SlJ6QUpqakhyMmtia1BoZWgwQ08yRk9iK3V0U3dsQ0YrZ1JUVEVLa1lmZUJKREowejQKWm03RWQ0K2M2b2lWdU9kQm1LSVJja2JjSjhKOQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                        "group": "tap.linkerd.io",
                        "groupPriorityMinimum": 1000,
                        "service": {
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        },
                        "version": "v1alpha1",
                        "versionPriority": 100
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiregistration.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiregistration.k8s.io/v1",
                        "kind": "APIService",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "v1alpha1.tap.linkerd.io"
                        },
                        "spec": {
                            "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lSQU1kNlNYYy8vNTFWMWtRVGt1d2JQN3d3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWGJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDNXpkbU13SGhjTk1Ua3hNakEyTURRegpNREF3V2hjTk1qQXhNakExTURRek1EQXdXakFpTVNBd0hnWURWUVFERXhkc2FXNXJaWEprTFhSaGNDNXNhVzVyClpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT0RnTGJLeFZzOUoKbzhqbXUrNmlZeGp2QTVJb09Vcmt0Y2ZwMFo5a1FEaEJGSVd1SnRSTlpYK0lCVFRva1JHeWtobTZYRUtNWkdRYQpBNFlkSmRLZmZpMlBwZUdvZmVnRnoybWFidGxDeHVNRElqNlhpa2dpMDRMa1dFTUJHUmZud3dYSHBNbXQ1NHlkCmRqcW4wYmhKbmgxSTB0L3pBeXdSdS82WFUrUzd6dWwrTFRjakJQb1BuYytYMW42b3ZrYWxvUXNUcWNjc2tudmgKRHBZWmRHRDd1dktQZ3hzRno1aFB5Ym9EY2REaDQ1cDh6b0JNQTIwWEFiWWoxVnFHNjRMMHFQNi8zSGxCNExxVgo1YXp4MjlEQ3ZaeS9NOTl1bnI5ZEsrQVBqbG92K3RDSXZsOGdtK3BBT3JaZDg2VzBPYTJDSW83dktBRU1WMG5zCjJ4V1Nwa3ZnS0s4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFDQTJ3TG9uR1BZU29uek5qVXNMQmJxSVdTMlBwYWRHQ0JzTUgyRFFFdmt5NzRYN0VBZlNrVXpWcS9pCkRGbVlQQTFOY3RJVlNlTksvY1VUZlpRaWh6YnFkMzJjZHFyZWNseVNUaEpEc2FXclBMUkpQVFRrZDE4VWRKQzMKNm1BQmVyNFcvZklkK2QrMUNOM003dm9ZajFkYURIdk1xUnRTcnVaZEw2aUlSdWVLSFZUWERUS2ZacU1kejlCaApxdWZwS2ZIelJWaE5ORzFoTFlmR2ViOE4wK21FeXo4NzM1aWZpS1RLQkUwL1lwdi90UG5vb0lFZ2NQaGUxZklMCkQ0Z1pRTWYrT0N4dWo2SlJ6QUpqakhyMmtia1BoZWgwQ08yRk9iK3V0U3dsQ0YrZ1JUVEVLa1lmZUJKREowejQKWm03RWQ0K2M2b2lWdU9kQm1LSVJja2JjSjhKOQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "group": "tap.linkerd.io",
                            "groupPriorityMinimum": 1000,
                            "service": {
                                "name": "linkerd-tap",
                                "namespace": "linkerd"
                            },
                            "version": "v1alpha1",
                            "versionPriority": 100
                        }
                    },
                    "apiVersion": "apiregistration.k8s.io/v1",
                    "kind": "APIService",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiregistration.k8s.io/v1\",\"kind\":\"APIService\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"v1alpha1.tap.linkerd.io\"},\"spec\":{\"caBundle\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lSQU1kNlNYYy8vNTFWMWtRVGt1d2JQN3d3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWGJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDNXpkbU13SGhjTk1Ua3hNakEyTURRegpNREF3V2hjTk1qQXhNakExTURRek1EQXdXakFpTVNBd0hnWURWUVFERXhkc2FXNXJaWEprTFhSaGNDNXNhVzVyClpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT0RnTGJLeFZzOUoKbzhqbXUrNmlZeGp2QTVJb09Vcmt0Y2ZwMFo5a1FEaEJGSVd1SnRSTlpYK0lCVFRva1JHeWtobTZYRUtNWkdRYQpBNFlkSmRLZmZpMlBwZUdvZmVnRnoybWFidGxDeHVNRElqNlhpa2dpMDRMa1dFTUJHUmZud3dYSHBNbXQ1NHlkCmRqcW4wYmhKbmgxSTB0L3pBeXdSdS82WFUrUzd6dWwrTFRjakJQb1BuYytYMW42b3ZrYWxvUXNUcWNjc2tudmgKRHBZWmRHRDd1dktQZ3hzRno1aFB5Ym9EY2REaDQ1cDh6b0JNQTIwWEFiWWoxVnFHNjRMMHFQNi8zSGxCNExxVgo1YXp4MjlEQ3ZaeS9NOTl1bnI5ZEsrQVBqbG92K3RDSXZsOGdtK3BBT3JaZDg2VzBPYTJDSW83dktBRU1WMG5zCjJ4V1Nwa3ZnS0s4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFDQTJ3TG9uR1BZU29uek5qVXNMQmJxSVdTMlBwYWRHQ0JzTUgyRFFFdmt5NzRYN0VBZlNrVXpWcS9pCkRGbVlQQTFOY3RJVlNlTksvY1VUZlpRaWh6YnFkMzJjZHFyZWNseVNUaEpEc2FXclBMUkpQVFRrZDE4VWRKQzMKNm1BQmVyNFcvZklkK2QrMUNOM003dm9ZajFkYURIdk1xUnRTcnVaZEw2aUlSdWVLSFZUWERUS2ZacU1kejlCaApxdWZwS2ZIelJWaE5ORzFoTFlmR2ViOE4wK21FeXo4NzM1aWZpS1RLQkUwL1lwdi90UG5vb0lFZ2NQaGUxZklMCkQ0Z1pRTWYrT0N4dWo2SlJ6QUpqakhyMmtia1BoZWgwQ08yRk9iK3V0U3dsQ0YrZ1JUVEVLa1lmZUJKREowejQKWm03RWQ0K2M2b2lWdU9kQm1LSVJja2JjSjhKOQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"group\":\"tap.linkerd.io\",\"groupPriorityMinimum\":1000,\"service\":{\"name\":\"linkerd-tap\",\"namespace\":\"linkerd\"},\"version\":\"v1alpha1\",\"versionPriority\":100}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:01Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "v1alpha1.tap.linkerd.io",
                        "resourceVersion": "75561",
                        "selfLink": "/apis/apiregistration.k8s.io/v1/apiservices/v1alpha1.tap.linkerd.io",
                        "uid": "fe3b7485-f08f-4fcc-8e62-d72fc8c4c9c7"
                    },
                    "spec": {
                        "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lSQU1kNlNYYy8vNTFWMWtRVGt1d2JQN3d3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWGJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDNXpkbU13SGhjTk1Ua3hNakEyTURRegpNREF3V2hjTk1qQXhNakExTURRek1EQXdXakFpTVNBd0hnWURWUVFERXhkc2FXNXJaWEprTFhSaGNDNXNhVzVyClpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT0RnTGJLeFZzOUoKbzhqbXUrNmlZeGp2QTVJb09Vcmt0Y2ZwMFo5a1FEaEJGSVd1SnRSTlpYK0lCVFRva1JHeWtobTZYRUtNWkdRYQpBNFlkSmRLZmZpMlBwZUdvZmVnRnoybWFidGxDeHVNRElqNlhpa2dpMDRMa1dFTUJHUmZud3dYSHBNbXQ1NHlkCmRqcW4wYmhKbmgxSTB0L3pBeXdSdS82WFUrUzd6dWwrTFRjakJQb1BuYytYMW42b3ZrYWxvUXNUcWNjc2tudmgKRHBZWmRHRDd1dktQZ3hzRno1aFB5Ym9EY2REaDQ1cDh6b0JNQTIwWEFiWWoxVnFHNjRMMHFQNi8zSGxCNExxVgo1YXp4MjlEQ3ZaeS9NOTl1bnI5ZEsrQVBqbG92K3RDSXZsOGdtK3BBT3JaZDg2VzBPYTJDSW83dktBRU1WMG5zCjJ4V1Nwa3ZnS0s4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFDQTJ3TG9uR1BZU29uek5qVXNMQmJxSVdTMlBwYWRHQ0JzTUgyRFFFdmt5NzRYN0VBZlNrVXpWcS9pCkRGbVlQQTFOY3RJVlNlTksvY1VUZlpRaWh6YnFkMzJjZHFyZWNseVNUaEpEc2FXclBMUkpQVFRrZDE4VWRKQzMKNm1BQmVyNFcvZklkK2QrMUNOM003dm9ZajFkYURIdk1xUnRTcnVaZEw2aUlSdWVLSFZUWERUS2ZacU1kejlCaApxdWZwS2ZIelJWaE5ORzFoTFlmR2ViOE4wK21FeXo4NzM1aWZpS1RLQkUwL1lwdi90UG5vb0lFZ2NQaGUxZklMCkQ0Z1pRTWYrT0N4dWo2SlJ6QUpqakhyMmtia1BoZWgwQ08yRk9iK3V0U3dsQ0YrZ1JUVEVLa1lmZUJKREowejQKWm03RWQ0K2M2b2lWdU9kQm1LSVJja2JjSjhKOQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                        "group": "tap.linkerd.io",
                        "groupPriorityMinimum": 1000,
                        "service": {
                            "name": "linkerd-tap",
                            "namespace": "linkerd",
                            "port": 443
                        },
                        "version": "v1alpha1",
                        "versionPriority": 100
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:03:34Z",
                                "message": "all checks passed",
                                "reason": "Passed",
                                "status": "True",
                                "type": "Available"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::linkerd-linkerd-prometheus",
                "custom": true,
                "id": "linkerd-linkerd-prometheus",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-prometheus"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes",
                                "nodes/proxy",
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "prometheus",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-prometheus"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "nodes/proxy",
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"prometheus\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-prometheus\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"nodes/proxy\",\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:29Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-prometheus",
                        "resourceVersion": "44608",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/linkerd-linkerd-prometheus",
                        "uid": "0607aeb4-810b-4518-aef0-715685f39a84"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes",
                                "nodes/proxy",
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::linkerd-linkerd-proxy-injector",
                "custom": true,
                "id": "linkerd-linkerd-proxy-injector",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-proxy-injector"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-proxy-injector"
                    },
                    "subjects": [
                        {
                            "apiGroup": "",
                            "kind": "ServiceAccount",
                            "name": "linkerd-proxy-injector",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "proxy-injector",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-proxy-injector"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "linkerd-linkerd-proxy-injector"
                        },
                        "subjects": [
                            {
                                "apiGroup": "",
                                "kind": "ServiceAccount",
                                "name": "linkerd-proxy-injector",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"proxy-injector\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-proxy-injector\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"linkerd-linkerd-proxy-injector\"},\"subjects\":[{\"apiGroup\":\"\",\"kind\":\"ServiceAccount\",\"name\":\"linkerd-proxy-injector\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:05Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-proxy-injector",
                        "resourceVersion": "44523",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/linkerd-linkerd-proxy-injector",
                        "uid": "f52026d8-1071-43b7-bd59-144310071f9e"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-proxy-injector"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-proxy-injector",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::linkerd-linkerd-identity",
                "custom": true,
                "id": "linkerd-linkerd-identity",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-identity"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-identity"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-identity",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "identity",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-identity"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "linkerd-linkerd-identity"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-identity",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"identity\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-identity\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"linkerd-linkerd-identity\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-identity\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:01Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-identity",
                        "resourceVersion": "44512",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/linkerd-linkerd-identity",
                        "uid": "e60553a4-1f43-4452-baf8-1a1a83db92c6"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-identity"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-identity",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinition::trafficsplits.split.smi-spec.io",
                "custom": true,
                "id": "trafficsplits.split.smi-spec.io",
                "type": "kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1beta1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "trafficsplits.split.smi-spec.io"
                    },
                    "spec": {
                        "additionalPrinterColumns": [
                            {
                                "JSONPath": ".spec.service",
                                "description": "The apex service of this split.",
                                "name": "Service",
                                "type": "string"
                            }
                        ],
                        "group": "split.smi-spec.io",
                        "names": {
                            "kind": "TrafficSplit",
                            "plural": "trafficsplits",
                            "shortNames": [
                                "ts"
                            ],
                            "singular": "trafficsplit"
                        },
                        "scope": "Namespaced",
                        "version": "v1alpha1"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1beta1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1beta1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "trafficsplits.split.smi-spec.io"
                        },
                        "spec": {
                            "additionalPrinterColumns": [
                                {
                                    "JSONPath": ".spec.service",
                                    "description": "The apex service of this split.",
                                    "name": "Service",
                                    "type": "string"
                                }
                            ],
                            "group": "split.smi-spec.io",
                            "names": {
                                "kind": "TrafficSplit",
                                "plural": "trafficsplits",
                                "shortNames": [
                                    "ts"
                                ],
                                "singular": "trafficsplit"
                            },
                            "scope": "Namespaced",
                            "version": "v1alpha1"
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1beta1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"trafficsplits.split.smi-spec.io\"},\"spec\":{\"additionalPrinterColumns\":[{\"JSONPath\":\".spec.service\",\"description\":\"The apex service of this split.\",\"name\":\"Service\",\"type\":\"string\"}],\"group\":\"split.smi-spec.io\",\"names\":{\"kind\":\"TrafficSplit\",\"plural\":\"trafficsplits\",\"shortNames\":[\"ts\"],\"singular\":\"trafficsplit\"},\"scope\":\"Namespaced\",\"version\":\"v1alpha1\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:30Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "trafficsplits.split.smi-spec.io",
                        "resourceVersion": "44612",
                        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/trafficsplits.split.smi-spec.io",
                        "uid": "b23857cb-2eba-4fb5-bb76-d69932667b26"
                    },
                    "spec": {
                        "additionalPrinterColumns": [
                            {
                                "JSONPath": ".spec.service",
                                "description": "The apex service of this split.",
                                "name": "Service",
                                "type": "string"
                            }
                        ],
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "split.smi-spec.io",
                        "names": {
                            "kind": "TrafficSplit",
                            "listKind": "TrafficSplitList",
                            "plural": "trafficsplits",
                            "shortNames": [
                                "ts"
                            ],
                            "singular": "trafficsplit"
                        },
                        "preserveUnknownFields": true,
                        "scope": "Namespaced",
                        "version": "v1alpha1",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "served": true,
                                "storage": true
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "kind": "TrafficSplit",
                            "listKind": "TrafficSplitList",
                            "plural": "trafficsplits",
                            "shortNames": [
                                "ts"
                            ],
                            "singular": "trafficsplit"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:02:30Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T20:02:30Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v1alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::linkerd-linkerd-web-admin",
                "custom": true,
                "id": "linkerd-linkerd-web-admin",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "web",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-web-admin"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-tap-admin"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-web",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "web",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-web-admin"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "linkerd-linkerd-tap-admin"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-web",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"web\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-web-admin\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"linkerd-linkerd-tap-admin\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-web\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:03Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "web",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-web-admin",
                        "resourceVersion": "44518",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/linkerd-linkerd-web-admin",
                        "uid": "f507972f-69d5-49a7-bc69-c971814d4356"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-tap-admin"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-web",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinition::serviceprofiles.linkerd.io",
                "custom": true,
                "id": "serviceprofiles.linkerd.io",
                "type": "kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1beta1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "serviceprofiles.linkerd.io"
                    },
                    "spec": {
                        "group": "linkerd.io",
                        "names": {
                            "kind": "ServiceProfile",
                            "plural": "serviceprofiles",
                            "shortNames": [
                                "sp"
                            ],
                            "singular": "serviceprofile"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1alpha2",
                                "served": true,
                                "storage": true
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1beta1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1beta1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "serviceprofiles.linkerd.io"
                        },
                        "spec": {
                            "group": "linkerd.io",
                            "names": {
                                "kind": "ServiceProfile",
                                "plural": "serviceprofiles",
                                "shortNames": [
                                    "sp"
                                ],
                                "singular": "serviceprofile"
                            },
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v1alpha1",
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1alpha2",
                                    "served": true,
                                    "storage": true
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1beta1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"serviceprofiles.linkerd.io\"},\"spec\":{\"group\":\"linkerd.io\",\"names\":{\"kind\":\"ServiceProfile\",\"plural\":\"serviceprofiles\",\"shortNames\":[\"sp\"],\"singular\":\"serviceprofile\"},\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1alpha1\",\"served\":true,\"storage\":false},{\"name\":\"v1alpha2\",\"served\":true,\"storage\":true}]}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:41Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "serviceprofiles.linkerd.io",
                        "resourceVersion": "44635",
                        "selfLink": "/apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/serviceprofiles.linkerd.io",
                        "uid": "63ecd4d3-b20a-4b50-8e0a-311b9041e0fa"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "linkerd.io",
                        "names": {
                            "kind": "ServiceProfile",
                            "listKind": "ServiceProfileList",
                            "plural": "serviceprofiles",
                            "shortNames": [
                                "sp"
                            ],
                            "singular": "serviceprofile"
                        },
                        "preserveUnknownFields": true,
                        "scope": "Namespaced",
                        "version": "v1alpha1",
                        "versions": [
                            {
                                "name": "v1alpha1",
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1alpha2",
                                "served": true,
                                "storage": true
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "kind": "ServiceProfile",
                            "listKind": "ServiceProfileList",
                            "plural": "serviceprofiles",
                            "shortNames": [
                                "sp"
                            ],
                            "singular": "serviceprofile"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:02:41Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T20:02:41Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v1alpha2"
                        ]
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:admissionregistration.k8s.io/v1beta1:MutatingWebhookConfiguration::linkerd-proxy-injector-webhook-config",
                "custom": true,
                "id": "linkerd-proxy-injector-webhook-config",
                "type": "kubernetes:admissionregistration.k8s.io/v1beta1:MutatingWebhookConfiguration",
                "inputs": {
                    "apiVersion": "admissionregistration.k8s.io/v1beta1",
                    "kind": "MutatingWebhookConfiguration",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-proxy-injector-webhook-config"
                    },
                    "webhooks": [
                        {
                            "clientConfig": {
                                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lRWHhsK2JpdUdkWW5GMW1wT3lNbHlOVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEU1TVRJd05qQTBNekF3TVZvWERUSXdNVEl3TlRBME16QXdNVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMZzg1TTFlS1dUNWF3MWVJSUVqbm9jQUJDMnNBNytOVEx3WU9TZGI5WlBraTVkUwp0Y3ZvWVJvUVVSdXoxSFg5L3VwWHk4NklyR0x1RDJDWHFTeU1HVEU5WVRlWnlwVURlVUN3Sk1HMWZEVUFtQkJWCmJuRklvTlFUbWViNFpEWm5FbHFMbnZOSWpmc0VZY3loRXRVY0QxbmdSR1F5NlNVYWxIekVyS0R4RFhOcDhENlIKR1hPalJMa05oWHAxdDdmYmp2MzdLMnZJRmdJRDA0ZzhGeSt5TEJUU2lFbU9DczJLMHZmLzBUZldNS3YwaFI1TApPejRabkFTU0Z5cGZ6QUhBbi84RlBFbnp0bG5neFU5bTZNeCtVdDllUkpZRHNscUEzKzMvVmJ3NnoxR081WDhRCm5NSzV2dFYrUWwwaytnSnBLVFNFTGRjS2NJekxFMTBnRUYxQ3pTMENBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUdHRGsyTjFJSVFnUmFYekVGWWo3clB6SS9CTHUxCk5ZaUxBWHZMY1F0cmo4WXZmT1VVVUhjbURXSjFuUnNzUzJRSi9Ra2JqTldYK2xuSDBEeUE2bG9WSHNNMXkvS0MKTGFsVXhWcEVnbkk4ODZpNkJhUy95NFBrQ0R1ZDBPZXMza2tEU3pNM2lXeVZkSFdlb2VmMzFrYlFURzVtTExGcgo1Ym9EVjJ5azVmL2t1VDdRNUFqakNhN3BpSjBrTjJoQk96MFZSamROb1IxM3hEbmMzeU94eEthNmU5UGJYRllPCkdHdDIrSVBacUxYaFFZRXE2T2YwSWRaOWpLK2ZVUmE2RS80dFJsU1c5MWd1NG1FYXYzRktrVUhIYmxEVDkrRVEKaE9zcnB5ZGN2NHdnYnRzU05aenRxNDgrVjUvSTVVZGhzVkk0OEpSVzJSMEVQeTluSG5OczJ0dnoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                "service": {
                                    "name": "linkerd-proxy-injector",
                                    "namespace": "linkerd",
                                    "path": "/"
                                }
                            },
                            "failurePolicy": "Ignore",
                            "name": "linkerd-proxy-injector.linkerd.io",
                            "namespaceSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "config.linkerd.io/admission-webhooks",
                                        "operator": "NotIn",
                                        "values": [
                                            "disabled"
                                        ]
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "apiGroups": [
                                        ""
                                    ],
                                    "apiVersions": [
                                        "v1"
                                    ],
                                    "operations": [
                                        "CREATE"
                                    ],
                                    "resources": [
                                        "pods"
                                    ]
                                }
                            ],
                            "sideEffects": "None"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "admissionregistration.k8s.io/v1beta1",
                    "__inputs": {
                        "apiVersion": "admissionregistration.k8s.io/v1beta1",
                        "kind": "MutatingWebhookConfiguration",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "proxy-injector",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-proxy-injector-webhook-config"
                        },
                        "webhooks": [
                            {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lRWHhsK2JpdUdkWW5GMW1wT3lNbHlOVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEU1TVRJd05qQTBNekF3TVZvWERUSXdNVEl3TlRBME16QXdNVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMZzg1TTFlS1dUNWF3MWVJSUVqbm9jQUJDMnNBNytOVEx3WU9TZGI5WlBraTVkUwp0Y3ZvWVJvUVVSdXoxSFg5L3VwWHk4NklyR0x1RDJDWHFTeU1HVEU5WVRlWnlwVURlVUN3Sk1HMWZEVUFtQkJWCmJuRklvTlFUbWViNFpEWm5FbHFMbnZOSWpmc0VZY3loRXRVY0QxbmdSR1F5NlNVYWxIekVyS0R4RFhOcDhENlIKR1hPalJMa05oWHAxdDdmYmp2MzdLMnZJRmdJRDA0ZzhGeSt5TEJUU2lFbU9DczJLMHZmLzBUZldNS3YwaFI1TApPejRabkFTU0Z5cGZ6QUhBbi84RlBFbnp0bG5neFU5bTZNeCtVdDllUkpZRHNscUEzKzMvVmJ3NnoxR081WDhRCm5NSzV2dFYrUWwwaytnSnBLVFNFTGRjS2NJekxFMTBnRUYxQ3pTMENBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUdHRGsyTjFJSVFnUmFYekVGWWo3clB6SS9CTHUxCk5ZaUxBWHZMY1F0cmo4WXZmT1VVVUhjbURXSjFuUnNzUzJRSi9Ra2JqTldYK2xuSDBEeUE2bG9WSHNNMXkvS0MKTGFsVXhWcEVnbkk4ODZpNkJhUy95NFBrQ0R1ZDBPZXMza2tEU3pNM2lXeVZkSFdlb2VmMzFrYlFURzVtTExGcgo1Ym9EVjJ5azVmL2t1VDdRNUFqakNhN3BpSjBrTjJoQk96MFZSamROb1IxM3hEbmMzeU94eEthNmU5UGJYRllPCkdHdDIrSVBacUxYaFFZRXE2T2YwSWRaOWpLK2ZVUmE2RS80dFJsU1c5MWd1NG1FYXYzRktrVUhIYmxEVDkrRVEKaE9zcnB5ZGN2NHdnYnRzU05aenRxNDgrVjUvSTVVZGhzVkk0OEpSVzJSMEVQeTluSG5OczJ0dnoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "linkerd-proxy-injector",
                                        "namespace": "linkerd",
                                        "path": "/"
                                    }
                                },
                                "failurePolicy": "Ignore",
                                "name": "linkerd-proxy-injector.linkerd.io",
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "config.linkerd.io/admission-webhooks",
                                            "operator": "NotIn",
                                            "values": [
                                                "disabled"
                                            ]
                                        }
                                    ]
                                },
                                "rules": [
                                    {
                                        "apiGroups": [
                                            ""
                                        ],
                                        "apiVersions": [
                                            "v1"
                                        ],
                                        "operations": [
                                            "CREATE"
                                        ],
                                        "resources": [
                                            "pods"
                                        ]
                                    }
                                ],
                                "sideEffects": "None"
                            }
                        ]
                    },
                    "apiVersion": "admissionregistration.k8s.io/v1beta1",
                    "kind": "MutatingWebhookConfiguration",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"admissionregistration.k8s.io/v1beta1\",\"kind\":\"MutatingWebhookConfiguration\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"proxy-injector\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-proxy-injector-webhook-config\"},\"webhooks\":[{\"clientConfig\":{\"caBundle\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lRWHhsK2JpdUdkWW5GMW1wT3lNbHlOVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEU1TVRJd05qQTBNekF3TVZvWERUSXdNVEl3TlRBME16QXdNVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMZzg1TTFlS1dUNWF3MWVJSUVqbm9jQUJDMnNBNytOVEx3WU9TZGI5WlBraTVkUwp0Y3ZvWVJvUVVSdXoxSFg5L3VwWHk4NklyR0x1RDJDWHFTeU1HVEU5WVRlWnlwVURlVUN3Sk1HMWZEVUFtQkJWCmJuRklvTlFUbWViNFpEWm5FbHFMbnZOSWpmc0VZY3loRXRVY0QxbmdSR1F5NlNVYWxIekVyS0R4RFhOcDhENlIKR1hPalJMa05oWHAxdDdmYmp2MzdLMnZJRmdJRDA0ZzhGeSt5TEJUU2lFbU9DczJLMHZmLzBUZldNS3YwaFI1TApPejRabkFTU0Z5cGZ6QUhBbi84RlBFbnp0bG5neFU5bTZNeCtVdDllUkpZRHNscUEzKzMvVmJ3NnoxR081WDhRCm5NSzV2dFYrUWwwaytnSnBLVFNFTGRjS2NJekxFMTBnRUYxQ3pTMENBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUdHRGsyTjFJSVFnUmFYekVGWWo3clB6SS9CTHUxCk5ZaUxBWHZMY1F0cmo4WXZmT1VVVUhjbURXSjFuUnNzUzJRSi9Ra2JqTldYK2xuSDBEeUE2bG9WSHNNMXkvS0MKTGFsVXhWcEVnbkk4ODZpNkJhUy95NFBrQ0R1ZDBPZXMza2tEU3pNM2lXeVZkSFdlb2VmMzFrYlFURzVtTExGcgo1Ym9EVjJ5azVmL2t1VDdRNUFqakNhN3BpSjBrTjJoQk96MFZSamROb1IxM3hEbmMzeU94eEthNmU5UGJYRllPCkdHdDIrSVBacUxYaFFZRXE2T2YwSWRaOWpLK2ZVUmE2RS80dFJsU1c5MWd1NG1FYXYzRktrVUhIYmxEVDkrRVEKaE9zcnB5ZGN2NHdnYnRzU05aenRxNDgrVjUvSTVVZGhzVkk0OEpSVzJSMEVQeTluSG5OczJ0dnoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\"service\":{\"name\":\"linkerd-proxy-injector\",\"namespace\":\"linkerd\",\"path\":\"/\"}},\"failurePolicy\":\"Ignore\",\"name\":\"linkerd-proxy-injector.linkerd.io\",\"namespaceSelector\":{\"matchExpressions\":[{\"key\":\"config.linkerd.io/admission-webhooks\",\"operator\":\"NotIn\",\"values\":[\"disabled\"]}]},\"rules\":[{\"apiGroups\":[\"\"],\"apiVersions\":[\"v1\"],\"operations\":[\"CREATE\"],\"resources\":[\"pods\"]}],\"sideEffects\":\"None\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:43Z",
                        "generation": 16,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-proxy-injector-webhook-config",
                        "resourceVersion": "75451",
                        "selfLink": "/apis/admissionregistration.k8s.io/v1beta1/mutatingwebhookconfigurations/linkerd-proxy-injector-webhook-config",
                        "uid": "329e4d3b-47f1-4550-9521-943d9b5a44ff"
                    },
                    "webhooks": [
                        {
                            "admissionReviewVersions": [
                                "v1beta1"
                            ],
                            "clientConfig": {
                                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lRWHhsK2JpdUdkWW5GMW1wT3lNbHlOVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEU1TVRJd05qQTBNekF3TVZvWERUSXdNVEl3TlRBME16QXdNVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMZzg1TTFlS1dUNWF3MWVJSUVqbm9jQUJDMnNBNytOVEx3WU9TZGI5WlBraTVkUwp0Y3ZvWVJvUVVSdXoxSFg5L3VwWHk4NklyR0x1RDJDWHFTeU1HVEU5WVRlWnlwVURlVUN3Sk1HMWZEVUFtQkJWCmJuRklvTlFUbWViNFpEWm5FbHFMbnZOSWpmc0VZY3loRXRVY0QxbmdSR1F5NlNVYWxIekVyS0R4RFhOcDhENlIKR1hPalJMa05oWHAxdDdmYmp2MzdLMnZJRmdJRDA0ZzhGeSt5TEJUU2lFbU9DczJLMHZmLzBUZldNS3YwaFI1TApPejRabkFTU0Z5cGZ6QUhBbi84RlBFbnp0bG5neFU5bTZNeCtVdDllUkpZRHNscUEzKzMvVmJ3NnoxR081WDhRCm5NSzV2dFYrUWwwaytnSnBLVFNFTGRjS2NJekxFMTBnRUYxQ3pTMENBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUdHRGsyTjFJSVFnUmFYekVGWWo3clB6SS9CTHUxCk5ZaUxBWHZMY1F0cmo4WXZmT1VVVUhjbURXSjFuUnNzUzJRSi9Ra2JqTldYK2xuSDBEeUE2bG9WSHNNMXkvS0MKTGFsVXhWcEVnbkk4ODZpNkJhUy95NFBrQ0R1ZDBPZXMza2tEU3pNM2lXeVZkSFdlb2VmMzFrYlFURzVtTExGcgo1Ym9EVjJ5azVmL2t1VDdRNUFqakNhN3BpSjBrTjJoQk96MFZSamROb1IxM3hEbmMzeU94eEthNmU5UGJYRllPCkdHdDIrSVBacUxYaFFZRXE2T2YwSWRaOWpLK2ZVUmE2RS80dFJsU1c5MWd1NG1FYXYzRktrVUhIYmxEVDkrRVEKaE9zcnB5ZGN2NHdnYnRzU05aenRxNDgrVjUvSTVVZGhzVkk0OEpSVzJSMEVQeTluSG5OczJ0dnoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                "service": {
                                    "name": "linkerd-proxy-injector",
                                    "namespace": "linkerd",
                                    "path": "/",
                                    "port": 443
                                }
                            },
                            "failurePolicy": "Ignore",
                            "matchPolicy": "Exact",
                            "name": "linkerd-proxy-injector.linkerd.io",
                            "namespaceSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "config.linkerd.io/admission-webhooks",
                                        "operator": "NotIn",
                                        "values": [
                                            "disabled"
                                        ]
                                    }
                                ]
                            },
                            "objectSelector": {},
                            "reinvocationPolicy": "Never",
                            "rules": [
                                {
                                    "apiGroups": [
                                        ""
                                    ],
                                    "apiVersions": [
                                        "v1"
                                    ],
                                    "operations": [
                                        "CREATE"
                                    ],
                                    "resources": [
                                        "pods"
                                    ],
                                    "scope": "*"
                                }
                            ],
                            "sideEffects": "None",
                            "timeoutSeconds": 30
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "webhooks": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::linkerd-linkerd-identity",
                "custom": true,
                "id": "linkerd-linkerd-identity",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-identity"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "identity",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-identity"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "authentication.k8s.io"
                                ],
                                "resources": [
                                    "tokenreviews"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"identity\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-identity\"},\"rules\":[{\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"],\"verbs\":[\"create\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:21Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-identity",
                        "resourceVersion": "44588",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/linkerd-linkerd-identity",
                        "uid": "cf15eed2-5cb8-441c-865a-e74cd2d10335"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "authentication.k8s.io"
                            ],
                            "resources": [
                                "tokenreviews"
                            ],
                            "verbs": [
                                "create"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::linkerd-linkerd-sp-validator",
                "custom": true,
                "id": "linkerd-linkerd-sp-validator",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-sp-validator"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "list"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "sp-validator",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-sp-validator"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "list"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"sp-validator\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-sp-validator\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"list\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:20Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-sp-validator",
                        "resourceVersion": "44584",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/linkerd-linkerd-sp-validator",
                        "uid": "d450c7de-5b37-4548-ab65-a0960c6f0083"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "list"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-sp-validator",
                "custom": true,
                "id": "linkerd/linkerd-sp-validator",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-sp-validator",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "sp-validator"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "sp-validator",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-sp-validator"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "sp-validator",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9997
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "sp-validator",
                                        "ports": [
                                            {
                                                "containerPort": 8443,
                                                "name": "sp-validator"
                                            },
                                            {
                                                "containerPort": 9997,
                                                "name": "admin-http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9997
                                            }
                                        },
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/tls",
                                                "name": "tls",
                                                "readOnly": true
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 2
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "linkerd-sp-validator",
                                "volumes": [
                                    {
                                        "name": "tls",
                                        "secret": {
                                            "secretName": "linkerd-sp-validator-tls"
                                        }
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "sp-validator",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-sp-validator",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "linkerd.io/control-plane-component": "sp-validator"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                        "linkerd.io/identity-mode": "default",
                                        "linkerd.io/proxy-version": "stable-2.6.0"
                                    },
                                    "labels": {
                                        "linkerd.io/control-plane-component": "sp-validator",
                                        "linkerd.io/control-plane-ns": "linkerd",
                                        "linkerd.io/proxy-deployment": "linkerd-sp-validator"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "sp-validator",
                                                "-log-level=info"
                                            ],
                                            "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/ping",
                                                    "port": 9997
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "sp-validator",
                                            "ports": [
                                                {
                                                    "containerPort": 8443,
                                                    "name": "sp-validator"
                                                },
                                                {
                                                    "containerPort": 9997,
                                                    "name": "admin-http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 7,
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 9997
                                                }
                                            },
                                            "securityContext": {
                                                "runAsUser": 2103
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/tls",
                                                    "name": "tls",
                                                    "readOnly": true
                                                }
                                            ]
                                        },
                                        {
                                            "env": [
                                                {
                                                    "name": "LINKERD2_PROXY_LOG",
                                                    "value": "warn,linkerd2_proxy=info"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                    "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4190"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4191"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                    "value": "127.0.0.1:4140"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4143"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "_pod_ns",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                    "value": "ns:$(_pod_ns)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                    "value": "/var/run/linkerd/identity/end-entity"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                    "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                    "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                    "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                                },
                                                {
                                                    "name": "_pod_sa",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.serviceAccountName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "_l5d_ns",
                                                    "value": "linkerd"
                                                },
                                                {
                                                    "name": "_l5d_trustdomain",
                                                    "value": "cluster.local"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                    "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                    "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                    "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                    "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                }
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/metrics",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "linkerd-proxy",
                                            "ports": [
                                                {
                                                    "containerPort": 4143,
                                                    "name": "linkerd-proxy"
                                                },
                                                {
                                                    "containerPort": 4191,
                                                    "name": "linkerd-admin"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 2
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsUser": 2102
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/identity/end-entity",
                                                    "name": "linkerd-identity-end-entity"
                                                }
                                            ]
                                        }
                                    ],
                                    "initContainers": [
                                        {
                                            "args": [
                                                "--incoming-proxy-port",
                                                "4143",
                                                "--outgoing-proxy-port",
                                                "4140",
                                                "--proxy-uid",
                                                "2102",
                                                "--inbound-ports-to-ignore",
                                                "4190,4191",
                                                "--outbound-ports-to-ignore",
                                                "443"
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "linkerd-init",
                                            "resources": {
                                                "limits": {
                                                    "cpu": "100m",
                                                    "memory": "50Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "10Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "add": [
                                                        "NET_ADMIN",
                                                        "NET_RAW"
                                                    ]
                                                },
                                                "privileged": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsNonRoot": false,
                                                "runAsUser": 0
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError"
                                        }
                                    ],
                                    "nodeSelector": {
                                        "beta.kubernetes.io/os": "linux"
                                    },
                                    "serviceAccountName": "linkerd-sp-validator",
                                    "volumes": [
                                        {
                                            "name": "tls",
                                            "secret": {
                                                "secretName": "linkerd-sp-validator-tls"
                                            }
                                        },
                                        {
                                            "emptyDir": {
                                                "medium": "Memory"
                                            },
                                            "name": "linkerd-identity-end-entity"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"sp-validator\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-sp-validator\",\"namespace\":\"linkerd\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"linkerd.io/control-plane-component\":\"sp-validator\"}},\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\",\"linkerd.io/identity-mode\":\"default\",\"linkerd.io/proxy-version\":\"stable-2.6.0\"},\"labels\":{\"linkerd.io/control-plane-component\":\"sp-validator\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-sp-validator\"}},\"spec\":{\"containers\":[{\"args\":[\"sp-validator\",\"-log-level=info\"],\"image\":\"gcr.io/linkerd-io/controller:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ping\",\"port\":9997},\"initialDelaySeconds\":10},\"name\":\"sp-validator\",\"ports\":[{\"containerPort\":8443,\"name\":\"sp-validator\"},{\"containerPort\":9997,\"name\":\"admin-http\"}],\"readinessProbe\":{\"failureThreshold\":7,\"httpGet\":{\"path\":\"/ready\",\"port\":9997}},\"securityContext\":{\"runAsUser\":2103},\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/tls\",\"name\":\"tls\",\"readOnly\":true}]},{\"env\":[{\"name\":\"LINKERD2_PROXY_LOG\",\"value\":\"warn,linkerd2_proxy=info\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_ADDR\",\"value\":\"linkerd-dst.linkerd.svc.cluster.local:8086\"},{\"name\":\"LINKERD2_PROXY_CONTROL_LISTEN_ADDR\",\"value\":\"0.0.0.0:4190\"},{\"name\":\"LINKERD2_PROXY_ADMIN_LISTEN_ADDR\",\"value\":\"0.0.0.0:4191\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR\",\"value\":\"127.0.0.1:4140\"},{\"name\":\"LINKERD2_PROXY_INBOUND_LISTEN_ADDR\",\"value\":\"0.0.0.0:4143\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_GET_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"_pod_ns\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LINKERD2_PROXY_DESTINATION_CONTEXT\",\"value\":\"ns:$(_pod_ns)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_DIR\",\"value\":\"/var/run/linkerd/identity/end-entity\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS\",\"value\":\"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\\n\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TOKEN_FILE\",\"value\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_ADDR\",\"value\":\"linkerd-identity.linkerd.svc.cluster.local:8080\"},{\"name\":\"_pod_sa\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"_l5d_ns\",\"value\":\"linkerd\"},{\"name\":\"_l5d_trustdomain\",\"value\":\"cluster.local\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_LOCAL_NAME\",\"value\":\"$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_NAME\",\"value\":\"linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_NAME\",\"value\":\"linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_TAP_SVC_NAME\",\"value\":\"linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"}],\"image\":\"gcr.io/linkerd-io/proxy:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/metrics\",\"port\":4191},\"initialDelaySeconds\":10},\"name\":\"linkerd-proxy\",\"ports\":[{\"containerPort\":4143,\"name\":\"linkerd-proxy\"},{\"containerPort\":4191,\"name\":\"linkerd-admin\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":4191},\"initialDelaySeconds\":2},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsUser\":2102},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/identity/end-entity\",\"name\":\"linkerd-identity-end-entity\"}]}],\"initContainers\":[{\"args\":[\"--incoming-proxy-port\",\"4143\",\"--outgoing-proxy-port\",\"4140\",\"--proxy-uid\",\"2102\",\"--inbound-ports-to-ignore\",\"4190,4191\",\"--outbound-ports-to-ignore\",\"443\"],\"image\":\"gcr.io/linkerd-io/proxy-init:v1.1.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"linkerd-init\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":false,\"runAsUser\":0},\"terminationMessagePolicy\":\"FallbackToLogsOnError\"}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"linkerd-sp-validator\",\"volumes\":[{\"name\":\"tls\",\"secret\":{\"secretName\":\"linkerd-sp-validator-tls\"}},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"linkerd-identity-end-entity\"}]}}}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:58Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-sp-validator",
                        "namespace": "linkerd",
                        "resourceVersion": "45041",
                        "selfLink": "/apis/apps/v1/namespaces/linkerd/deployments/linkerd-sp-validator",
                        "uid": "bb5fff9f-299e-4b72-8c2d-5eb2403150c1"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "sp-validator"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "sp-validator",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-sp-validator"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "sp-validator",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9997,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "sp-validator",
                                        "ports": [
                                            {
                                                "containerPort": 8443,
                                                "name": "sp-validator",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9997,
                                                "name": "admin-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9997,
                                                "scheme": "HTTP"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/tls",
                                                "name": "tls",
                                                "readOnly": true
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "linkerd-sp-validator",
                                "serviceAccountName": "linkerd-sp-validator",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "name": "tls",
                                        "secret": {
                                            "defaultMode": 420,
                                            "secretName": "linkerd-sp-validator-tls"
                                        }
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:03:32Z",
                                "lastUpdateTime": "2019-12-05T20:03:32Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T20:02:58Z",
                                "lastUpdateTime": "2019-12-05T20:03:32Z",
                                "message": "ReplicaSet \"linkerd-sp-validator-5ccb644774\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-sp-validator",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta1:Deployment::linkerd/linkerd-sp-validator",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta2:Deployment::linkerd/linkerd-sp-validator",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Deployment::linkerd/linkerd-sp-validator"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::linkerd-linkerd-destination",
                "custom": true,
                "id": "linkerd-linkerd-destination",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "destination",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-destination"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "endpoints",
                                "services"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "linkerd.io"
                            ],
                            "resources": [
                                "serviceprofiles"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "split.smi-spec.io"
                            ],
                            "resources": [
                                "trafficsplits"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "destination",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-destination"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "replicasets"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "endpoints",
                                    "services"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "linkerd.io"
                                ],
                                "resources": [
                                    "serviceprofiles"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "split.smi-spec.io"
                                ],
                                "resources": [
                                    "trafficsplits"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"destination\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-destination\"},\"rules\":[{\"apiGroups\":[\"apps\"],\"resources\":[\"replicasets\"],\"verbs\":[\"list\",\"get\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"endpoints\",\"services\"],\"verbs\":[\"list\",\"get\",\"watch\"]},{\"apiGroups\":[\"linkerd.io\"],\"resources\":[\"serviceprofiles\"],\"verbs\":[\"list\",\"get\",\"watch\"]},{\"apiGroups\":[\"split.smi-spec.io\"],\"resources\":[\"trafficsplits\"],\"verbs\":[\"list\",\"get\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:29Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "destination",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-destination",
                        "resourceVersion": "44607",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/linkerd-linkerd-destination",
                        "uid": "e0f3682b-584b-4ba7-b296-ca208a6eb3e0"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "endpoints",
                                "services"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "linkerd.io"
                            ],
                            "resources": [
                                "serviceprofiles"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "split.smi-spec.io"
                            ],
                            "resources": [
                                "trafficsplits"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::linkerd/linkerd-tap",
                "custom": true,
                "id": "linkerd/linkerd-tap",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-tap",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-tap\",\"namespace\":\"linkerd\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:11Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-tap",
                        "namespace": "linkerd",
                        "resourceVersion": "44560",
                        "selfLink": "/api/v1/namespaces/linkerd/serviceaccounts/linkerd-tap",
                        "uid": "e5c23370-4470-4886-90b5-6c229cad431a"
                    },
                    "secrets": [
                        {
                            "name": "linkerd-tap-token-hg5nc"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::linkerd/linkerd-controller-api",
                "custom": true,
                "id": "linkerd/linkerd-controller-api",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-controller-api",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 8085,
                                "targetPort": 8085
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "controller"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "controller",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-controller-api",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 8085,
                                    "targetPort": 8085
                                }
                            ],
                            "selector": {
                                "linkerd.io/control-plane-component": "controller"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"controller\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-controller-api\",\"namespace\":\"linkerd\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":8085,\"targetPort\":8085}],\"selector\":{\"linkerd.io/control-plane-component\":\"controller\"},\"type\":\"ClusterIP\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:44Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-controller-api",
                        "namespace": "linkerd",
                        "resourceVersion": "44646",
                        "selfLink": "/api/v1/namespaces/linkerd/services/linkerd-controller-api",
                        "uid": "28e5e301-35a5-43cf-be8c-15a4be7a3531"
                    },
                    "spec": {
                        "clusterIP": "10.245.97.86",
                        "ports": [
                            {
                                "name": "http",
                                "port": 8085,
                                "protocol": "TCP",
                                "targetPort": 8085
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "controller"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:admissionregistration.k8s.io/v1beta1:ValidatingWebhookConfiguration::linkerd-sp-validator-webhook-config",
                "custom": true,
                "id": "linkerd-sp-validator-webhook-config",
                "type": "kubernetes:admissionregistration.k8s.io/v1beta1:ValidatingWebhookConfiguration",
                "inputs": {
                    "apiVersion": "admissionregistration.k8s.io/v1beta1",
                    "kind": "ValidatingWebhookConfiguration",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-sp-validator-webhook-config"
                    },
                    "webhooks": [
                        {
                            "clientConfig": {
                                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJakNDQWdxZ0F3SUJBZ0lRU21DODN2aDBzdWFXaytWejZCcnYyekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweApPVEV5TURZd05ETXdNREZhRncweU1ERXlNRFV3TkRNd01ERmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBdGEzT2V0S0FEUm9rTUo2WFRWTHRsRVhSTVlpMHNWTmEwUXpiM2FDd1BEZEFybnBXMUIvcApTd3BuT2ZCbndiZjZnYzlDSTRtWnBCNzE0NllZMzRKclJPS090MHFxUXB0QWpnUm85bXA1dFdiTURjOXJQOElNCklORWxwUnVaS0FlL2tqdGdkQXppWW12eWNIK2ZpbHhnNmpHZFlUZzJ6TzBTUHJWTDRnUlI2cXRNSlAxTVdKMEgKR2pkck5qVktBVWt1eFFrcGd6c3o1UUh5M2xLN3k4b3N6RE5ldVJ5dEkrdjgvRjlTK2pkVXhqd0x0NGZQTmM2NwpENzFWT0toUG0zTTRMaGt0c3NRaW15SDNvVEkwUldqeUNuSDlvV08zVmoxd3N0eW01a3hrNy9Kb1M3NW9nT3VoCnhJV1kwc3JsSnZIT2lJc0VUZjZwQldFWElacXQvM0d4ZHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUMKQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQgpBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUl0Z2pRT0VFVFl0N0MyY2o0a3lvUDVpMHl2RHlNVzBpSy80CjdVYkdtVGg4bkRTSm9COU9qSFRyeTI5RStrK29aTk52RUdtY3lMdGlOcGtTTGpmUEQ4RmE0U3QrbFlxSEMzWmMKWnczSW90RlhCRExmWFF0UkVYZ01JU0RHU2d5VmM0bWdOZTB4WUt4SlhoTFdEY1pJZWtqbS90bXhtRyt1cG5VLwpJRm9Dbm0rTnRYNDkwWG9hZld3TEtNNmpzUVk3ZWNiV21VeHZnVnd5emZKc1NuUnN4RExqeWxkbm9jQTNLY2NqClRHSGJMTGowdTZUcVpURkFQWlZrWjZVTVk1RUM2YnBuc1NyK0NkRHhCWGY3TVFEaksrMmJxUEdFOFBTZmlyMVcKMHdaaWNEeFEzYXFxVVhGS1hzUExzZHkwV1VMZGNMbXVWNnBSdTJPUDRrU2k0eWMvRGFJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                "service": {
                                    "name": "linkerd-sp-validator",
                                    "namespace": "linkerd",
                                    "path": "/"
                                }
                            },
                            "failurePolicy": "Ignore",
                            "name": "linkerd-sp-validator.linkerd.io",
                            "namespaceSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "config.linkerd.io/admission-webhooks",
                                        "operator": "NotIn",
                                        "values": [
                                            "disabled"
                                        ]
                                    }
                                ]
                            },
                            "rules": [
                                {
                                    "apiGroups": [
                                        "linkerd.io"
                                    ],
                                    "apiVersions": [
                                        "v1alpha1",
                                        "v1alpha2"
                                    ],
                                    "operations": [
                                        "CREATE",
                                        "UPDATE"
                                    ],
                                    "resources": [
                                        "serviceprofiles"
                                    ]
                                }
                            ],
                            "sideEffects": "None"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "admissionregistration.k8s.io/v1beta1",
                    "__inputs": {
                        "apiVersion": "admissionregistration.k8s.io/v1beta1",
                        "kind": "ValidatingWebhookConfiguration",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "sp-validator",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-sp-validator-webhook-config"
                        },
                        "webhooks": [
                            {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJakNDQWdxZ0F3SUJBZ0lRU21DODN2aDBzdWFXaytWejZCcnYyekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweApPVEV5TURZd05ETXdNREZhRncweU1ERXlNRFV3TkRNd01ERmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBdGEzT2V0S0FEUm9rTUo2WFRWTHRsRVhSTVlpMHNWTmEwUXpiM2FDd1BEZEFybnBXMUIvcApTd3BuT2ZCbndiZjZnYzlDSTRtWnBCNzE0NllZMzRKclJPS090MHFxUXB0QWpnUm85bXA1dFdiTURjOXJQOElNCklORWxwUnVaS0FlL2tqdGdkQXppWW12eWNIK2ZpbHhnNmpHZFlUZzJ6TzBTUHJWTDRnUlI2cXRNSlAxTVdKMEgKR2pkck5qVktBVWt1eFFrcGd6c3o1UUh5M2xLN3k4b3N6RE5ldVJ5dEkrdjgvRjlTK2pkVXhqd0x0NGZQTmM2NwpENzFWT0toUG0zTTRMaGt0c3NRaW15SDNvVEkwUldqeUNuSDlvV08zVmoxd3N0eW01a3hrNy9Kb1M3NW9nT3VoCnhJV1kwc3JsSnZIT2lJc0VUZjZwQldFWElacXQvM0d4ZHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUMKQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQgpBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUl0Z2pRT0VFVFl0N0MyY2o0a3lvUDVpMHl2RHlNVzBpSy80CjdVYkdtVGg4bkRTSm9COU9qSFRyeTI5RStrK29aTk52RUdtY3lMdGlOcGtTTGpmUEQ4RmE0U3QrbFlxSEMzWmMKWnczSW90RlhCRExmWFF0UkVYZ01JU0RHU2d5VmM0bWdOZTB4WUt4SlhoTFdEY1pJZWtqbS90bXhtRyt1cG5VLwpJRm9Dbm0rTnRYNDkwWG9hZld3TEtNNmpzUVk3ZWNiV21VeHZnVnd5emZKc1NuUnN4RExqeWxkbm9jQTNLY2NqClRHSGJMTGowdTZUcVpURkFQWlZrWjZVTVk1RUM2YnBuc1NyK0NkRHhCWGY3TVFEaksrMmJxUEdFOFBTZmlyMVcKMHdaaWNEeFEzYXFxVVhGS1hzUExzZHkwV1VMZGNMbXVWNnBSdTJPUDRrU2k0eWMvRGFJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "service": {
                                        "name": "linkerd-sp-validator",
                                        "namespace": "linkerd",
                                        "path": "/"
                                    }
                                },
                                "failurePolicy": "Ignore",
                                "name": "linkerd-sp-validator.linkerd.io",
                                "namespaceSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "config.linkerd.io/admission-webhooks",
                                            "operator": "NotIn",
                                            "values": [
                                                "disabled"
                                            ]
                                        }
                                    ]
                                },
                                "rules": [
                                    {
                                        "apiGroups": [
                                            "linkerd.io"
                                        ],
                                        "apiVersions": [
                                            "v1alpha1",
                                            "v1alpha2"
                                        ],
                                        "operations": [
                                            "CREATE",
                                            "UPDATE"
                                        ],
                                        "resources": [
                                            "serviceprofiles"
                                        ]
                                    }
                                ],
                                "sideEffects": "None"
                            }
                        ]
                    },
                    "apiVersion": "admissionregistration.k8s.io/v1beta1",
                    "kind": "ValidatingWebhookConfiguration",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"admissionregistration.k8s.io/v1beta1\",\"kind\":\"ValidatingWebhookConfiguration\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"sp-validator\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-sp-validator-webhook-config\"},\"webhooks\":[{\"clientConfig\":{\"caBundle\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJakNDQWdxZ0F3SUJBZ0lRU21DODN2aDBzdWFXaytWejZCcnYyekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweApPVEV5TURZd05ETXdNREZhRncweU1ERXlNRFV3TkRNd01ERmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBdGEzT2V0S0FEUm9rTUo2WFRWTHRsRVhSTVlpMHNWTmEwUXpiM2FDd1BEZEFybnBXMUIvcApTd3BuT2ZCbndiZjZnYzlDSTRtWnBCNzE0NllZMzRKclJPS090MHFxUXB0QWpnUm85bXA1dFdiTURjOXJQOElNCklORWxwUnVaS0FlL2tqdGdkQXppWW12eWNIK2ZpbHhnNmpHZFlUZzJ6TzBTUHJWTDRnUlI2cXRNSlAxTVdKMEgKR2pkck5qVktBVWt1eFFrcGd6c3o1UUh5M2xLN3k4b3N6RE5ldVJ5dEkrdjgvRjlTK2pkVXhqd0x0NGZQTmM2NwpENzFWT0toUG0zTTRMaGt0c3NRaW15SDNvVEkwUldqeUNuSDlvV08zVmoxd3N0eW01a3hrNy9Kb1M3NW9nT3VoCnhJV1kwc3JsSnZIT2lJc0VUZjZwQldFWElacXQvM0d4ZHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUMKQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQgpBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUl0Z2pRT0VFVFl0N0MyY2o0a3lvUDVpMHl2RHlNVzBpSy80CjdVYkdtVGg4bkRTSm9COU9qSFRyeTI5RStrK29aTk52RUdtY3lMdGlOcGtTTGpmUEQ4RmE0U3QrbFlxSEMzWmMKWnczSW90RlhCRExmWFF0UkVYZ01JU0RHU2d5VmM0bWdOZTB4WUt4SlhoTFdEY1pJZWtqbS90bXhtRyt1cG5VLwpJRm9Dbm0rTnRYNDkwWG9hZld3TEtNNmpzUVk3ZWNiV21VeHZnVnd5emZKc1NuUnN4RExqeWxkbm9jQTNLY2NqClRHSGJMTGowdTZUcVpURkFQWlZrWjZVTVk1RUM2YnBuc1NyK0NkRHhCWGY3TVFEaksrMmJxUEdFOFBTZmlyMVcKMHdaaWNEeFEzYXFxVVhGS1hzUExzZHkwV1VMZGNMbXVWNnBSdTJPUDRrU2k0eWMvRGFJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"service\":{\"name\":\"linkerd-sp-validator\",\"namespace\":\"linkerd\",\"path\":\"/\"}},\"failurePolicy\":\"Ignore\",\"name\":\"linkerd-sp-validator.linkerd.io\",\"namespaceSelector\":{\"matchExpressions\":[{\"key\":\"config.linkerd.io/admission-webhooks\",\"operator\":\"NotIn\",\"values\":[\"disabled\"]}]},\"rules\":[{\"apiGroups\":[\"linkerd.io\"],\"apiVersions\":[\"v1alpha1\",\"v1alpha2\"],\"operations\":[\"CREATE\",\"UPDATE\"],\"resources\":[\"serviceprofiles\"]}],\"sideEffects\":\"None\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:40Z",
                        "generation": 16,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-sp-validator-webhook-config",
                        "resourceVersion": "75472",
                        "selfLink": "/apis/admissionregistration.k8s.io/v1beta1/validatingwebhookconfigurations/linkerd-sp-validator-webhook-config",
                        "uid": "6f33a5f5-0db3-49a7-b2ae-30d59be16911"
                    },
                    "webhooks": [
                        {
                            "admissionReviewVersions": [
                                "v1beta1"
                            ],
                            "clientConfig": {
                                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJakNDQWdxZ0F3SUJBZ0lRU21DODN2aDBzdWFXaytWejZCcnYyekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweApPVEV5TURZd05ETXdNREZhRncweU1ERXlNRFV3TkRNd01ERmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBdGEzT2V0S0FEUm9rTUo2WFRWTHRsRVhSTVlpMHNWTmEwUXpiM2FDd1BEZEFybnBXMUIvcApTd3BuT2ZCbndiZjZnYzlDSTRtWnBCNzE0NllZMzRKclJPS090MHFxUXB0QWpnUm85bXA1dFdiTURjOXJQOElNCklORWxwUnVaS0FlL2tqdGdkQXppWW12eWNIK2ZpbHhnNmpHZFlUZzJ6TzBTUHJWTDRnUlI2cXRNSlAxTVdKMEgKR2pkck5qVktBVWt1eFFrcGd6c3o1UUh5M2xLN3k4b3N6RE5ldVJ5dEkrdjgvRjlTK2pkVXhqd0x0NGZQTmM2NwpENzFWT0toUG0zTTRMaGt0c3NRaW15SDNvVEkwUldqeUNuSDlvV08zVmoxd3N0eW01a3hrNy9Kb1M3NW9nT3VoCnhJV1kwc3JsSnZIT2lJc0VUZjZwQldFWElacXQvM0d4ZHdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUMKQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQgpBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUl0Z2pRT0VFVFl0N0MyY2o0a3lvUDVpMHl2RHlNVzBpSy80CjdVYkdtVGg4bkRTSm9COU9qSFRyeTI5RStrK29aTk52RUdtY3lMdGlOcGtTTGpmUEQ4RmE0U3QrbFlxSEMzWmMKWnczSW90RlhCRExmWFF0UkVYZ01JU0RHU2d5VmM0bWdOZTB4WUt4SlhoTFdEY1pJZWtqbS90bXhtRyt1cG5VLwpJRm9Dbm0rTnRYNDkwWG9hZld3TEtNNmpzUVk3ZWNiV21VeHZnVnd5emZKc1NuUnN4RExqeWxkbm9jQTNLY2NqClRHSGJMTGowdTZUcVpURkFQWlZrWjZVTVk1RUM2YnBuc1NyK0NkRHhCWGY3TVFEaksrMmJxUEdFOFBTZmlyMVcKMHdaaWNEeFEzYXFxVVhGS1hzUExzZHkwV1VMZGNMbXVWNnBSdTJPUDRrU2k0eWMvRGFJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                "service": {
                                    "name": "linkerd-sp-validator",
                                    "namespace": "linkerd",
                                    "path": "/",
                                    "port": 443
                                }
                            },
                            "failurePolicy": "Ignore",
                            "matchPolicy": "Exact",
                            "name": "linkerd-sp-validator.linkerd.io",
                            "namespaceSelector": {
                                "matchExpressions": [
                                    {
                                        "key": "config.linkerd.io/admission-webhooks",
                                        "operator": "NotIn",
                                        "values": [
                                            "disabled"
                                        ]
                                    }
                                ]
                            },
                            "objectSelector": {},
                            "rules": [
                                {
                                    "apiGroups": [
                                        "linkerd.io"
                                    ],
                                    "apiVersions": [
                                        "v1alpha1",
                                        "v1alpha2"
                                    ],
                                    "operations": [
                                        "CREATE",
                                        "UPDATE"
                                    ],
                                    "resources": [
                                        "serviceprofiles"
                                    ],
                                    "scope": "*"
                                }
                            ],
                            "sideEffects": "None",
                            "timeoutSeconds": 30
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "webhooks": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::linkerd-linkerd-tap-auth-delegator",
                "custom": true,
                "id": "linkerd-linkerd-tap-auth-delegator",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-tap-auth-delegator"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:auth-delegator"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-tap-auth-delegator"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:auth-delegator"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-tap",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-tap-auth-delegator\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-tap\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:02Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-tap-auth-delegator",
                        "resourceVersion": "44515",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/linkerd-linkerd-tap-auth-delegator",
                        "uid": "f7e69554-6dfc-44a7-9e06-3baadb8cc54f"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:auth-delegator"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:policy/v1beta1:PodSecurityPolicy::linkerd-linkerd-control-plane",
                "custom": true,
                "id": "linkerd-linkerd-control-plane",
                "type": "kubernetes:policy/v1beta1:PodSecurityPolicy",
                "inputs": {
                    "apiVersion": "policy/v1beta1",
                    "kind": "PodSecurityPolicy",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-control-plane"
                    },
                    "spec": {
                        "allowPrivilegeEscalation": false,
                        "allowedCapabilities": [
                            "NET_ADMIN",
                            "NET_RAW"
                        ],
                        "fsGroup": {
                            "ranges": [
                                {
                                    "max": 65535,
                                    "min": 1
                                }
                            ],
                            "rule": "MustRunAs"
                        },
                        "hostIPC": false,
                        "hostNetwork": false,
                        "hostPID": false,
                        "readOnlyRootFilesystem": true,
                        "requiredDropCapabilities": [
                            "ALL"
                        ],
                        "runAsUser": {
                            "rule": "RunAsAny"
                        },
                        "seLinux": {
                            "rule": "RunAsAny"
                        },
                        "supplementalGroups": {
                            "ranges": [
                                {
                                    "max": 65535,
                                    "min": 1
                                }
                            ],
                            "rule": "MustRunAs"
                        },
                        "volumes": [
                            "configMap",
                            "emptyDir",
                            "secret",
                            "projected",
                            "downwardAPI",
                            "persistentVolumeClaim"
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "policy/v1beta1",
                    "__inputs": {
                        "apiVersion": "policy/v1beta1",
                        "kind": "PodSecurityPolicy",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-control-plane"
                        },
                        "spec": {
                            "allowPrivilegeEscalation": false,
                            "allowedCapabilities": [
                                "NET_ADMIN",
                                "NET_RAW"
                            ],
                            "fsGroup": {
                                "ranges": [
                                    {
                                        "max": 65535,
                                        "min": 1
                                    }
                                ],
                                "rule": "MustRunAs"
                            },
                            "hostIPC": false,
                            "hostNetwork": false,
                            "hostPID": false,
                            "readOnlyRootFilesystem": true,
                            "requiredDropCapabilities": [
                                "ALL"
                            ],
                            "runAsUser": {
                                "rule": "RunAsAny"
                            },
                            "seLinux": {
                                "rule": "RunAsAny"
                            },
                            "supplementalGroups": {
                                "ranges": [
                                    {
                                        "max": 65535,
                                        "min": 1
                                    }
                                ],
                                "rule": "MustRunAs"
                            },
                            "volumes": [
                                "configMap",
                                "emptyDir",
                                "secret",
                                "projected",
                                "downwardAPI",
                                "persistentVolumeClaim"
                            ]
                        }
                    },
                    "apiVersion": "policy/v1beta1",
                    "kind": "PodSecurityPolicy",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"policy/v1beta1\",\"kind\":\"PodSecurityPolicy\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-control-plane\"},\"spec\":{\"allowPrivilegeEscalation\":false,\"allowedCapabilities\":[\"NET_ADMIN\",\"NET_RAW\"],\"fsGroup\":{\"ranges\":[{\"max\":65535,\"min\":1}],\"rule\":\"MustRunAs\"},\"hostIPC\":false,\"hostNetwork\":false,\"hostPID\":false,\"readOnlyRootFilesystem\":true,\"requiredDropCapabilities\":[\"ALL\"],\"runAsUser\":{\"rule\":\"RunAsAny\"},\"seLinux\":{\"rule\":\"RunAsAny\"},\"supplementalGroups\":{\"ranges\":[{\"max\":65535,\"min\":1}],\"rule\":\"MustRunAs\"},\"volumes\":[\"configMap\",\"emptyDir\",\"secret\",\"projected\",\"downwardAPI\",\"persistentVolumeClaim\"]}}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:45Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-control-plane",
                        "resourceVersion": "44648",
                        "selfLink": "/apis/policy/v1beta1/podsecuritypolicies/linkerd-linkerd-control-plane",
                        "uid": "dbc15a25-69ed-42f9-883b-3f05e6d68953"
                    },
                    "spec": {
                        "allowPrivilegeEscalation": false,
                        "allowedCapabilities": [
                            "NET_ADMIN",
                            "NET_RAW"
                        ],
                        "fsGroup": {
                            "ranges": [
                                {
                                    "max": 65535,
                                    "min": 1
                                }
                            ],
                            "rule": "MustRunAs"
                        },
                        "readOnlyRootFilesystem": true,
                        "requiredDropCapabilities": [
                            "ALL"
                        ],
                        "runAsUser": {
                            "rule": "RunAsAny"
                        },
                        "seLinux": {
                            "rule": "RunAsAny"
                        },
                        "supplementalGroups": {
                            "ranges": [
                                {
                                    "max": 65535,
                                    "min": 1
                                }
                            ],
                            "rule": "MustRunAs"
                        },
                        "volumes": [
                            "configMap",
                            "emptyDir",
                            "secret",
                            "projected",
                            "downwardAPI",
                            "persistentVolumeClaim"
                        ]
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::linkerd-linkerd-tap",
                "custom": true,
                "id": "linkerd-linkerd-tap",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-tap"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "services",
                                "replicationcontrollers",
                                "namespaces"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "apps"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "replicasets",
                                "statefulsets"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-tap"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "services",
                                    "replicationcontrollers",
                                    "namespaces"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions",
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "replicasets",
                                    "statefulsets"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions",
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-tap\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"services\",\"replicationcontrollers\",\"namespaces\"],\"verbs\":[\"list\",\"get\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"apps\"],\"resources\":[\"daemonsets\",\"deployments\",\"replicasets\",\"statefulsets\"],\"verbs\":[\"list\",\"get\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"list\",\"get\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:50Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-tap",
                        "resourceVersion": "44656",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/linkerd-linkerd-tap",
                        "uid": "719dc834-a953-41d0-9143-7fa11818f159"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "services",
                                "replicationcontrollers",
                                "namespaces"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "apps"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "replicasets",
                                "statefulsets"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ConfigMap::linkerd/linkerd-prometheus-config",
                "custom": true,
                "id": "linkerd/linkerd-prometheus-config",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "prometheus.yml": "global:\n  scrape_interval: 10s\n  scrape_timeout: 10s\n  evaluation_interval: 10s\n\nrule_files:\n- /etc/prometheus/*_rules.yml\n\nscrape_configs:\n- job_name: 'prometheus'\n  static_configs:\n  - targets: ['localhost:9090']\n\n- job_name: 'grafana'\n  kubernetes_sd_configs:\n  - role: pod\n    namespaces:\n      names: ['linkerd']\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_container_name\n    action: keep\n    regex: ^grafana$\n\n#  Required for: https://grafana.com/grafana/dashboards/315\n- job_name: 'kubernetes-nodes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify: true\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\n  metric_relabel_configs:\n  - source_labels: [__name__]\n    regex: '(container|machine)_(cpu|memory|network|fs)_(.+)'\n    action: keep\n  - source_labels: [__name__]\n    regex: 'container_memory_failures_total' # unneeded large metric\n    action: drop\n\n- job_name: 'linkerd-controller'\n  kubernetes_sd_configs:\n  - role: pod\n    namespaces:\n      names: ['linkerd']\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_label_linkerd_io_control_plane_component\n    - __meta_kubernetes_pod_container_port_name\n    action: keep\n    regex: (.*);admin-http$\n  - source_labels: [__meta_kubernetes_pod_container_name]\n    action: replace\n    target_label: component\n\n- job_name: 'linkerd-proxy'\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_container_name\n    - __meta_kubernetes_pod_container_port_name\n    - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns\n    action: keep\n    regex: ^linkerd-proxy;linkerd-admin;linkerd$\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: pod\n  # special case k8s' \"job\" label, to not interfere with prometheus' \"job\"\n  # label\n  # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =\u003e\n  # k8s_job=foo\n  - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]\n    action: replace\n    target_label: k8s_job\n  # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job\n  - action: labeldrop\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job\n  # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =\u003e\n  # deployment=foo\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\n  # drop all labels that we just made copies of in the previous labelmap\n  - action: labeldrop\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\n  # __meta_kubernetes_pod_label_linkerd_io_foo=bar =\u003e\n  # foo=bar\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_linkerd_io_(.+)"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-prometheus-config",
                        "namespace": "linkerd"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "prometheus.yml": "global:\n  scrape_interval: 10s\n  scrape_timeout: 10s\n  evaluation_interval: 10s\n\nrule_files:\n- /etc/prometheus/*_rules.yml\n\nscrape_configs:\n- job_name: 'prometheus'\n  static_configs:\n  - targets: ['localhost:9090']\n\n- job_name: 'grafana'\n  kubernetes_sd_configs:\n  - role: pod\n    namespaces:\n      names: ['linkerd']\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_container_name\n    action: keep\n    regex: ^grafana$\n\n#  Required for: https://grafana.com/grafana/dashboards/315\n- job_name: 'kubernetes-nodes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify: true\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\n  metric_relabel_configs:\n  - source_labels: [__name__]\n    regex: '(container|machine)_(cpu|memory|network|fs)_(.+)'\n    action: keep\n  - source_labels: [__name__]\n    regex: 'container_memory_failures_total' # unneeded large metric\n    action: drop\n\n- job_name: 'linkerd-controller'\n  kubernetes_sd_configs:\n  - role: pod\n    namespaces:\n      names: ['linkerd']\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_label_linkerd_io_control_plane_component\n    - __meta_kubernetes_pod_container_port_name\n    action: keep\n    regex: (.*);admin-http$\n  - source_labels: [__meta_kubernetes_pod_container_name]\n    action: replace\n    target_label: component\n\n- job_name: 'linkerd-proxy'\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_container_name\n    - __meta_kubernetes_pod_container_port_name\n    - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns\n    action: keep\n    regex: ^linkerd-proxy;linkerd-admin;linkerd$\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: pod\n  # special case k8s' \"job\" label, to not interfere with prometheus' \"job\"\n  # label\n  # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =\u003e\n  # k8s_job=foo\n  - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]\n    action: replace\n    target_label: k8s_job\n  # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job\n  - action: labeldrop\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job\n  # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =\u003e\n  # deployment=foo\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\n  # drop all labels that we just made copies of in the previous labelmap\n  - action: labeldrop\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\n  # __meta_kubernetes_pod_label_linkerd_io_foo=bar =\u003e\n  # foo=bar\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_linkerd_io_(.+)"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "prometheus",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-prometheus-config",
                            "namespace": "linkerd"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "prometheus.yml": "global:\n  scrape_interval: 10s\n  scrape_timeout: 10s\n  evaluation_interval: 10s\n\nrule_files:\n- /etc/prometheus/*_rules.yml\n\nscrape_configs:\n- job_name: 'prometheus'\n  static_configs:\n  - targets: ['localhost:9090']\n\n- job_name: 'grafana'\n  kubernetes_sd_configs:\n  - role: pod\n    namespaces:\n      names: ['linkerd']\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_container_name\n    action: keep\n    regex: ^grafana$\n\n#  Required for: https://grafana.com/grafana/dashboards/315\n- job_name: 'kubernetes-nodes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify: true\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\n  metric_relabel_configs:\n  - source_labels: [__name__]\n    regex: '(container|machine)_(cpu|memory|network|fs)_(.+)'\n    action: keep\n  - source_labels: [__name__]\n    regex: 'container_memory_failures_total' # unneeded large metric\n    action: drop\n\n- job_name: 'linkerd-controller'\n  kubernetes_sd_configs:\n  - role: pod\n    namespaces:\n      names: ['linkerd']\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_label_linkerd_io_control_plane_component\n    - __meta_kubernetes_pod_container_port_name\n    action: keep\n    regex: (.*);admin-http$\n  - source_labels: [__meta_kubernetes_pod_container_name]\n    action: replace\n    target_label: component\n\n- job_name: 'linkerd-proxy'\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_container_name\n    - __meta_kubernetes_pod_container_port_name\n    - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns\n    action: keep\n    regex: ^linkerd-proxy;linkerd-admin;linkerd$\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: pod\n  # special case k8s' \"job\" label, to not interfere with prometheus' \"job\"\n  # label\n  # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =\u003e\n  # k8s_job=foo\n  - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]\n    action: replace\n    target_label: k8s_job\n  # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job\n  - action: labeldrop\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job\n  # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =\u003e\n  # deployment=foo\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\n  # drop all labels that we just made copies of in the previous labelmap\n  - action: labeldrop\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\n  # __meta_kubernetes_pod_label_linkerd_io_foo=bar =\u003e\n  # foo=bar\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_linkerd_io_(.+)"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"prometheus.yml\":\"global:\\n  scrape_interval: 10s\\n  scrape_timeout: 10s\\n  evaluation_interval: 10s\\n\\nrule_files:\\n- /etc/prometheus/*_rules.yml\\n\\nscrape_configs:\\n- job_name: 'prometheus'\\n  static_configs:\\n  - targets: ['localhost:9090']\\n\\n- job_name: 'grafana'\\n  kubernetes_sd_configs:\\n  - role: pod\\n    namespaces:\\n      names: ['linkerd']\\n  relabel_configs:\\n  - source_labels:\\n    - __meta_kubernetes_pod_container_name\\n    action: keep\\n    regex: ^grafana$\\n\\n#  Required for: https://grafana.com/grafana/dashboards/315\\n- job_name: 'kubernetes-nodes-cadvisor'\\n  scheme: https\\n  tls_config:\\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n    insecure_skip_verify: true\\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n\\n  kubernetes_sd_configs:\\n  - role: node\\n  relabel_configs:\\n  - action: labelmap\\n    regex: __meta_kubernetes_node_label_(.+)\\n  - target_label: __address__\\n    replacement: kubernetes.default.svc:443\\n  - source_labels: [__meta_kubernetes_node_name]\\n    regex: (.+)\\n    target_label: __metrics_path__\\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\\n  metric_relabel_configs:\\n  - source_labels: [__name__]\\n    regex: '(container|machine)_(cpu|memory|network|fs)_(.+)'\\n    action: keep\\n  - source_labels: [__name__]\\n    regex: 'container_memory_failures_total' # unneeded large metric\\n    action: drop\\n\\n- job_name: 'linkerd-controller'\\n  kubernetes_sd_configs:\\n  - role: pod\\n    namespaces:\\n      names: ['linkerd']\\n  relabel_configs:\\n  - source_labels:\\n    - __meta_kubernetes_pod_label_linkerd_io_control_plane_component\\n    - __meta_kubernetes_pod_container_port_name\\n    action: keep\\n    regex: (.*);admin-http$\\n  - source_labels: [__meta_kubernetes_pod_container_name]\\n    action: replace\\n    target_label: component\\n\\n- job_name: 'linkerd-proxy'\\n  kubernetes_sd_configs:\\n  - role: pod\\n  relabel_configs:\\n  - source_labels:\\n    - __meta_kubernetes_pod_container_name\\n    - __meta_kubernetes_pod_container_port_name\\n    - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns\\n    action: keep\\n    regex: ^linkerd-proxy;linkerd-admin;linkerd$\\n  - source_labels: [__meta_kubernetes_namespace]\\n    action: replace\\n    target_label: namespace\\n  - source_labels: [__meta_kubernetes_pod_name]\\n    action: replace\\n    target_label: pod\\n  # special case k8s' \\\"job\\\" label, to not interfere with prometheus' \\\"job\\\"\\n  # label\\n  # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =\\u003e\\n  # k8s_job=foo\\n  - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]\\n    action: replace\\n    target_label: k8s_job\\n  # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job\\n  - action: labeldrop\\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job\\n  # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =\\u003e\\n  # deployment=foo\\n  - action: labelmap\\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\\n  # drop all labels that we just made copies of in the previous labelmap\\n  - action: labeldrop\\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\\n  # __meta_kubernetes_pod_label_linkerd_io_foo=bar =\\u003e\\n  # foo=bar\\n  - action: labelmap\\n    regex: __meta_kubernetes_pod_label_linkerd_io_(.+)\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"prometheus\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-prometheus-config\",\"namespace\":\"linkerd\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:53Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-prometheus-config",
                        "namespace": "linkerd",
                        "resourceVersion": "44662",
                        "selfLink": "/api/v1/namespaces/linkerd/configmaps/linkerd-prometheus-config",
                        "uid": "470a91c3-e0ad-475b-a84c-f00775d2a7bf"
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-web",
                "custom": true,
                "id": "linkerd/linkerd-web",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "web",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-web",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "web",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-web"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "web",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-web"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "-api-addr=linkerd-controller-api.linkerd.svc.cluster.local:8085",
                                            "-grafana-addr=linkerd-grafana.linkerd.svc.cluster.local:3000",
                                            "-controller-namespace=linkerd",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/web:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9994
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "web",
                                        "ports": [
                                            {
                                                "containerPort": 8084,
                                                "name": "http"
                                            },
                                            {
                                                "containerPort": 9994,
                                                "name": "admin-http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9994
                                            }
                                        },
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 2
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "linkerd-web",
                                "volumes": [
                                    {
                                        "configMap": {
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "web",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-web",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "linkerd.io/control-plane-component": "web",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-web"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                        "linkerd.io/identity-mode": "default",
                                        "linkerd.io/proxy-version": "stable-2.6.0"
                                    },
                                    "labels": {
                                        "linkerd.io/control-plane-component": "web",
                                        "linkerd.io/control-plane-ns": "linkerd",
                                        "linkerd.io/proxy-deployment": "linkerd-web"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "-api-addr=linkerd-controller-api.linkerd.svc.cluster.local:8085",
                                                "-grafana-addr=linkerd-grafana.linkerd.svc.cluster.local:3000",
                                                "-controller-namespace=linkerd",
                                                "-log-level=info"
                                            ],
                                            "image": "gcr.io/linkerd-io/web:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/ping",
                                                    "port": 9994
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "web",
                                            "ports": [
                                                {
                                                    "containerPort": 8084,
                                                    "name": "http"
                                                },
                                                {
                                                    "containerPort": 9994,
                                                    "name": "admin-http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 7,
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 9994
                                                }
                                            },
                                            "securityContext": {
                                                "runAsUser": 2103
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/config",
                                                    "name": "config"
                                                }
                                            ]
                                        },
                                        {
                                            "env": [
                                                {
                                                    "name": "LINKERD2_PROXY_LOG",
                                                    "value": "warn,linkerd2_proxy=info"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                    "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4190"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4191"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                    "value": "127.0.0.1:4140"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4143"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "_pod_ns",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                    "value": "ns:$(_pod_ns)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                    "value": "/var/run/linkerd/identity/end-entity"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                    "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                    "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                    "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                                },
                                                {
                                                    "name": "_pod_sa",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.serviceAccountName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "_l5d_ns",
                                                    "value": "linkerd"
                                                },
                                                {
                                                    "name": "_l5d_trustdomain",
                                                    "value": "cluster.local"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                    "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                    "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                    "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                    "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                }
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/metrics",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "linkerd-proxy",
                                            "ports": [
                                                {
                                                    "containerPort": 4143,
                                                    "name": "linkerd-proxy"
                                                },
                                                {
                                                    "containerPort": 4191,
                                                    "name": "linkerd-admin"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 2
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsUser": 2102
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/identity/end-entity",
                                                    "name": "linkerd-identity-end-entity"
                                                }
                                            ]
                                        }
                                    ],
                                    "initContainers": [
                                        {
                                            "args": [
                                                "--incoming-proxy-port",
                                                "4143",
                                                "--outgoing-proxy-port",
                                                "4140",
                                                "--proxy-uid",
                                                "2102",
                                                "--inbound-ports-to-ignore",
                                                "4190,4191",
                                                "--outbound-ports-to-ignore",
                                                "443"
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "linkerd-init",
                                            "resources": {
                                                "limits": {
                                                    "cpu": "100m",
                                                    "memory": "50Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "10Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "add": [
                                                        "NET_ADMIN",
                                                        "NET_RAW"
                                                    ]
                                                },
                                                "privileged": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsNonRoot": false,
                                                "runAsUser": 0
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError"
                                        }
                                    ],
                                    "nodeSelector": {
                                        "beta.kubernetes.io/os": "linux"
                                    },
                                    "serviceAccountName": "linkerd-web",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "name": "linkerd-config"
                                            },
                                            "name": "config"
                                        },
                                        {
                                            "emptyDir": {
                                                "medium": "Memory"
                                            },
                                            "name": "linkerd-identity-end-entity"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"web\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-web\",\"namespace\":\"linkerd\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"linkerd.io/control-plane-component\":\"web\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-web\"}},\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\",\"linkerd.io/identity-mode\":\"default\",\"linkerd.io/proxy-version\":\"stable-2.6.0\"},\"labels\":{\"linkerd.io/control-plane-component\":\"web\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-web\"}},\"spec\":{\"containers\":[{\"args\":[\"-api-addr=linkerd-controller-api.linkerd.svc.cluster.local:8085\",\"-grafana-addr=linkerd-grafana.linkerd.svc.cluster.local:3000\",\"-controller-namespace=linkerd\",\"-log-level=info\"],\"image\":\"gcr.io/linkerd-io/web:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ping\",\"port\":9994},\"initialDelaySeconds\":10},\"name\":\"web\",\"ports\":[{\"containerPort\":8084,\"name\":\"http\"},{\"containerPort\":9994,\"name\":\"admin-http\"}],\"readinessProbe\":{\"failureThreshold\":7,\"httpGet\":{\"path\":\"/ready\",\"port\":9994}},\"securityContext\":{\"runAsUser\":2103},\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/config\",\"name\":\"config\"}]},{\"env\":[{\"name\":\"LINKERD2_PROXY_LOG\",\"value\":\"warn,linkerd2_proxy=info\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_ADDR\",\"value\":\"linkerd-dst.linkerd.svc.cluster.local:8086\"},{\"name\":\"LINKERD2_PROXY_CONTROL_LISTEN_ADDR\",\"value\":\"0.0.0.0:4190\"},{\"name\":\"LINKERD2_PROXY_ADMIN_LISTEN_ADDR\",\"value\":\"0.0.0.0:4191\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR\",\"value\":\"127.0.0.1:4140\"},{\"name\":\"LINKERD2_PROXY_INBOUND_LISTEN_ADDR\",\"value\":\"0.0.0.0:4143\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_GET_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"_pod_ns\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LINKERD2_PROXY_DESTINATION_CONTEXT\",\"value\":\"ns:$(_pod_ns)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_DIR\",\"value\":\"/var/run/linkerd/identity/end-entity\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS\",\"value\":\"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\\n\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TOKEN_FILE\",\"value\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_ADDR\",\"value\":\"linkerd-identity.linkerd.svc.cluster.local:8080\"},{\"name\":\"_pod_sa\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"_l5d_ns\",\"value\":\"linkerd\"},{\"name\":\"_l5d_trustdomain\",\"value\":\"cluster.local\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_LOCAL_NAME\",\"value\":\"$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_NAME\",\"value\":\"linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_NAME\",\"value\":\"linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_TAP_SVC_NAME\",\"value\":\"linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"}],\"image\":\"gcr.io/linkerd-io/proxy:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/metrics\",\"port\":4191},\"initialDelaySeconds\":10},\"name\":\"linkerd-proxy\",\"ports\":[{\"containerPort\":4143,\"name\":\"linkerd-proxy\"},{\"containerPort\":4191,\"name\":\"linkerd-admin\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":4191},\"initialDelaySeconds\":2},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsUser\":2102},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/identity/end-entity\",\"name\":\"linkerd-identity-end-entity\"}]}],\"initContainers\":[{\"args\":[\"--incoming-proxy-port\",\"4143\",\"--outgoing-proxy-port\",\"4140\",\"--proxy-uid\",\"2102\",\"--inbound-ports-to-ignore\",\"4190,4191\",\"--outbound-ports-to-ignore\",\"443\"],\"image\":\"gcr.io/linkerd-io/proxy-init:v1.1.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"linkerd-init\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":false,\"runAsUser\":0},\"terminationMessagePolicy\":\"FallbackToLogsOnError\"}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"linkerd-web\",\"volumes\":[{\"configMap\":{\"name\":\"linkerd-config\"},\"name\":\"config\"},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"linkerd-identity-end-entity\"}]}}}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:59Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "web",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-web",
                        "namespace": "linkerd",
                        "resourceVersion": "45034",
                        "selfLink": "/apis/apps/v1/namespaces/linkerd/deployments/linkerd-web",
                        "uid": "6c621340-2344-4ddc-8355-c17f64c5cf64"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "web",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-web"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "web",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-web"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "-api-addr=linkerd-controller-api.linkerd.svc.cluster.local:8085",
                                            "-grafana-addr=linkerd-grafana.linkerd.svc.cluster.local:3000",
                                            "-controller-namespace=linkerd",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/web:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9994,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "web",
                                        "ports": [
                                            {
                                                "containerPort": 8084,
                                                "name": "http",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9994,
                                                "name": "admin-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9994,
                                                "scheme": "HTTP"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "linkerd-web",
                                "serviceAccountName": "linkerd-web",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:03:28Z",
                                "lastUpdateTime": "2019-12-05T20:03:28Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T20:02:59Z",
                                "lastUpdateTime": "2019-12-05T20:03:28Z",
                                "message": "ReplicaSet \"linkerd-web-5d77f97974\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-web",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta1:Deployment::linkerd/linkerd-web",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta2:Deployment::linkerd/linkerd-web",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Deployment::linkerd/linkerd-web"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Secret::linkerd/linkerd-proxy-injector-tls",
                "custom": true,
                "id": "linkerd/linkerd-proxy-injector-tls",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "crt.pem": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lSQU1ET2RodG8rOFlUbW9vV25WK1RhN0F3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB4T1RFeU1EVXlNekUyTURsYUZ3MHlNREV5TURReU16RTJNRGxhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQzUyeEFNeVFNYkw4bk1sdXg3OGZlQm5aY3BsOEM3dnZqWHpaODJzVFRibzBCSgpZZHIwMGdTYk5IV1ZkRnRkSmh5MzhKcm9hNzFodi9nalFDUk5BMGZMT1FGd0E0NDJ2NEczS3pHeW1WWkRNNEQvCmZ3U2x2Q0t1TEFUR093aVRSVWF1WXRoejZOdXBUZ3J2T1RQL1QwYzluREYyMW1KZ3o4cDhxTFNNSDg0c0U2d04KSlJ4TnpBTlhwVyt6UjJwQ2lrU2NsRWNFVXpLUWJUYW1PMFBEaXpBUWg2TC8wNU51c1owbzVBbWpSS3JaY3NEUgpnRkJ5VHNnV1RLYmJLR2VVS2VSVmVqaWUvZStMeUFqZ3Fsem5rUjgxbkxlaVRmUEdQbnBJNm9pSStxLzNRYzlQCi9iMGp0dW1NRURxNWlJTmdJbk5nK1E3UVBVaTVERlQyaWNFb1Q4bi9BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIKL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoZVp2VjZNZ2w3dUkycVFVZENER0JQUStDUnJpClk0TVhyQjhhajh3NFg0elVGKzljUTJGcDdMUlphTWFLbjVWTXNkaWJnSWtQeU9FcU5KVHdPb1NZc3JsOTNPUDAKUEZ0VmxoRGE1VzFUZURibUxFaW9WS0dMS3d1VkU0cHV0V0JMZjN5NXJUTEpQUHlxS0ZnL1pPck1PZUkwTE1BSwpMNnp1Q0FVVGJ4bUpHY2I5TkhKcytNY3ZDSmMvWHhIQVFBbmxmcVNGak1SRFA5QkRxcVAyQ21ORE5yMTk5VlBPCk1LV0FNZmtOYjRHc3B4RzdsdEQrd3E3M0Z3b01LRmNRRm1vdFBYQnVJSXJrSnRLUlhJTmViNnA1bGlobXpORHUKN081ZVZOVWpGZHNRa21XS3B4T25RaUNSQzNIeExKSGREVmwvM0huWXRiaVNueXpLckIwRlpCVGQ2UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                        "key.pem": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdWRzUURNa0RHeS9Kekpic2UvSDNnWjJYS1pmQXU3NzQxODJmTnJFMDI2TkFTV0hhCjlOSUVtelIxbFhSYlhTWWN0L0NhNkd1OVliLzRJMEFrVFFOSHl6a0JjQU9PTnIrQnR5c3hzcGxXUXpPQS8zOEUKcGJ3aXJpd0V4anNJazBWR3JtTFljK2picVU0Szd6a3ovMDlIUFp3eGR0WmlZTS9LZktpMGpCL09MQk9zRFNVYwpUY3dEVjZWdnMwZHFRb3BFbkpSSEJGTXlrRzAycGp0RHc0c3dFSWVpLzlPVGJyR2RLT1FKbzBTcTJYTEEwWUJRCmNrN0lGa3ltMnlobmxDbmtWWG80bnYzdmk4Z0k0S3BjNTVFZk5aeTNvazN6eGo1NlNPcUlpUHF2OTBIUFQvMjkKSTdicGpCQTZ1WWlEWUNKellQa08wRDFJdVF4VTlvbkJLRS9KL3dJREFRQUJBb0lCQUZ0Mmp3Tjd1T2VjTVBkYQpIcTh3ZU5sMHNIdHJqeEhWL2FoV0xOQkJqUDI1N1YwdnB3MXNmWS9UMVRuanRVSzJDdFFLdUhGQTlFWXlydTdLCkZoTkFWZ2lRMlVCQ3Y2MzV1T0JuaFdHYlRIUnQyRUhrUkdrN21PV1dEQk54NGRwMzhUeklzRFQ2bDM5T1JOdE4KajJWSm9vbVRZRlJYVkxySUI2SXBkQkN4WmtrUjNuNytUdmIwTjJrVm9ESlRPczlWejUveENWMXpJZ3cwZ0d6cgpoQ0NRamR6YitCS2kySVRZNmtLT1dzRFJNeTRtY3ZTZWlhcWR2eW9LcGhUWlhDTmZJM2NMUTdYL3lVM3NlRWllCldIMmIyM1U2ckpQVDZpaGY2eWpUWnNOSmRXZEhUOFB0Lzl3aytwNmt1emNDRFMvZVVucWJlR01VcDQxVEVYc0sKWWhQT2djRUNnWUVBMHd2eS9wVlF4UlM3RUJOZnlqUlVLcnN4WXhYdVNQUG9EaG0waDVlQTQ4VmhpSWFNcjF2RgpTTVV4alN0U1hZbnhXUjFuRUNEQk9ycTNscFhwaWZwb2JVSzk2ellTTVp4M29DdEtpSUlmQWE0N3V4SlMyd2prClhlcXNvSVNjVit6MHZXRE5OUHJ1YmRWUjB6eU56NHl6K2VKWE5zL05RYkpxQjF6bG0yc0FjRmtDZ1lFQTRYRjkKTUhGdWRnRUdyekRBc05TMUM3Uzlsdk1XMStaeUVsZ3J5M21SZUZudUJvdTdjNlpUcnRGTEVQQWUyT042cWxLRQo1YkhyTTFFRzR0ODh3eVdtM2k0RTFFWVFPbW15TnBFUU1TTm5MMVQ1aCtTbmM1THpCYmw0alVFYXZpUnM5R0dTCkdlZ0p6WUUzN2FwblNTbWExNmhlTVV0THQyR2J6Y293SDhqdEFoY0NnWUFrY01mQVZaL2dwN2UxQ3VOYlVyWEYKdXhUSCt4MXQwMCthUDY0QVM1U2h2NDhidDcvSzk1bVUreGVYUEllNFJ2MDVXZTVWeHBJV3hlNjFQYVZaZ2JkTwpSbHZzcFNWM0U0RkVVclZINU0vZHhtdmgzVVFaTmV2WW01QzdGcXE0TTkzK1pSeUpyVnBGOUxOd09lQnltZVRwCm5MOWFZMzhaZk9qNTVIeHczWVR4NFFLQmdIcTJoTGRPdHhyQ2VqbjRKcHJhWFdYdXp0Z1FuOW1MVllKSXZpWDIKbVVsU1lpN3I5bkFBRkVMdko1WWpyaGJPMCtGTUk0ekg2TWU1RGkrRjVoUXZOWUp3dUM0M3FQT3l2cy9XN0dKaQo2L0ttcFdEa0JJWHpjaGNtbXNrQXJDYmR1dlRXKzJqZ2xoMW5mZUwvUTFOZXN5czZPWE5Ka2dCU3dEVW5Ia1RlCjRLdW5Bb0dBRlJIKzBtUnlENEhXMlk0dVNJY0tKaGRqM1NiVDdXcUxGK2NUZU5uSW9xRTFHN21QaFNSa0w1bnMKNDlZdmQvLy93d1E0b3JpOHArYXV6S1UreGhDa1ljTnRsQVBwR3RDQ1JWTXA0d2R2RlA4NXBUM3ZvQ1UxSTlDQQo2M3BsQkZ6eFhaZnVBK0hWWGNJU2p5WkRzcXJhZWlDTHRGcDlBbURsZnJFRDYrYlI5R1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-proxy-injector-tls",
                        "namespace": "linkerd"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "crt.pem": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lSQU1ET2RodG8rOFlUbW9vV25WK1RhN0F3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB4T1RFeU1EVXlNekUyTURsYUZ3MHlNREV5TURReU16RTJNRGxhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQzUyeEFNeVFNYkw4bk1sdXg3OGZlQm5aY3BsOEM3dnZqWHpaODJzVFRibzBCSgpZZHIwMGdTYk5IV1ZkRnRkSmh5MzhKcm9hNzFodi9nalFDUk5BMGZMT1FGd0E0NDJ2NEczS3pHeW1WWkRNNEQvCmZ3U2x2Q0t1TEFUR093aVRSVWF1WXRoejZOdXBUZ3J2T1RQL1QwYzluREYyMW1KZ3o4cDhxTFNNSDg0c0U2d04KSlJ4TnpBTlhwVyt6UjJwQ2lrU2NsRWNFVXpLUWJUYW1PMFBEaXpBUWg2TC8wNU51c1owbzVBbWpSS3JaY3NEUgpnRkJ5VHNnV1RLYmJLR2VVS2VSVmVqaWUvZStMeUFqZ3Fsem5rUjgxbkxlaVRmUEdQbnBJNm9pSStxLzNRYzlQCi9iMGp0dW1NRURxNWlJTmdJbk5nK1E3UVBVaTVERlQyaWNFb1Q4bi9BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIKL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoZVp2VjZNZ2w3dUkycVFVZENER0JQUStDUnJpClk0TVhyQjhhajh3NFg0elVGKzljUTJGcDdMUlphTWFLbjVWTXNkaWJnSWtQeU9FcU5KVHdPb1NZc3JsOTNPUDAKUEZ0VmxoRGE1VzFUZURibUxFaW9WS0dMS3d1VkU0cHV0V0JMZjN5NXJUTEpQUHlxS0ZnL1pPck1PZUkwTE1BSwpMNnp1Q0FVVGJ4bUpHY2I5TkhKcytNY3ZDSmMvWHhIQVFBbmxmcVNGak1SRFA5QkRxcVAyQ21ORE5yMTk5VlBPCk1LV0FNZmtOYjRHc3B4RzdsdEQrd3E3M0Z3b01LRmNRRm1vdFBYQnVJSXJrSnRLUlhJTmViNnA1bGlobXpORHUKN081ZVZOVWpGZHNRa21XS3B4T25RaUNSQzNIeExKSGREVmwvM0huWXRiaVNueXpLckIwRlpCVGQ2UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "key.pem": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdWRzUURNa0RHeS9Kekpic2UvSDNnWjJYS1pmQXU3NzQxODJmTnJFMDI2TkFTV0hhCjlOSUVtelIxbFhSYlhTWWN0L0NhNkd1OVliLzRJMEFrVFFOSHl6a0JjQU9PTnIrQnR5c3hzcGxXUXpPQS8zOEUKcGJ3aXJpd0V4anNJazBWR3JtTFljK2picVU0Szd6a3ovMDlIUFp3eGR0WmlZTS9LZktpMGpCL09MQk9zRFNVYwpUY3dEVjZWdnMwZHFRb3BFbkpSSEJGTXlrRzAycGp0RHc0c3dFSWVpLzlPVGJyR2RLT1FKbzBTcTJYTEEwWUJRCmNrN0lGa3ltMnlobmxDbmtWWG80bnYzdmk4Z0k0S3BjNTVFZk5aeTNvazN6eGo1NlNPcUlpUHF2OTBIUFQvMjkKSTdicGpCQTZ1WWlEWUNKellQa08wRDFJdVF4VTlvbkJLRS9KL3dJREFRQUJBb0lCQUZ0Mmp3Tjd1T2VjTVBkYQpIcTh3ZU5sMHNIdHJqeEhWL2FoV0xOQkJqUDI1N1YwdnB3MXNmWS9UMVRuanRVSzJDdFFLdUhGQTlFWXlydTdLCkZoTkFWZ2lRMlVCQ3Y2MzV1T0JuaFdHYlRIUnQyRUhrUkdrN21PV1dEQk54NGRwMzhUeklzRFQ2bDM5T1JOdE4KajJWSm9vbVRZRlJYVkxySUI2SXBkQkN4WmtrUjNuNytUdmIwTjJrVm9ESlRPczlWejUveENWMXpJZ3cwZ0d6cgpoQ0NRamR6YitCS2kySVRZNmtLT1dzRFJNeTRtY3ZTZWlhcWR2eW9LcGhUWlhDTmZJM2NMUTdYL3lVM3NlRWllCldIMmIyM1U2ckpQVDZpaGY2eWpUWnNOSmRXZEhUOFB0Lzl3aytwNmt1emNDRFMvZVVucWJlR01VcDQxVEVYc0sKWWhQT2djRUNnWUVBMHd2eS9wVlF4UlM3RUJOZnlqUlVLcnN4WXhYdVNQUG9EaG0waDVlQTQ4VmhpSWFNcjF2RgpTTVV4alN0U1hZbnhXUjFuRUNEQk9ycTNscFhwaWZwb2JVSzk2ellTTVp4M29DdEtpSUlmQWE0N3V4SlMyd2prClhlcXNvSVNjVit6MHZXRE5OUHJ1YmRWUjB6eU56NHl6K2VKWE5zL05RYkpxQjF6bG0yc0FjRmtDZ1lFQTRYRjkKTUhGdWRnRUdyekRBc05TMUM3Uzlsdk1XMStaeUVsZ3J5M21SZUZudUJvdTdjNlpUcnRGTEVQQWUyT042cWxLRQo1YkhyTTFFRzR0ODh3eVdtM2k0RTFFWVFPbW15TnBFUU1TTm5MMVQ1aCtTbmM1THpCYmw0alVFYXZpUnM5R0dTCkdlZ0p6WUUzN2FwblNTbWExNmhlTVV0THQyR2J6Y293SDhqdEFoY0NnWUFrY01mQVZaL2dwN2UxQ3VOYlVyWEYKdXhUSCt4MXQwMCthUDY0QVM1U2h2NDhidDcvSzk1bVUreGVYUEllNFJ2MDVXZTVWeHBJV3hlNjFQYVZaZ2JkTwpSbHZzcFNWM0U0RkVVclZINU0vZHhtdmgzVVFaTmV2WW01QzdGcXE0TTkzK1pSeUpyVnBGOUxOd09lQnltZVRwCm5MOWFZMzhaZk9qNTVIeHczWVR4NFFLQmdIcTJoTGRPdHhyQ2VqbjRKcHJhWFdYdXp0Z1FuOW1MVllKSXZpWDIKbVVsU1lpN3I5bkFBRkVMdko1WWpyaGJPMCtGTUk0ekg2TWU1RGkrRjVoUXZOWUp3dUM0M3FQT3l2cy9XN0dKaQo2L0ttcFdEa0JJWHpjaGNtbXNrQXJDYmR1dlRXKzJqZ2xoMW5mZUwvUTFOZXN5czZPWE5Ka2dCU3dEVW5Ia1RlCjRLdW5Bb0dBRlJIKzBtUnlENEhXMlk0dVNJY0tKaGRqM1NiVDdXcUxGK2NUZU5uSW9xRTFHN21QaFNSa0w1bnMKNDlZdmQvLy93d1E0b3JpOHArYXV6S1UreGhDa1ljTnRsQVBwR3RDQ1JWTXA0d2R2RlA4NXBUM3ZvQ1UxSTlDQQo2M3BsQkZ6eFhaZnVBK0hWWGNJU2p5WkRzcXJhZWlDTHRGcDlBbURsZnJFRDYrYlI5R1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "proxy-injector",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-proxy-injector-tls",
                            "namespace": "linkerd"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "v1:rhjG7fLPiFiiby0+:pqYKzePRo+DCHXxuJjgaBSFeXXB9R1AMR8435DszvaeNIdWeCgRtO6iKuvQ6JyK02p6HNLLW5Po+bnGFGggbcfiBjoAIJhnxwkG9wwjQ7I4dRwYjc2hJfbzrClGL6RW00fgzkgP2zRvsHjP3IIKMESDXXkw98gVjqYkifvKv+WLThI5lkqBF5sKQzqGctUer/7e50TqrE5GW/Pfn+xgptvR3dK6Oywf5TzixifZBGWIEY6d3+xu1isGqXUuNreZWNuvlZb6/GZgmLcaaStnSd2YjOlgbffiea9q9F708lIdGvG4vZyzrMUDgEtWB1+xbsM4tdXVaDiMrnF5gw3dbwZ975gzXBEpYszS2NkubY00UxmoTTotABCsV6hrvKJe78v8Zm/DzBQ6b3/v6KR2NiNwsfdmB+nRX/wHJFG1lOkVJLWKW8UElFj46kYa8nHieoGOUJ7GRnXBpPAQi3XBgygN+ID9obFKnq3HG/uVpLWJNRJpFKx7hKGAA/gvNmg+LrtRjtC9xurq1sBqxrDbXCgazvlxzFOorLVlUUHIGmLy+YT1y+27wDIcnW3Eu6P3HgrRfiUzd9uwkyI7zdWWouu08zmkETk/ryBUb9CUw+u9cK4BsMOFb58MEucfHAN/Eq7ZIwpoJnISmfJP/b4tkbkahdTu5+MGE7d0q1E8F+pQDHRcGRVN0S18tgqF0SEn9HCDlJvsMF6oZVU22nVbT5dENeEpYtSYiSrjiSDaO+JcgyxqER/l6CACsZky6yflOF4+ZNHS0nvAT2/u8NAdV/j6XSBt78HuWn07cDznM6Vbp0WwwRuxvxxn95ubhGgO2kAIhSUEEOLQPlB2h4gAkMQ9mbUaAWQYeZrM0TDCk2Ce4nliwc57LUYl+k7tiHTzEMbF3HDHXfuFHxr8jmnEQFzk9frbuzqs5Je0oiMJbKi+UWM/dyvF/SOg/FJtaUjpURGm+i1JeToFrw1mUl2gqVZFauuG21v7mNOCC4Cri+SL4BrW7ef8NqvV7RaBhgYUEMdy5xa1W3sV2BkhEYlheS4HIYhAk1G9mll5Lxto0oph14gHEdgJpA58zyqlXcB2AWD9byXNMksd8zfT+cUe/4VXnqF32jNigNGnoYNTOFIJZ15/1onFNE8r3BCAqGWVeMOGxK/hgUvOVZgzgP5KpLVu8EJs7c6SUXIE9vShPYseHvVF9jDYdcbt87pvfdHfWtJjhulB8YlmF1vvnB8BWT1d7GzpbNwoMsCBaF6xNHX2wtckhQMF3n7kaP2pf3DIHu7Btj5oONUWxQNtJhm5K2FNhNolmuYPAvKOP4+n3kaWq+mqpQ5zUE9DNDjw6FuvIej9/LXxa9Q1rS3YIiwadrvEHF05cNwZ3UtXVIEcjgE9K7Z/D2Y5xyI1uFs8KjovhI2V0mSbwe1SVlSa7SRAaPTZM55rD8EwvvAJArgy7C03/4qivb1+bZe4zFhbs6LfUAQk2oC4vOK9vAQvDbR3Yj2+fA42C0QjHpXnCHNhcwrS6LuBbVyL/kchQngaTT+4NJMeKDaOTq0P7ubPopNAMyHXx/8lhbetiIsMBQdJS9RL1jhbhbsRQcd00iHp7uPMDPYDia9agSnRsO6DsUfHBXqmVpM3b9xN7YNC2jli2dszjsEo+iVPhXEBiGARv45TqKlIEQnttVXBfvhLEQvpYIg2zRJTciWWrRor7zPALQ+k6Smxqrl44+Il9C7tvRMTFlOKniUdHuMG72w0iIQ7ir/kOZOvYwPVvL6L8j47jIEkAjr3xTgb8KSybmTK58dqFlRsZ0rS/hfUksaHUEYAUB2eTIholhrW3cPJKz8c0eMzXyO8HsHKGW8h+eYgcGjtlFmVhpvs8aJAEPGqCy/42JUIUSfWzjenwrSFKVg8BZbQGib6A0ive02+7+Nsur3KP5HQQU1ztI1hAGrCrZHnpPiNouHADGTUuqct/WJE6GqOwqJRB8RZR4cNyLtyz3ZO19b4MbrwCAJ4d4IkwHxszay549yFvbjFTLzMCyh2sfpBzE9DfCyhV2s4Oah8ESpZRDeHkxd65Tz9JuQJ4lJVWCj5VnMDt1GoajE4vlxaXOZjSZQ+uwgnwJPtRj+H2F/YgPFArZf9BYsUOn5nw+1TW5vciVQxWAMX0q3cJiuSR1+3b0t1ZUj1ITUElq/LykmlU2vwSkQmTMUWTJZlF8WZaoburQnpmBhrBKRa8jYJgcjrzL6VyOY8QznBV6iTcuPwOSytb8wpQ+VLnTIq5TfFLxaVcC4L+ds6nugaSlZiLXOeIyhgudGv6POXbXqrP2Fu6yHCmp0DHnILa1LUVll/2/AsX3hwmu96cuzYglQURxmQPW/QHLGQRhiCRFdXuEd/LUuMCwuE5o97Q4F9OIp67NDJNTmSmJHtnUzuwY3O3J0og4XbRHGvbsJAGfP6BzKTf/UYAobzOuPeRy0oOcrlVhS4/+Zh5ZBhi6yoV8rASVj4VssC5LAlgh5aMWJXS1naKFHRgElvLyDfniIIj4tUIsf79q3Nn8Xn9m5vNxpyYI1OUd/DSrd63GSxgkVA/LMpe74OgnuOfBKQyahm1gvelvRFpcDAa2d3lRxITrLcJAD3WQVOhdBAf72crnX58AziV1XcK8tKI6dljw4EHcJTLt8lGz87wtWcyrMe/a/s2JRAG8Ktvj95bDaGT+DxtB/SzwMKZCsWNIwWPA4lLXWAsbPuByDLw2PPHReNcaoZCha9lrb0FVB+qBMplMv98XZVvjb9po5469U0aSM/7SN+mJGc1hM8XYORfBMP3CnuynwBoE4C4TS7s2hYRp3Ct+pCV4CJqiDW3zI4xFBA/rEMxRMm5zvcfeVFYIxMgZqOI8BHaZJixXqESB2ynipCN6w9luC/eebps40zOzwwrkP0uhl5y4iA0lPCqMEoocaUkm9GYrqP1Ko/ww6lBOR+qNutzQ1+ZgOdoN+sxO9al2aVcsJE7VGDaKTLaZ0fM1uvw/G8sYmHtb43FFHY9bFblLi7l8mymxXTFs0DrAw8R4KmF37GLF+E6oA0VXCu8RO+7BXeIq+Y9QhdjqjzVSWu8u7VXIVd9m11OCovqpD6ky6EAyyCzSXgDD3tqY2vLCSbF8bUOUfw1DlamhshldoIEfDAJvJTMESW/jZRavRfGf6ad8VXjUCA5xooVzlJG5/1ZZu3s4QJBSmNuVgY8k0319RVnvvxLK1qCWvAnhOS5y+/hvaP9v1TnUOE+EpDvUdTo2qW07wruqTmdrGbVxxNUWuw2Moe0L5jtcD3heP0KILo9hBEgldM7UZX97iIiiZ64J83DEceYSFEsvHGcgfObU+l++rsjnM0Rk1i5/DfNXd4pKNHzk5DH18csta7F7vQhxVLyEfLJyIj32ksltMv/akK7IxOvIL64euEUIYzhmUZLdqgzGa0HLf30cr524L16r0+SjYrT4pqqUvPZqQhRwTgUjoVUspKM19lxxfA63VZB573OE0TtZJHxAUC44t9oziL9UeQsO3MMObTTtiwm7tQgUnSKFT/NQ2owiCj0ueuGj+G4pzohdasmwM6hU4J83QZnAjEemENtf79F2EdenoLREQkmOivEU06RVuXZCJkKRnYeFxN6NC4EZSBrrb3DD4WsSaLayfOhuv2+ZUl5tb9NP+YA3E+H4tayWQknm0yeOf4/fqTW0ccVCpgwO5HMsXoIHmDk6xqL3juCdYMlEXKN8j+YNw6D31wzdC8DrZ3jV8FTMC18xJu4czRd3fxJKkwKDVUhkIFttJ5VZEpgx15gQhStLmIwRJ7RV+VlG8kbUENZEfKY8mOU3n9NBWHdHwGnZVcpEsU3fHUT9jod7tyb1cmdSbPuvW0A38JMwVG3DSba9D/jQ8OwAlX5UnZN4OY6qX1u5RTbcXubslpM2CI45EHmvIJIXnycd3yPeyDT464Yl6c7i7MnYPS7wjvWkYRUCzhQrBGh2WSQhRAaO7hYmMs40tfNSBtw8KFALNHk9NJts49p0wDDg8KNj9yhE5sSC9x5SogudtkICMTDZZNa6zeByKBoiimKr/QW2ZeW9W0n9TRIOxa42Uv8mGggRXDre7crlxUk89Uabpvi/7Q4uVvHQ+jlnG482J18WT11bF7rLmP6QCirl1FW8/95bzyMgk641CKSnyIYcnUwI3Iz0zw5G682kJ98NU9NA8JitgG7IlLEKfw6MSstk/W7QQNWjI3qrJUVaf/NfDXwY/b36gu2jkvkxJG08aInyB9F5cZeaAmA0nJ5DmH4MuiW9pE71nrNc/mA2GEDl1NvSw1t5VIya5/QRVcfQHhi7dz6O1dBbdPW/bk3J8vcCC42uya8h04z5Ze1mgomiJGgPwc2LivgiG3eP6yWkbRyVPdOvM5m7ZaUI+dwzvOkfgK6Tn2jKUnGZ/gBoEyPaoplioqnBzonUcRCw5uAs8TkGHfrGslfVkKo6a+BRw07CN3ZY4kFg2gIIfoABe6jM7cAYaJzlwAw5aEvqHwgdGLxqRszLH61fXy9a/MpJ4ZkSLXiM9ojJcUqA4/FB0PdcmCHqpGB8KGnLgabTfLczs6zixCi8awtao1DrdkmcQPQCpl76GVGtiEI8cURofVMEcx+76kjO4PUTahDvPk9mhJi3dOp4zOWbbmhyQp8wh1lVqVWx8jrcG4SofjT4r3elNcJRsuaLjrkO0tdUF04VE5pg8EDQUWpW3m4D8fOrCPx2AcjaiTaoqkqhhGRuWMbehLZ+rvuq4JaZaE9HTksXKudsrV7wl0XgkPQzngZNyg77M6fRpuceiPLJvok7sRkWiLxxnUwkjVCx246jH/mEsPRKH+7UUG8XFMmFyotXPkwV45BCXqHMY9KHta+9qms/v4KrOoIG56cIPIDOqTttkOWRYsR9MdyH2qbdp4qw3GBG3ge4e+zwaspjCy413jMzSMEn4CH3CAx9ouW881ChfKi4l3uJ+LLTcwnQFPDOxgqG+J7JlMT1HSIFalW7/x8fsqCRourE1DnFNeiMDSRmZIyXuCq5SH8MwJbjxpOchXv5Phs0016KkRgHBAg4Tg/XIVY7Pf7BlXZfQDShtuBdyorRFMh6kewV/0BwqhW7JUQ"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"crt.pem\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lSQU1ET2RodG8rOFlUbW9vV25WK1RhN0F3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB4T1RFeU1EVXlNekUyTURsYUZ3MHlNREV5TURReU16RTJNRGxhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQzUyeEFNeVFNYkw4bk1sdXg3OGZlQm5aY3BsOEM3dnZqWHpaODJzVFRibzBCSgpZZHIwMGdTYk5IV1ZkRnRkSmh5MzhKcm9hNzFodi9nalFDUk5BMGZMT1FGd0E0NDJ2NEczS3pHeW1WWkRNNEQvCmZ3U2x2Q0t1TEFUR093aVRSVWF1WXRoejZOdXBUZ3J2T1RQL1QwYzluREYyMW1KZ3o4cDhxTFNNSDg0c0U2d04KSlJ4TnpBTlhwVyt6UjJwQ2lrU2NsRWNFVXpLUWJUYW1PMFBEaXpBUWg2TC8wNU51c1owbzVBbWpSS3JaY3NEUgpnRkJ5VHNnV1RLYmJLR2VVS2VSVmVqaWUvZStMeUFqZ3Fsem5rUjgxbkxlaVRmUEdQbnBJNm9pSStxLzNRYzlQCi9iMGp0dW1NRURxNWlJTmdJbk5nK1E3UVBVaTVERlQyaWNFb1Q4bi9BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIKL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFoZVp2VjZNZ2w3dUkycVFVZENER0JQUStDUnJpClk0TVhyQjhhajh3NFg0elVGKzljUTJGcDdMUlphTWFLbjVWTXNkaWJnSWtQeU9FcU5KVHdPb1NZc3JsOTNPUDAKUEZ0VmxoRGE1VzFUZURibUxFaW9WS0dMS3d1VkU0cHV0V0JMZjN5NXJUTEpQUHlxS0ZnL1pPck1PZUkwTE1BSwpMNnp1Q0FVVGJ4bUpHY2I5TkhKcytNY3ZDSmMvWHhIQVFBbmxmcVNGak1SRFA5QkRxcVAyQ21ORE5yMTk5VlBPCk1LV0FNZmtOYjRHc3B4RzdsdEQrd3E3M0Z3b01LRmNRRm1vdFBYQnVJSXJrSnRLUlhJTmViNnA1bGlobXpORHUKN081ZVZOVWpGZHNRa21XS3B4T25RaUNSQzNIeExKSGREVmwvM0huWXRiaVNueXpLckIwRlpCVGQ2UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\",\"key.pem\":\"LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdWRzUURNa0RHeS9Kekpic2UvSDNnWjJYS1pmQXU3NzQxODJmTnJFMDI2TkFTV0hhCjlOSUVtelIxbFhSYlhTWWN0L0NhNkd1OVliLzRJMEFrVFFOSHl6a0JjQU9PTnIrQnR5c3hzcGxXUXpPQS8zOEUKcGJ3aXJpd0V4anNJazBWR3JtTFljK2picVU0Szd6a3ovMDlIUFp3eGR0WmlZTS9LZktpMGpCL09MQk9zRFNVYwpUY3dEVjZWdnMwZHFRb3BFbkpSSEJGTXlrRzAycGp0RHc0c3dFSWVpLzlPVGJyR2RLT1FKbzBTcTJYTEEwWUJRCmNrN0lGa3ltMnlobmxDbmtWWG80bnYzdmk4Z0k0S3BjNTVFZk5aeTNvazN6eGo1NlNPcUlpUHF2OTBIUFQvMjkKSTdicGpCQTZ1WWlEWUNKellQa08wRDFJdVF4VTlvbkJLRS9KL3dJREFRQUJBb0lCQUZ0Mmp3Tjd1T2VjTVBkYQpIcTh3ZU5sMHNIdHJqeEhWL2FoV0xOQkJqUDI1N1YwdnB3MXNmWS9UMVRuanRVSzJDdFFLdUhGQTlFWXlydTdLCkZoTkFWZ2lRMlVCQ3Y2MzV1T0JuaFdHYlRIUnQyRUhrUkdrN21PV1dEQk54NGRwMzhUeklzRFQ2bDM5T1JOdE4KajJWSm9vbVRZRlJYVkxySUI2SXBkQkN4WmtrUjNuNytUdmIwTjJrVm9ESlRPczlWejUveENWMXpJZ3cwZ0d6cgpoQ0NRamR6YitCS2kySVRZNmtLT1dzRFJNeTRtY3ZTZWlhcWR2eW9LcGhUWlhDTmZJM2NMUTdYL3lVM3NlRWllCldIMmIyM1U2ckpQVDZpaGY2eWpUWnNOSmRXZEhUOFB0Lzl3aytwNmt1emNDRFMvZVVucWJlR01VcDQxVEVYc0sKWWhQT2djRUNnWUVBMHd2eS9wVlF4UlM3RUJOZnlqUlVLcnN4WXhYdVNQUG9EaG0waDVlQTQ4VmhpSWFNcjF2RgpTTVV4alN0U1hZbnhXUjFuRUNEQk9ycTNscFhwaWZwb2JVSzk2ellTTVp4M29DdEtpSUlmQWE0N3V4SlMyd2prClhlcXNvSVNjVit6MHZXRE5OUHJ1YmRWUjB6eU56NHl6K2VKWE5zL05RYkpxQjF6bG0yc0FjRmtDZ1lFQTRYRjkKTUhGdWRnRUdyekRBc05TMUM3Uzlsdk1XMStaeUVsZ3J5M21SZUZudUJvdTdjNlpUcnRGTEVQQWUyT042cWxLRQo1YkhyTTFFRzR0ODh3eVdtM2k0RTFFWVFPbW15TnBFUU1TTm5MMVQ1aCtTbmM1THpCYmw0alVFYXZpUnM5R0dTCkdlZ0p6WUUzN2FwblNTbWExNmhlTVV0THQyR2J6Y293SDhqdEFoY0NnWUFrY01mQVZaL2dwN2UxQ3VOYlVyWEYKdXhUSCt4MXQwMCthUDY0QVM1U2h2NDhidDcvSzk1bVUreGVYUEllNFJ2MDVXZTVWeHBJV3hlNjFQYVZaZ2JkTwpSbHZzcFNWM0U0RkVVclZINU0vZHhtdmgzVVFaTmV2WW01QzdGcXE0TTkzK1pSeUpyVnBGOUxOd09lQnltZVRwCm5MOWFZMzhaZk9qNTVIeHczWVR4NFFLQmdIcTJoTGRPdHhyQ2VqbjRKcHJhWFdYdXp0Z1FuOW1MVllKSXZpWDIKbVVsU1lpN3I5bkFBRkVMdko1WWpyaGJPMCtGTUk0ekg2TWU1RGkrRjVoUXZOWUp3dUM0M3FQT3l2cy9XN0dKaQo2L0ttcFdEa0JJWHpjaGNtbXNrQXJDYmR1dlRXKzJqZ2xoMW5mZUwvUTFOZXN5czZPWE5Ka2dCU3dEVW5Ia1RlCjRLdW5Bb0dBRlJIKzBtUnlENEhXMlk0dVNJY0tKaGRqM1NiVDdXcUxGK2NUZU5uSW9xRTFHN21QaFNSa0w1bnMKNDlZdmQvLy93d1E0b3JpOHArYXV6S1UreGhDa1ljTnRsQVBwR3RDQ1JWTXA0d2R2RlA4NXBUM3ZvQ1UxSTlDQQo2M3BsQkZ6eFhaZnVBK0hWWGNJU2p5WkRzcXJhZWlDTHRGcDlBbURsZnJFRDYrYlI5R1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\"},\"kind\":\"Secret\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"proxy-injector\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-proxy-injector-tls\",\"namespace\":\"linkerd\"},\"type\":\"Opaque\"}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T23:18:25Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-proxy-injector-tls",
                        "namespace": "linkerd",
                        "resourceVersion": "56543",
                        "selfLink": "/api/v1/namespaces/linkerd/secrets/linkerd-proxy-injector-tls",
                        "uid": "4b005b20-d60f-47df-886e-e1b57bef3ec5"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null,
                    "type": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Secret::linkerd/linkerd-sp-validator-tls",
                "custom": true,
                "id": "linkerd/linkerd-sp-validator-tls",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "crt.pem": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJakNDQWdxZ0F3SUJBZ0lRZlExUjRjdmtZN0EwV3pLOExqWWlNekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweApPVEV5TURVeU16RTJNRGhhRncweU1ERXlNRFF5TXpFMk1EaGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBc0ZSd1RnZ1RoR0F6aDNEVlViSXZMTnRTMkpWczZvSHk0d3BqalVMKy9JQlZlTDREYThwTQpjeXlTREF5Y3F6aEVOS0JCcG4xNE1DUXlMeURRdU5KdEVLTEpRbXVKWURYak51eUMxRXRidmZONXdFai9ianRPClFVYWMwalZqUlpJTGlWMU5kYTZuZVgrZVJzWUVuYmJjVXlqeE1URHg1M1k2ZzZuYTZMNFJXN0d0ek4zdCtuaEoKaEo4bXNPWUM4WWgyM1B5N0N6Qy85YTVMMThnS05VekR4d0c0ZTQvTDJndndjVklwUnFUMnBpNFJMMVh2dkNxWgo0UnBkNktwYW5TRDAzaEhCdXRtaHpjbC96V0U1Q1h4VllyS3BrZTdmL2xuNVlmSFRROFhaWlpNY3lnaWRjQ1NuCmk3Q05MYnVSZXZBRXNxN0V1ZWhrYXFEVUpHK1Q2cFR6TlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUMKQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQgpBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUYvL212TFJYSDV6VHNlRUhra2RKS2s0YTlvODJJWkc0V2JpCkZnUzlqZ2VESldraTNpOXhJcmlEVWt0SzcwME16dzdISnEvUXA0bzE3WGtBUExsTjNNa0FuVERQNktKVFVpT1EKaU9vYk5EaDIyYWRoSlVQSytHdnc4YTJBR1NHZ2lObHR3aTRqalNjYlg1MnVZWm0xVzd6OG9zMElrMXpmRjZQRQpKdVVSemJjbFNoQzR1WHYzWDN3ZnhCaTB3VmVTWDBGcjU4U0l3NzZPdEFKNVJxdTZEUDlqalQ3V3JncnRqVXZyCnZQVEJTSCtaUzJIMFo5RWVwaE9GOVBwb2JrejhkVXpsUFMxeXdQR0FsOC9STDl0aHFoOEdKcVZTcVgyZmw4UWMKWjE2Smg1c0d5cW9qblRtcW55VVNhZDduWnFNNG9mQ3NRSjlmaVV6bXhGeWtwQ3JHajFRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                        "key.pem": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc0ZSd1RnZ1RoR0F6aDNEVlViSXZMTnRTMkpWczZvSHk0d3BqalVMKy9JQlZlTDRECmE4cE1jeXlTREF5Y3F6aEVOS0JCcG4xNE1DUXlMeURRdU5KdEVLTEpRbXVKWURYak51eUMxRXRidmZONXdFai8KYmp0T1FVYWMwalZqUlpJTGlWMU5kYTZuZVgrZVJzWUVuYmJjVXlqeE1URHg1M1k2ZzZuYTZMNFJXN0d0ek4zdAorbmhKaEo4bXNPWUM4WWgyM1B5N0N6Qy85YTVMMThnS05VekR4d0c0ZTQvTDJndndjVklwUnFUMnBpNFJMMVh2CnZDcVo0UnBkNktwYW5TRDAzaEhCdXRtaHpjbC96V0U1Q1h4VllyS3BrZTdmL2xuNVlmSFRROFhaWlpNY3lnaWQKY0NTbmk3Q05MYnVSZXZBRXNxN0V1ZWhrYXFEVUpHK1Q2cFR6TlFJREFRQUJBb0lCQUhtcDJVOU43VUdDS3l2QgpvNzVaeG9rWno0RFhJUzV4ZVVoRWE4b1ZOdUM4SDcxT3hnZUNydHN0SHB3bnU1VzhIZnQ5czY2UGxmVUpsSUxHCkRwM251dzhtY3QxY1c0NUJ3RU91VHRyeUlCdmhPZGw5eEppblhPaFhNMjhySFJMc29QOG5uSUdkZjdxcVhtZ1EKeXpDUzhsU0N4R0NmbDltUHp2SDNxYTY3TGpqb0s0VGRYeFlNekdNOXpKb1Vmb29xUVRBSlVqaXVGWko4Z0dhdAoxRWVrZ2d2aXF2Tmpjc1hyb1ZMY1NOWWxYOURRNFBFbDdQOVZ0a0Nyd3E2M2hVK1l3bXN4QzlYRXpJNlNYZVdrCmJPUElGZ1Bod0FOblQzRXU0dmZjc3U2R01YalBWZXBxeUxWL2JmbVI3UkxtVS9nOXBRYWUrU056MzZYaGRPeGgKcTRzZWtDVUNnWUVBMUZnYzBFMFhCQXFYZGFTU3NvUUQ5SlVwZ1poeUgwVWhMQ0F0RUNCNFBIblVyOFA0UWpIUgpWVWZYZlRYQVFpTHRzTzVVRlZlT3EwR2NzRW5ZS0VpdkdRVFBzUVZWRDR0UTJKOWxOOTIyQWJOTi9meXVaZy9XCk9hU0MxRmYvTTdUZlpjNHJNR0VRZXRoenlXcXArSmFkVk9tWXJURDhpeTBiUytCQlhiVFJrbE1DZ1lFQTFKVGEKMFpTeWV4VnFhNmhtL1UzbjV5dHJWbUN0ZGdvaFU3Y3ZaUXkyaVZsQXoxNFVDbnFSWmcvREQwaTl4RVJpVVN3Rwo3alRLR05UdkVxSUhxQTBROUI1ODZMZnFLQkZlOXdRSU5SaDVzTVpSUEVlL0R4cnFKb0FWWTZuSlpnNktMZG5HCktiRnNLb1ZCck5LL2xRbjVHeGJHM2xqbTJWeFFJcnN0cjRpZHcxY0NnWUJUckxrRitDckdvK25WS05uSjBLM0MKVm5qNW9YbnZDbzJzMXEwTE90QkdmSGVzSDF3WHNZdmN3Q2VSSm5veFZaUTJjV1BlMlJiV00wK3NSQjBTbXJtcwo4VEZxZjBCcWxLcHlBaldma3hWaWpDYUNuR3lZdVVyZ2dnd3Y0dEVrcmZTT0tIVHFab1ZZOHl5RlJTdmZVbktECkFGM3llV2c2NjdaaTZ1YTNKMGFpRXdLQmdCd1VvYWNIbmwvMTN6M2pXOTlmK0I4b05DQ1Aycm41OHBjTlhweFoKaG84MEZBU1FaOU5PaDRCVTJxNWRMSHdOa0hNcWZxdmVtMGVXY1JJa0J5RGl3UGVPUTIrMlE1OFJWRnNLMUU2MwpNZlB3N25BcEJncm53a0Jkc1BXZVN2VkpQR1Y4RzlvTURyNjdKWWEvdkFEaTlWM25yMU5WcVFEVFdkNk1uU2RQCnc0ODNBb0dCQU11bkJIWlFBWGgvUkIzbzlGRi9CNENZY2NZVElvZGgzNThKK3p3R1VxZ2F5Ym81VFdJWkdreDEKVDVLSmVvR1UxTHFkL1FpOE1TcVpYTEhOeWUxYkVPNzdnMlZSWWpGKzNnR1ExL3J4RHh0VTRqTW9nZytaeDcrNQpwZkgza2V3bjIrVFNIZEN2Qk1wb3c4Sk5CUlZxVkUwdWswMjJtM0NMR2RtVEkwY1ExUkIyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-sp-validator-tls",
                        "namespace": "linkerd"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "crt.pem": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJakNDQWdxZ0F3SUJBZ0lRZlExUjRjdmtZN0EwV3pLOExqWWlNekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweApPVEV5TURVeU16RTJNRGhhRncweU1ERXlNRFF5TXpFMk1EaGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBc0ZSd1RnZ1RoR0F6aDNEVlViSXZMTnRTMkpWczZvSHk0d3BqalVMKy9JQlZlTDREYThwTQpjeXlTREF5Y3F6aEVOS0JCcG4xNE1DUXlMeURRdU5KdEVLTEpRbXVKWURYak51eUMxRXRidmZONXdFai9ianRPClFVYWMwalZqUlpJTGlWMU5kYTZuZVgrZVJzWUVuYmJjVXlqeE1URHg1M1k2ZzZuYTZMNFJXN0d0ek4zdCtuaEoKaEo4bXNPWUM4WWgyM1B5N0N6Qy85YTVMMThnS05VekR4d0c0ZTQvTDJndndjVklwUnFUMnBpNFJMMVh2dkNxWgo0UnBkNktwYW5TRDAzaEhCdXRtaHpjbC96V0U1Q1h4VllyS3BrZTdmL2xuNVlmSFRROFhaWlpNY3lnaWRjQ1NuCmk3Q05MYnVSZXZBRXNxN0V1ZWhrYXFEVUpHK1Q2cFR6TlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUMKQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQgpBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUYvL212TFJYSDV6VHNlRUhra2RKS2s0YTlvODJJWkc0V2JpCkZnUzlqZ2VESldraTNpOXhJcmlEVWt0SzcwME16dzdISnEvUXA0bzE3WGtBUExsTjNNa0FuVERQNktKVFVpT1EKaU9vYk5EaDIyYWRoSlVQSytHdnc4YTJBR1NHZ2lObHR3aTRqalNjYlg1MnVZWm0xVzd6OG9zMElrMXpmRjZQRQpKdVVSemJjbFNoQzR1WHYzWDN3ZnhCaTB3VmVTWDBGcjU4U0l3NzZPdEFKNVJxdTZEUDlqalQ3V3JncnRqVXZyCnZQVEJTSCtaUzJIMFo5RWVwaE9GOVBwb2JrejhkVXpsUFMxeXdQR0FsOC9STDl0aHFoOEdKcVZTcVgyZmw4UWMKWjE2Smg1c0d5cW9qblRtcW55VVNhZDduWnFNNG9mQ3NRSjlmaVV6bXhGeWtwQ3JHajFRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "key.pem": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc0ZSd1RnZ1RoR0F6aDNEVlViSXZMTnRTMkpWczZvSHk0d3BqalVMKy9JQlZlTDRECmE4cE1jeXlTREF5Y3F6aEVOS0JCcG4xNE1DUXlMeURRdU5KdEVLTEpRbXVKWURYak51eUMxRXRidmZONXdFai8KYmp0T1FVYWMwalZqUlpJTGlWMU5kYTZuZVgrZVJzWUVuYmJjVXlqeE1URHg1M1k2ZzZuYTZMNFJXN0d0ek4zdAorbmhKaEo4bXNPWUM4WWgyM1B5N0N6Qy85YTVMMThnS05VekR4d0c0ZTQvTDJndndjVklwUnFUMnBpNFJMMVh2CnZDcVo0UnBkNktwYW5TRDAzaEhCdXRtaHpjbC96V0U1Q1h4VllyS3BrZTdmL2xuNVlmSFRROFhaWlpNY3lnaWQKY0NTbmk3Q05MYnVSZXZBRXNxN0V1ZWhrYXFEVUpHK1Q2cFR6TlFJREFRQUJBb0lCQUhtcDJVOU43VUdDS3l2QgpvNzVaeG9rWno0RFhJUzV4ZVVoRWE4b1ZOdUM4SDcxT3hnZUNydHN0SHB3bnU1VzhIZnQ5czY2UGxmVUpsSUxHCkRwM251dzhtY3QxY1c0NUJ3RU91VHRyeUlCdmhPZGw5eEppblhPaFhNMjhySFJMc29QOG5uSUdkZjdxcVhtZ1EKeXpDUzhsU0N4R0NmbDltUHp2SDNxYTY3TGpqb0s0VGRYeFlNekdNOXpKb1Vmb29xUVRBSlVqaXVGWko4Z0dhdAoxRWVrZ2d2aXF2Tmpjc1hyb1ZMY1NOWWxYOURRNFBFbDdQOVZ0a0Nyd3E2M2hVK1l3bXN4QzlYRXpJNlNYZVdrCmJPUElGZ1Bod0FOblQzRXU0dmZjc3U2R01YalBWZXBxeUxWL2JmbVI3UkxtVS9nOXBRYWUrU056MzZYaGRPeGgKcTRzZWtDVUNnWUVBMUZnYzBFMFhCQXFYZGFTU3NvUUQ5SlVwZ1poeUgwVWhMQ0F0RUNCNFBIblVyOFA0UWpIUgpWVWZYZlRYQVFpTHRzTzVVRlZlT3EwR2NzRW5ZS0VpdkdRVFBzUVZWRDR0UTJKOWxOOTIyQWJOTi9meXVaZy9XCk9hU0MxRmYvTTdUZlpjNHJNR0VRZXRoenlXcXArSmFkVk9tWXJURDhpeTBiUytCQlhiVFJrbE1DZ1lFQTFKVGEKMFpTeWV4VnFhNmhtL1UzbjV5dHJWbUN0ZGdvaFU3Y3ZaUXkyaVZsQXoxNFVDbnFSWmcvREQwaTl4RVJpVVN3Rwo3alRLR05UdkVxSUhxQTBROUI1ODZMZnFLQkZlOXdRSU5SaDVzTVpSUEVlL0R4cnFKb0FWWTZuSlpnNktMZG5HCktiRnNLb1ZCck5LL2xRbjVHeGJHM2xqbTJWeFFJcnN0cjRpZHcxY0NnWUJUckxrRitDckdvK25WS05uSjBLM0MKVm5qNW9YbnZDbzJzMXEwTE90QkdmSGVzSDF3WHNZdmN3Q2VSSm5veFZaUTJjV1BlMlJiV00wK3NSQjBTbXJtcwo4VEZxZjBCcWxLcHlBaldma3hWaWpDYUNuR3lZdVVyZ2dnd3Y0dEVrcmZTT0tIVHFab1ZZOHl5RlJTdmZVbktECkFGM3llV2c2NjdaaTZ1YTNKMGFpRXdLQmdCd1VvYWNIbmwvMTN6M2pXOTlmK0I4b05DQ1Aycm41OHBjTlhweFoKaG84MEZBU1FaOU5PaDRCVTJxNWRMSHdOa0hNcWZxdmVtMGVXY1JJa0J5RGl3UGVPUTIrMlE1OFJWRnNLMUU2MwpNZlB3N25BcEJncm53a0Jkc1BXZVN2VkpQR1Y4RzlvTURyNjdKWWEvdkFEaTlWM25yMU5WcVFEVFdkNk1uU2RQCnc0ODNBb0dCQU11bkJIWlFBWGgvUkIzbzlGRi9CNENZY2NZVElvZGgzNThKK3p3R1VxZ2F5Ym81VFdJWkdreDEKVDVLSmVvR1UxTHFkL1FpOE1TcVpYTEhOeWUxYkVPNzdnMlZSWWpGKzNnR1ExL3J4RHh0VTRqTW9nZytaeDcrNQpwZkgza2V3bjIrVFNIZEN2Qk1wb3c4Sk5CUlZxVkUwdWswMjJtM0NMR2RtVEkwY1ExUkIyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "sp-validator",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-sp-validator-tls",
                            "namespace": "linkerd"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "v1:QAEwrnHWk19lzhu1:e/Mz782LMjTqdBPCOHpHNtp4Vfhmg0k7SkOg4dX/uPCaAj3bWvSl3C36F/IXZFNzp5EN3tptti1h0skFE+0rEnP2twfKW9+eSLCl8R8pXeLhyaISqbGCaR1CCnu/GqTv68tagT2rf8idDjQX8B94pfN3IzpLVN7wcatoZVaI1IKGWd4dfl4kJQpI/xga4CXyGWw938aAbGM3lb4X5oY4dvfkgScrZm3oPtpjvo16lfx8Bvp80EAO72DWVSBrTaHewaRwTRx+KV/f+NB+pr+ht5RPU26dF+ybOGs8ebUt3ga9jDGHKFE1kiFAg0F29NiUuwiKscpVnEKpJHSOherkIRVD4OvCTrmKONavi9O7xM7t9e3NjsqCfkCK5N5cQEZflqvpnyKFb9d9WgknO45X4lFSwwqaGVjfNgm/ue6zrdnIAyIp/RwShCGUQ7Bm0gd5FLVb4UQsodaJYdaP/C52WbNRJp7KGChXeLV7RaZyf82GutW0RbYLDRyU8kEXgfeSwWa4SwHEUdgJQ124izjTNQvGhymc4lOZZte+1fuF1AKhpPkcKhZTdqgsjjuCOtb137DAkYzxTFr7TWs4Ivhc3wRsJgz52LQicBniQs3/Vjel8GkHBIlBrsn0Ys/t8btZiYk2CafKAc81D7jXVcRmSv0HD53q1hIH/LCAILgry/XLkwKzweeIQ2bJa+VeP3wTboJ61LkArwFn0sS97Z5z8gGJ6Cxzd0Tub33xIv2JtP9ymk0bBdYVkr8oRvzrPyJZXdo3HOdt8bvtiwTMJSImZIfhOpUyvVpsS30T8H6v/86Dg+X1kyZPP0pNNFqz5p1Gzuzpqwsl9XJCwfT9aFBRj50avfahpaCA2hkolZF6q4QNcEypSaJW1pmE6k+k5Pe7Nc32luNle0+bi21TgJkPZVtM6JkypAPQehMcWhUlyve2Rm0CU2MHMD4lcGGWGHwlV7dcD62FonMIFqldAVb/BuPIHgMoCh5R96xmJGYlUuBWVO4q7PklnMl0axhGY35e9gtL3gDDhgQZjadXO2nx8dXqyuq+W+obYWD8DinOQJ5r+zeEy8DjeO111Ci6CkEJ3GDFsm43i0vS8A3PK6vay8DKQyLQlodWSwWhxm95FTMFTC7fvjsFP6h5eTff3Ybo9lbActbSSp0TMpbjON0ibbDmCQTnycRg03/GAHHDl+tH/3x595hFmxBjdV4ff/wir0aOaTKKZ3V+SyW9W9f7cgbQOig6acz3rUGuO1QnrlLXhflQxARwjkdo7/tq0VOM+9sFK5P06QiQG31xvd94xZcDmNFrGiLZTEK0Ss6SLtB8aLmxL8QtF6fDJBNN+Pea9m3dI6lmFo8Tol+0Yfb6oCbCtoeWTxNFt8O//qTLPqlgyqUzROQJ743WpDril5AG1XJKfVU2hJXF5XANEjS0zgZhzUx5tT4fjMf/V85ziP+wGEDlSAJ1peVz/h7C59SSM/zcrS1Z1+nTB6wx8n1LBdvxrd5Gp5E2tag2rJqA8Ggc2gObSm4FCshFwTDZybmGChZIdPdu3kTsBucGx926B93vZb//O8JNvsEDpn84XMH2bYndOI7EykkPRsSX/CtLU48Nk0I8ww0VUl4tHg04cIQPpU7DvYyUkIb7LZQG2KrP8/bHVds5wYeJ9x3UqTPZ4s/yDk08sOddnRazeA1lz3Un7xJWtFUuiLDMobvFcXH8J67jMVyFrCB24c9LWu2IU1D7wzJ4NwsTMLE5e+WajNXyNA8zamaVs1sR4BxX0HHFLsKLlchrvX1RTkGqTXQbuinel0yJzO67O2DeLECU12Z4htdMml4h7x1SPERKHke9GnUldfgCSaBTpIAigYk1Bjrhk9I7VycYWu8HlNphN3YBh+9GbrUHfWxTnptq0nzb7gFaBmWSgBgIkxg3uNBgDJOrH2pIUU2fH3SETnApoWVGn2d9s8dGpCBpIN1glhCF+wyJf2dYZDKPRhfOcbGhnyYEYK6guxM6KfSX7DCFgKooX+454QhVS0KwNB4qqR/EBlqJS3kk3pX3J5nGfjqrJ+HaJQd9+ZHvb7MAWwGRCQ/7jHKNZ44imVq6mIfBeLLgYI++SaRD0h3VozwDXW2OtkgFQ/a/dI+Xzk6vlLudSBMpRwr7JaVBS/IfI7JnfLtvj/4MMs1GNV4DmFpujJZWR3OYMC4UPSXhckAhhiM1WF4QA7F89MSclUtA4/pCnXIyhH9kD1ILi9+kv76UJkAiy8sx7TXJFmNsMiL+F8t9ff8UKI0+p3w7HVWaw3Xa0VvVjNf6vqEPGEFFdOu0AgDvSJw47t6PCrD9ehXlhQGudV1UWMWF9SSzN5dZJ1PtClCSfO3BhJWXqWJowD86fQ1xiy9lwYhf3wYONo37Fje/Fp4JcL+URevmyAiRnhQ5IVYBIPeUyYb5ky0hLw2rGYdmMFFTxU697EC5UOEGsJ0SjSUT9zTc0EehJtViKWkM+NAADkOkfQegSYSZom0PS7YdomOzz/tOWTdBx+3yFUk+cOv2CPcl+yQFkRmZajvtx5l/MuCt3R2aVzKkCmgNiyZ6HHwcEtoKqxKGLcD8uP6mzaU6Aui3ViOCrkXUzGQWgfykXWlgputg0lRyamAZonJyEV8ArHqaWTZ9EaaCJQ24P0+0js3PRRSpl/9CgR6lUv2BJavJzBj3TvPGhz6X8f57gW99lYg3uByk21DVesxqFYT/uHmCGCrgBoHJvO2khzRqenhVa7lN7FbdXJu7FU4C1/tUgfVh+n9MxehBqBA5qgVyPiMQhanOD+tBOk8iPeJ12ONuugY9pbkHo5RBcWpTkOPI6yRLvowFkhfrHTvD3/pZJ9GQFAeIs3zjSDd7SiNbgpWL/Y0Xzd1yOzf+ilgoVMEOe6NOHjDMwS+6wLg5Xl8p4TMS5rdl9sUVnlBKkKeIEBZtfprp4Pa9L4fujTf8CkAPz/XkgfhiEyZqDz5BzVPq070EEXMCvMQn2E7uX7pJTpf9HgDM/P5SQuxcyQY7lNZbHym5PDUPQkXQP+KrOCedU6JT9Jg+HNwTdM7PtCoy0UwxfjvjcXeqFkQavD0dNFPAoh0jH6WUtAy5XwbGSm+Tx9PcyejovDLsu16MvdrI83q1O/gZcahlfxP1fmV4vay/BMQMoiPytI76pFznXEa02as+8My1INUeYcf4Mv0+HLPEpJQuekJncbhF4jJqfQbtOsd66fvCHe4VHl5a2uXpMvTIORIei07emMFG0g7InexcNZRg3RUYXxGaxaq66HuX8aOVZSoTMqX7A5ESJ5pnEHKGDguXLf0wtONDW7njWSoy4+l9Fp2GhOcyp2RUZlQrlNK8DDi2RMvh4UYJco37R5ozuu+shZ6/0VKinSlOFWp2UHf2sxJOt99YxA23Qbp/nIAULuNRCjmoiJKqC4+THLLcQKkfu2gMLT68b2Y+tNgwQiXXTbQo4kam2jPHiV/L459fE01yP6NtbKJgPX1UelLNGgbQKHUjltthH63qPI0c8FfVGrNOwtmU3036GDUU4G9g56jBb/G51jnVoz2Be424K5RgwPyd8LstaF/zcZT+SgXjay+0H+gVthANn5ENUxlw5aCXPRgn9EfZ872oChK9+OJIlL2pXVATjIeCEmbipJSfIIlF2xKchWpFt0/8lcKWT09j9sXDz3bEKJwdNtUIGpUBfr3N4txRrq9y5orx1LOX4NDHbDkbFcgcK/0YEKGDrZEL2gUY7cJGqYdCyAXE84P+gZgISKP+U+2wL2MhvloqjkHZrmQRmENQx7flHYyySlbmfI8R/LJyM1IkjY1gnK3n5EoppTjY+IuVBziADK33jcKqjbsD41bNqfx/VI2tkms0UlDhx5s98ZBbjcloi9RMW97FWUt9y+5hVNek1ehVtHNGkp1QOfarAvCLaDJW3zmje8z94tUEYZEk1VJIGWzqEY+CdD44vehoIaVQBpsqo7XD2ml6tWRrpjL/2h5BHLPNQgzepWFY3APyDjK7sXFG/bbY+THasS0AdKaWl3vw5vEtwyGj0xfIxB6qeUazU+9QA1s9erMPjYyNYmCiLZLWlHlqfMvXFhl+PlO2TA8edqU+sx/o/OKYt3jhuooAZwGkbMlOmmhUxP88XLYQ6rYeJgACpzmQGjG4Eepg+rh92HyXokEVXz5JS7OaOlPh30FTFIoujf9kYGdEgTXYRb5TMT6j7NQDVvAV8Ng0xoSYWppdavk71r2MYRc2Z4nwN4cpRT/iA2ZCdYgVQMIMtt3Jj5W7pT0IQ9shlVaaDCR2+Vpxt7ZwUQjJ2jLGCb3d4WyU15MP593xvKoDDOaz9qvq++X4Px4IdszEe0A2Fl8bCqirIkfPsrZt17MdElruRHN3Seed3hDWRJweL+mXB3Ro4OHK9J6zLotdGXf4GyOYCa247VNGDJsFkJUkdC+uIJ5bDmxMR0kQVr00tFiKlv2PISei2qTwU2WWcqV7mXDThRByziBTJ5/nvyhwoYlb9h8JbJWkexuAEYNl6AMw0noY+pFqRiDGC43WBdp0gbuyXG3gNBWsyOiLUdVHRsF6fJEGNTpKdmkoRLESbAPUPv7saX22V0ZDmTEjhlCbVYof4f5cB8Ft3581ZDqnR9O7qmJuVg4PI2wpnfu0/5MmRv6MCS0S+tw3mxuvwVq+rVe9nJ+F7iiu5Ilmwn54S2Gfj2itH0c6dYGEbi1erSsrfEPJ4ukeK27BdUJRrtsMtEnWHYGAfc61difri4Ak2D1wfmsdi1kQMKh+jgCW9CVNY/KbXVCyy7rQFcOJ0G1rfEuMCYwXLZlzYmuDUQ1w30Q7RTDTacyPQVhWjJaYtChaGNzth7Ql0yuy4dyQMhnnbUQDwrYL7E8Gmvn1Dx52bPHKr4GLaBPOiwrgivfGo1HgkZzwQUS4CTXeDSdRIUiZXPoOdPN7sK6CsVF478U2rkSdPDSqo9EJal63vEI+3JS4rzmmWQKxCsmeCfGHCoNvFA8Msbr6wsqpNdLQbEFxOaZVCPBheCXuQE8M6sznat/yLVeCLXLZjuwOkhiuhfSfA+zWHyI6SdMTx5FazB7bLCe2Czm7yqqOc02gmpUB1A=="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"crt.pem\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJakNDQWdxZ0F3SUJBZ0lRZlExUjRjdmtZN0EwV3pLOExqWWlNekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweApPVEV5TURVeU16RTJNRGhhRncweU1ERXlNRFF5TXpFMk1EaGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBc0ZSd1RnZ1RoR0F6aDNEVlViSXZMTnRTMkpWczZvSHk0d3BqalVMKy9JQlZlTDREYThwTQpjeXlTREF5Y3F6aEVOS0JCcG4xNE1DUXlMeURRdU5KdEVLTEpRbXVKWURYak51eUMxRXRidmZONXdFai9ianRPClFVYWMwalZqUlpJTGlWMU5kYTZuZVgrZVJzWUVuYmJjVXlqeE1URHg1M1k2ZzZuYTZMNFJXN0d0ek4zdCtuaEoKaEo4bXNPWUM4WWgyM1B5N0N6Qy85YTVMMThnS05VekR4d0c0ZTQvTDJndndjVklwUnFUMnBpNFJMMVh2dkNxWgo0UnBkNktwYW5TRDAzaEhCdXRtaHpjbC96V0U1Q1h4VllyS3BrZTdmL2xuNVlmSFRROFhaWlpNY3lnaWRjQ1NuCmk3Q05MYnVSZXZBRXNxN0V1ZWhrYXFEVUpHK1Q2cFR6TlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUMKQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQgpBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUYvL212TFJYSDV6VHNlRUhra2RKS2s0YTlvODJJWkc0V2JpCkZnUzlqZ2VESldraTNpOXhJcmlEVWt0SzcwME16dzdISnEvUXA0bzE3WGtBUExsTjNNa0FuVERQNktKVFVpT1EKaU9vYk5EaDIyYWRoSlVQSytHdnc4YTJBR1NHZ2lObHR3aTRqalNjYlg1MnVZWm0xVzd6OG9zMElrMXpmRjZQRQpKdVVSemJjbFNoQzR1WHYzWDN3ZnhCaTB3VmVTWDBGcjU4U0l3NzZPdEFKNVJxdTZEUDlqalQ3V3JncnRqVXZyCnZQVEJTSCtaUzJIMFo5RWVwaE9GOVBwb2JrejhkVXpsUFMxeXdQR0FsOC9STDl0aHFoOEdKcVZTcVgyZmw4UWMKWjE2Smg1c0d5cW9qblRtcW55VVNhZDduWnFNNG9mQ3NRSjlmaVV6bXhGeWtwQ3JHajFRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"key.pem\":\"LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc0ZSd1RnZ1RoR0F6aDNEVlViSXZMTnRTMkpWczZvSHk0d3BqalVMKy9JQlZlTDRECmE4cE1jeXlTREF5Y3F6aEVOS0JCcG4xNE1DUXlMeURRdU5KdEVLTEpRbXVKWURYak51eUMxRXRidmZONXdFai8KYmp0T1FVYWMwalZqUlpJTGlWMU5kYTZuZVgrZVJzWUVuYmJjVXlqeE1URHg1M1k2ZzZuYTZMNFJXN0d0ek4zdAorbmhKaEo4bXNPWUM4WWgyM1B5N0N6Qy85YTVMMThnS05VekR4d0c0ZTQvTDJndndjVklwUnFUMnBpNFJMMVh2CnZDcVo0UnBkNktwYW5TRDAzaEhCdXRtaHpjbC96V0U1Q1h4VllyS3BrZTdmL2xuNVlmSFRROFhaWlpNY3lnaWQKY0NTbmk3Q05MYnVSZXZBRXNxN0V1ZWhrYXFEVUpHK1Q2cFR6TlFJREFRQUJBb0lCQUhtcDJVOU43VUdDS3l2QgpvNzVaeG9rWno0RFhJUzV4ZVVoRWE4b1ZOdUM4SDcxT3hnZUNydHN0SHB3bnU1VzhIZnQ5czY2UGxmVUpsSUxHCkRwM251dzhtY3QxY1c0NUJ3RU91VHRyeUlCdmhPZGw5eEppblhPaFhNMjhySFJMc29QOG5uSUdkZjdxcVhtZ1EKeXpDUzhsU0N4R0NmbDltUHp2SDNxYTY3TGpqb0s0VGRYeFlNekdNOXpKb1Vmb29xUVRBSlVqaXVGWko4Z0dhdAoxRWVrZ2d2aXF2Tmpjc1hyb1ZMY1NOWWxYOURRNFBFbDdQOVZ0a0Nyd3E2M2hVK1l3bXN4QzlYRXpJNlNYZVdrCmJPUElGZ1Bod0FOblQzRXU0dmZjc3U2R01YalBWZXBxeUxWL2JmbVI3UkxtVS9nOXBRYWUrU056MzZYaGRPeGgKcTRzZWtDVUNnWUVBMUZnYzBFMFhCQXFYZGFTU3NvUUQ5SlVwZ1poeUgwVWhMQ0F0RUNCNFBIblVyOFA0UWpIUgpWVWZYZlRYQVFpTHRzTzVVRlZlT3EwR2NzRW5ZS0VpdkdRVFBzUVZWRDR0UTJKOWxOOTIyQWJOTi9meXVaZy9XCk9hU0MxRmYvTTdUZlpjNHJNR0VRZXRoenlXcXArSmFkVk9tWXJURDhpeTBiUytCQlhiVFJrbE1DZ1lFQTFKVGEKMFpTeWV4VnFhNmhtL1UzbjV5dHJWbUN0ZGdvaFU3Y3ZaUXkyaVZsQXoxNFVDbnFSWmcvREQwaTl4RVJpVVN3Rwo3alRLR05UdkVxSUhxQTBROUI1ODZMZnFLQkZlOXdRSU5SaDVzTVpSUEVlL0R4cnFKb0FWWTZuSlpnNktMZG5HCktiRnNLb1ZCck5LL2xRbjVHeGJHM2xqbTJWeFFJcnN0cjRpZHcxY0NnWUJUckxrRitDckdvK25WS05uSjBLM0MKVm5qNW9YbnZDbzJzMXEwTE90QkdmSGVzSDF3WHNZdmN3Q2VSSm5veFZaUTJjV1BlMlJiV00wK3NSQjBTbXJtcwo4VEZxZjBCcWxLcHlBaldma3hWaWpDYUNuR3lZdVVyZ2dnd3Y0dEVrcmZTT0tIVHFab1ZZOHl5RlJTdmZVbktECkFGM3llV2c2NjdaaTZ1YTNKMGFpRXdLQmdCd1VvYWNIbmwvMTN6M2pXOTlmK0I4b05DQ1Aycm41OHBjTlhweFoKaG84MEZBU1FaOU5PaDRCVTJxNWRMSHdOa0hNcWZxdmVtMGVXY1JJa0J5RGl3UGVPUTIrMlE1OFJWRnNLMUU2MwpNZlB3N25BcEJncm53a0Jkc1BXZVN2VkpQR1Y4RzlvTURyNjdKWWEvdkFEaTlWM25yMU5WcVFEVFdkNk1uU2RQCnc0ODNBb0dCQU11bkJIWlFBWGgvUkIzbzlGRi9CNENZY2NZVElvZGgzNThKK3p3R1VxZ2F5Ym81VFdJWkdreDEKVDVLSmVvR1UxTHFkL1FpOE1TcVpYTEhOeWUxYkVPNzdnMlZSWWpGKzNnR1ExL3J4RHh0VTRqTW9nZytaeDcrNQpwZkgza2V3bjIrVFNIZEN2Qk1wb3c4Sk5CUlZxVkUwdWswMjJtM0NMR2RtVEkwY1ExUkIyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\"},\"kind\":\"Secret\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"sp-validator\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-sp-validator-tls\",\"namespace\":\"linkerd\"},\"type\":\"Opaque\"}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T23:18:24Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-sp-validator-tls",
                        "namespace": "linkerd",
                        "resourceVersion": "56542",
                        "selfLink": "/api/v1/namespaces/linkerd/secrets/linkerd-sp-validator-tls",
                        "uid": "c01c01b3-4cc6-4c67-b29d-44fd1349b74b"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null,
                    "type": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-destination",
                "custom": true,
                "id": "linkerd/linkerd-destination",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "destination",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-destination",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "destination",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-destination"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "destination",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-destination"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "destination",
                                            "-addr=:8086",
                                            "-controller-namespace=linkerd",
                                            "-enable-h2-upgrade=true",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9996
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "destination",
                                        "ports": [
                                            {
                                                "containerPort": 8086,
                                                "name": "grpc"
                                            },
                                            {
                                                "containerPort": 9996,
                                                "name": "admin-http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9996
                                            }
                                        },
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "localhost.:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 2
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "linkerd-destination",
                                "volumes": [
                                    {
                                        "configMap": {
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "destination",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-destination",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "linkerd.io/control-plane-component": "destination",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-destination"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                        "linkerd.io/identity-mode": "default",
                                        "linkerd.io/proxy-version": "stable-2.6.0"
                                    },
                                    "labels": {
                                        "linkerd.io/control-plane-component": "destination",
                                        "linkerd.io/control-plane-ns": "linkerd",
                                        "linkerd.io/proxy-deployment": "linkerd-destination"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "destination",
                                                "-addr=:8086",
                                                "-controller-namespace=linkerd",
                                                "-enable-h2-upgrade=true",
                                                "-log-level=info"
                                            ],
                                            "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/ping",
                                                    "port": 9996
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "destination",
                                            "ports": [
                                                {
                                                    "containerPort": 8086,
                                                    "name": "grpc"
                                                },
                                                {
                                                    "containerPort": 9996,
                                                    "name": "admin-http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 7,
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 9996
                                                }
                                            },
                                            "securityContext": {
                                                "runAsUser": 2103
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/config",
                                                    "name": "config"
                                                }
                                            ]
                                        },
                                        {
                                            "env": [
                                                {
                                                    "name": "LINKERD2_PROXY_LOG",
                                                    "value": "warn,linkerd2_proxy=info"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                    "value": "localhost.:8086"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4190"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4191"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                    "value": "127.0.0.1:4140"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4143"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "_pod_ns",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                    "value": "ns:$(_pod_ns)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                    "value": "/var/run/linkerd/identity/end-entity"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                    "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                    "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                    "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                                },
                                                {
                                                    "name": "_pod_sa",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.serviceAccountName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "_l5d_ns",
                                                    "value": "linkerd"
                                                },
                                                {
                                                    "name": "_l5d_trustdomain",
                                                    "value": "cluster.local"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                    "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                    "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                    "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                    "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                }
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/metrics",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "linkerd-proxy",
                                            "ports": [
                                                {
                                                    "containerPort": 4143,
                                                    "name": "linkerd-proxy"
                                                },
                                                {
                                                    "containerPort": 4191,
                                                    "name": "linkerd-admin"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 2
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsUser": 2102
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/identity/end-entity",
                                                    "name": "linkerd-identity-end-entity"
                                                }
                                            ]
                                        }
                                    ],
                                    "initContainers": [
                                        {
                                            "args": [
                                                "--incoming-proxy-port",
                                                "4143",
                                                "--outgoing-proxy-port",
                                                "4140",
                                                "--proxy-uid",
                                                "2102",
                                                "--inbound-ports-to-ignore",
                                                "4190,4191",
                                                "--outbound-ports-to-ignore",
                                                "443"
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "linkerd-init",
                                            "resources": {
                                                "limits": {
                                                    "cpu": "100m",
                                                    "memory": "50Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "10Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "add": [
                                                        "NET_ADMIN",
                                                        "NET_RAW"
                                                    ]
                                                },
                                                "privileged": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsNonRoot": false,
                                                "runAsUser": 0
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError"
                                        }
                                    ],
                                    "nodeSelector": {
                                        "beta.kubernetes.io/os": "linux"
                                    },
                                    "serviceAccountName": "linkerd-destination",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "name": "linkerd-config"
                                            },
                                            "name": "config"
                                        },
                                        {
                                            "emptyDir": {
                                                "medium": "Memory"
                                            },
                                            "name": "linkerd-identity-end-entity"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"destination\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-destination\",\"namespace\":\"linkerd\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"linkerd.io/control-plane-component\":\"destination\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-destination\"}},\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\",\"linkerd.io/identity-mode\":\"default\",\"linkerd.io/proxy-version\":\"stable-2.6.0\"},\"labels\":{\"linkerd.io/control-plane-component\":\"destination\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-destination\"}},\"spec\":{\"containers\":[{\"args\":[\"destination\",\"-addr=:8086\",\"-controller-namespace=linkerd\",\"-enable-h2-upgrade=true\",\"-log-level=info\"],\"image\":\"gcr.io/linkerd-io/controller:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ping\",\"port\":9996},\"initialDelaySeconds\":10},\"name\":\"destination\",\"ports\":[{\"containerPort\":8086,\"name\":\"grpc\"},{\"containerPort\":9996,\"name\":\"admin-http\"}],\"readinessProbe\":{\"failureThreshold\":7,\"httpGet\":{\"path\":\"/ready\",\"port\":9996}},\"securityContext\":{\"runAsUser\":2103},\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/config\",\"name\":\"config\"}]},{\"env\":[{\"name\":\"LINKERD2_PROXY_LOG\",\"value\":\"warn,linkerd2_proxy=info\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_ADDR\",\"value\":\"localhost.:8086\"},{\"name\":\"LINKERD2_PROXY_CONTROL_LISTEN_ADDR\",\"value\":\"0.0.0.0:4190\"},{\"name\":\"LINKERD2_PROXY_ADMIN_LISTEN_ADDR\",\"value\":\"0.0.0.0:4191\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR\",\"value\":\"127.0.0.1:4140\"},{\"name\":\"LINKERD2_PROXY_INBOUND_LISTEN_ADDR\",\"value\":\"0.0.0.0:4143\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_GET_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"_pod_ns\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LINKERD2_PROXY_DESTINATION_CONTEXT\",\"value\":\"ns:$(_pod_ns)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_DIR\",\"value\":\"/var/run/linkerd/identity/end-entity\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS\",\"value\":\"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\\n\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TOKEN_FILE\",\"value\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_ADDR\",\"value\":\"linkerd-identity.linkerd.svc.cluster.local:8080\"},{\"name\":\"_pod_sa\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"_l5d_ns\",\"value\":\"linkerd\"},{\"name\":\"_l5d_trustdomain\",\"value\":\"cluster.local\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_LOCAL_NAME\",\"value\":\"$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_NAME\",\"value\":\"linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_NAME\",\"value\":\"linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_TAP_SVC_NAME\",\"value\":\"linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"}],\"image\":\"gcr.io/linkerd-io/proxy:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/metrics\",\"port\":4191},\"initialDelaySeconds\":10},\"name\":\"linkerd-proxy\",\"ports\":[{\"containerPort\":4143,\"name\":\"linkerd-proxy\"},{\"containerPort\":4191,\"name\":\"linkerd-admin\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":4191},\"initialDelaySeconds\":2},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsUser\":2102},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/identity/end-entity\",\"name\":\"linkerd-identity-end-entity\"}]}],\"initContainers\":[{\"args\":[\"--incoming-proxy-port\",\"4143\",\"--outgoing-proxy-port\",\"4140\",\"--proxy-uid\",\"2102\",\"--inbound-ports-to-ignore\",\"4190,4191\",\"--outbound-ports-to-ignore\",\"443\"],\"image\":\"gcr.io/linkerd-io/proxy-init:v1.1.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"linkerd-init\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":false,\"runAsUser\":0},\"terminationMessagePolicy\":\"FallbackToLogsOnError\"}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"linkerd-destination\",\"volumes\":[{\"configMap\":{\"name\":\"linkerd-config\"},\"name\":\"config\"},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"linkerd-identity-end-entity\"}]}}}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:03:05Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "destination",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-destination",
                        "namespace": "linkerd",
                        "resourceVersion": "45021",
                        "selfLink": "/apis/apps/v1/namespaces/linkerd/deployments/linkerd-destination",
                        "uid": "e409d42c-acde-4ef3-9e55-8ab4d9f5abb5"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "destination",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-destination"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "destination",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-destination"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "destination",
                                            "-addr=:8086",
                                            "-controller-namespace=linkerd",
                                            "-enable-h2-upgrade=true",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9996,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "destination",
                                        "ports": [
                                            {
                                                "containerPort": 8086,
                                                "name": "grpc",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9996,
                                                "name": "admin-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9996,
                                                "scheme": "HTTP"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "localhost.:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "linkerd-destination",
                                "serviceAccountName": "linkerd-destination",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:03:25Z",
                                "lastUpdateTime": "2019-12-05T20:03:25Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T20:03:05Z",
                                "lastUpdateTime": "2019-12-05T20:03:25Z",
                                "message": "ReplicaSet \"linkerd-destination-779cc445dc\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-destination",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta1:Deployment::linkerd/linkerd-destination",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta2:Deployment::linkerd/linkerd-destination",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Deployment::linkerd/linkerd-destination"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::linkerd/linkerd-destination",
                "custom": true,
                "id": "linkerd/linkerd-destination",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-destination",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "grpc",
                                "port": 8086,
                                "targetPort": 8086
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "controller"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "controller",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-destination",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "grpc",
                                    "port": 8086,
                                    "targetPort": 8086
                                }
                            ],
                            "selector": {
                                "linkerd.io/control-plane-component": "controller"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"controller\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-destination\",\"namespace\":\"linkerd\"},\"spec\":{\"ports\":[{\"name\":\"grpc\",\"port\":8086,\"targetPort\":8086}],\"selector\":{\"linkerd.io/control-plane-component\":\"controller\"},\"type\":\"ClusterIP\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:54Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-destination",
                        "namespace": "linkerd",
                        "resourceVersion": "44667",
                        "selfLink": "/api/v1/namespaces/linkerd/services/linkerd-destination",
                        "uid": "51bc85b4-48b1-47ec-8434-7e37775b2509"
                    },
                    "spec": {
                        "clusterIP": "10.245.120.38",
                        "ports": [
                            {
                                "name": "grpc",
                                "port": 8086,
                                "protocol": "TCP",
                                "targetPort": 8086
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "controller"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::linkerd-linkerd-sp-validator",
                "custom": true,
                "id": "linkerd-linkerd-sp-validator",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-sp-validator"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-sp-validator"
                    },
                    "subjects": [
                        {
                            "apiGroup": "",
                            "kind": "ServiceAccount",
                            "name": "linkerd-sp-validator",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "sp-validator",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-sp-validator"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "linkerd-linkerd-sp-validator"
                        },
                        "subjects": [
                            {
                                "apiGroup": "",
                                "kind": "ServiceAccount",
                                "name": "linkerd-sp-validator",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"sp-validator\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-sp-validator\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"linkerd-linkerd-sp-validator\"},\"subjects\":[{\"apiGroup\":\"\",\"kind\":\"ServiceAccount\",\"name\":\"linkerd-sp-validator\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:10Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-sp-validator",
                        "resourceVersion": "44554",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/linkerd-linkerd-sp-validator",
                        "uid": "41cee3a8-c7e9-42b3-8fb9-147070b0937d"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-sp-validator"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-sp-validator",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::linkerd/linkerd-dst",
                "custom": true,
                "id": "linkerd/linkerd-dst",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "destination",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-dst",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "grpc",
                                "port": 8086,
                                "targetPort": 8086
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "destination"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "destination",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-dst",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "grpc",
                                    "port": 8086,
                                    "targetPort": 8086
                                }
                            ],
                            "selector": {
                                "linkerd.io/control-plane-component": "destination"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"destination\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-dst\",\"namespace\":\"linkerd\"},\"spec\":{\"ports\":[{\"name\":\"grpc\",\"port\":8086,\"targetPort\":8086}],\"selector\":{\"linkerd.io/control-plane-component\":\"destination\"},\"type\":\"ClusterIP\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:51Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "destination",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-dst",
                        "namespace": "linkerd",
                        "resourceVersion": "44659",
                        "selfLink": "/api/v1/namespaces/linkerd/services/linkerd-dst",
                        "uid": "e01963a6-aef9-407e-a2d7-c4c98a771bc5"
                    },
                    "spec": {
                        "clusterIP": "10.245.0.218",
                        "ports": [
                            {
                                "name": "grpc",
                                "port": 8086,
                                "protocol": "TCP",
                                "targetPort": 8086
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "destination"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-identity",
                "custom": true,
                "id": "linkerd/linkerd-identity",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-identity",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "identity",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-identity"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "identity",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-identity"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "identity",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9990
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "identity",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "grpc"
                                            },
                                            {
                                                "containerPort": 9990,
                                                "name": "admin-http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9990
                                            }
                                        },
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            },
                                            {
                                                "mountPath": "/var/run/linkerd/identity/issuer",
                                                "name": "identity-issuer"
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "localhost.:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 2
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "linkerd-identity",
                                "volumes": [
                                    {
                                        "configMap": {
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "name": "identity-issuer",
                                        "secret": {
                                            "secretName": "linkerd-identity-issuer"
                                        }
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "identity",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-identity",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "linkerd.io/control-plane-component": "identity",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-identity"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                        "linkerd.io/identity-mode": "default",
                                        "linkerd.io/proxy-version": "stable-2.6.0"
                                    },
                                    "labels": {
                                        "linkerd.io/control-plane-component": "identity",
                                        "linkerd.io/control-plane-ns": "linkerd",
                                        "linkerd.io/proxy-deployment": "linkerd-identity"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "identity",
                                                "-log-level=info"
                                            ],
                                            "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/ping",
                                                    "port": 9990
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "identity",
                                            "ports": [
                                                {
                                                    "containerPort": 8080,
                                                    "name": "grpc"
                                                },
                                                {
                                                    "containerPort": 9990,
                                                    "name": "admin-http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 7,
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 9990
                                                }
                                            },
                                            "securityContext": {
                                                "runAsUser": 2103
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/config",
                                                    "name": "config"
                                                },
                                                {
                                                    "mountPath": "/var/run/linkerd/identity/issuer",
                                                    "name": "identity-issuer"
                                                }
                                            ]
                                        },
                                        {
                                            "env": [
                                                {
                                                    "name": "LINKERD2_PROXY_LOG",
                                                    "value": "warn,linkerd2_proxy=info"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                    "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4190"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4191"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                    "value": "127.0.0.1:4140"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4143"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "_pod_ns",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                    "value": "ns:$(_pod_ns)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                    "value": "/var/run/linkerd/identity/end-entity"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                    "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                    "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                    "value": "localhost.:8080"
                                                },
                                                {
                                                    "name": "_pod_sa",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.serviceAccountName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "_l5d_ns",
                                                    "value": "linkerd"
                                                },
                                                {
                                                    "name": "_l5d_trustdomain",
                                                    "value": "cluster.local"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                    "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                    "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                    "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                    "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                }
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/metrics",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "linkerd-proxy",
                                            "ports": [
                                                {
                                                    "containerPort": 4143,
                                                    "name": "linkerd-proxy"
                                                },
                                                {
                                                    "containerPort": 4191,
                                                    "name": "linkerd-admin"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 2
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsUser": 2102
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/identity/end-entity",
                                                    "name": "linkerd-identity-end-entity"
                                                }
                                            ]
                                        }
                                    ],
                                    "initContainers": [
                                        {
                                            "args": [
                                                "--incoming-proxy-port",
                                                "4143",
                                                "--outgoing-proxy-port",
                                                "4140",
                                                "--proxy-uid",
                                                "2102",
                                                "--inbound-ports-to-ignore",
                                                "4190,4191",
                                                "--outbound-ports-to-ignore",
                                                "443"
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "linkerd-init",
                                            "resources": {
                                                "limits": {
                                                    "cpu": "100m",
                                                    "memory": "50Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "10Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "add": [
                                                        "NET_ADMIN",
                                                        "NET_RAW"
                                                    ]
                                                },
                                                "privileged": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsNonRoot": false,
                                                "runAsUser": 0
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError"
                                        }
                                    ],
                                    "nodeSelector": {
                                        "beta.kubernetes.io/os": "linux"
                                    },
                                    "serviceAccountName": "linkerd-identity",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "name": "linkerd-config"
                                            },
                                            "name": "config"
                                        },
                                        {
                                            "name": "identity-issuer",
                                            "secret": {
                                                "secretName": "linkerd-identity-issuer"
                                            }
                                        },
                                        {
                                            "emptyDir": {
                                                "medium": "Memory"
                                            },
                                            "name": "linkerd-identity-end-entity"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"identity\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-identity\",\"namespace\":\"linkerd\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"linkerd.io/control-plane-component\":\"identity\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-identity\"}},\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\",\"linkerd.io/identity-mode\":\"default\",\"linkerd.io/proxy-version\":\"stable-2.6.0\"},\"labels\":{\"linkerd.io/control-plane-component\":\"identity\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-identity\"}},\"spec\":{\"containers\":[{\"args\":[\"identity\",\"-log-level=info\"],\"image\":\"gcr.io/linkerd-io/controller:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ping\",\"port\":9990},\"initialDelaySeconds\":10},\"name\":\"identity\",\"ports\":[{\"containerPort\":8080,\"name\":\"grpc\"},{\"containerPort\":9990,\"name\":\"admin-http\"}],\"readinessProbe\":{\"failureThreshold\":7,\"httpGet\":{\"path\":\"/ready\",\"port\":9990}},\"securityContext\":{\"runAsUser\":2103},\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/config\",\"name\":\"config\"},{\"mountPath\":\"/var/run/linkerd/identity/issuer\",\"name\":\"identity-issuer\"}]},{\"env\":[{\"name\":\"LINKERD2_PROXY_LOG\",\"value\":\"warn,linkerd2_proxy=info\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_ADDR\",\"value\":\"linkerd-dst.linkerd.svc.cluster.local:8086\"},{\"name\":\"LINKERD2_PROXY_CONTROL_LISTEN_ADDR\",\"value\":\"0.0.0.0:4190\"},{\"name\":\"LINKERD2_PROXY_ADMIN_LISTEN_ADDR\",\"value\":\"0.0.0.0:4191\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR\",\"value\":\"127.0.0.1:4140\"},{\"name\":\"LINKERD2_PROXY_INBOUND_LISTEN_ADDR\",\"value\":\"0.0.0.0:4143\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_GET_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"_pod_ns\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LINKERD2_PROXY_DESTINATION_CONTEXT\",\"value\":\"ns:$(_pod_ns)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_DIR\",\"value\":\"/var/run/linkerd/identity/end-entity\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS\",\"value\":\"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\\n\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TOKEN_FILE\",\"value\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_ADDR\",\"value\":\"localhost.:8080\"},{\"name\":\"_pod_sa\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"_l5d_ns\",\"value\":\"linkerd\"},{\"name\":\"_l5d_trustdomain\",\"value\":\"cluster.local\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_LOCAL_NAME\",\"value\":\"$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_NAME\",\"value\":\"linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_NAME\",\"value\":\"linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_TAP_SVC_NAME\",\"value\":\"linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"}],\"image\":\"gcr.io/linkerd-io/proxy:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/metrics\",\"port\":4191},\"initialDelaySeconds\":10},\"name\":\"linkerd-proxy\",\"ports\":[{\"containerPort\":4143,\"name\":\"linkerd-proxy\"},{\"containerPort\":4191,\"name\":\"linkerd-admin\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":4191},\"initialDelaySeconds\":2},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsUser\":2102},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/identity/end-entity\",\"name\":\"linkerd-identity-end-entity\"}]}],\"initContainers\":[{\"args\":[\"--incoming-proxy-port\",\"4143\",\"--outgoing-proxy-port\",\"4140\",\"--proxy-uid\",\"2102\",\"--inbound-ports-to-ignore\",\"4190,4191\",\"--outbound-ports-to-ignore\",\"443\"],\"image\":\"gcr.io/linkerd-io/proxy-init:v1.1.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"linkerd-init\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":false,\"runAsUser\":0},\"terminationMessagePolicy\":\"FallbackToLogsOnError\"}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"linkerd-identity\",\"volumes\":[{\"configMap\":{\"name\":\"linkerd-config\"},\"name\":\"config\"},{\"name\":\"identity-issuer\",\"secret\":{\"secretName\":\"linkerd-identity-issuer\"}},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"linkerd-identity-end-entity\"}]}}}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:03:00Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "identity",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-identity",
                        "namespace": "linkerd",
                        "resourceVersion": "44940",
                        "selfLink": "/apis/apps/v1/namespaces/linkerd/deployments/linkerd-identity",
                        "uid": "0a10b993-02cc-475e-97e1-45eb908faf71"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "identity",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-identity"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "identity",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-identity"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "identity",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9990,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "identity",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "grpc",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9990,
                                                "name": "admin-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9990,
                                                "scheme": "HTTP"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            },
                                            {
                                                "mountPath": "/var/run/linkerd/identity/issuer",
                                                "name": "identity-issuer"
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "localhost.:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "linkerd-identity",
                                "serviceAccountName": "linkerd-identity",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "name": "identity-issuer",
                                        "secret": {
                                            "defaultMode": 420,
                                            "secretName": "linkerd-identity-issuer"
                                        }
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:03:17Z",
                                "lastUpdateTime": "2019-12-05T20:03:17Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T20:03:00Z",
                                "lastUpdateTime": "2019-12-05T20:03:17Z",
                                "message": "ReplicaSet \"linkerd-identity-75bcf8686\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-identity",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta1:Deployment::linkerd/linkerd-identity",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta2:Deployment::linkerd/linkerd-identity",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Deployment::linkerd/linkerd-identity"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-proxy-injector",
                "custom": true,
                "id": "linkerd/linkerd-proxy-injector",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-proxy-injector",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "proxy-injector"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "proxy-injector",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-proxy-injector"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "proxy-injector",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9995
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "proxy-injector",
                                        "ports": [
                                            {
                                                "containerPort": 8443,
                                                "name": "proxy-injector"
                                            },
                                            {
                                                "containerPort": 9995,
                                                "name": "admin-http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9995
                                            }
                                        },
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            },
                                            {
                                                "mountPath": "/var/run/linkerd/tls",
                                                "name": "tls",
                                                "readOnly": true
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 2
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "linkerd-proxy-injector",
                                "volumes": [
                                    {
                                        "configMap": {
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "name": "tls",
                                        "secret": {
                                            "secretName": "linkerd-proxy-injector-tls"
                                        }
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "proxy-injector",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-proxy-injector",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "linkerd.io/control-plane-component": "proxy-injector"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                        "linkerd.io/identity-mode": "default",
                                        "linkerd.io/proxy-version": "stable-2.6.0"
                                    },
                                    "labels": {
                                        "linkerd.io/control-plane-component": "proxy-injector",
                                        "linkerd.io/control-plane-ns": "linkerd",
                                        "linkerd.io/proxy-deployment": "linkerd-proxy-injector"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "proxy-injector",
                                                "-log-level=info"
                                            ],
                                            "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/ping",
                                                    "port": 9995
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "proxy-injector",
                                            "ports": [
                                                {
                                                    "containerPort": 8443,
                                                    "name": "proxy-injector"
                                                },
                                                {
                                                    "containerPort": 9995,
                                                    "name": "admin-http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 7,
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 9995
                                                }
                                            },
                                            "securityContext": {
                                                "runAsUser": 2103
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/config",
                                                    "name": "config"
                                                },
                                                {
                                                    "mountPath": "/var/run/linkerd/tls",
                                                    "name": "tls",
                                                    "readOnly": true
                                                }
                                            ]
                                        },
                                        {
                                            "env": [
                                                {
                                                    "name": "LINKERD2_PROXY_LOG",
                                                    "value": "warn,linkerd2_proxy=info"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                    "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4190"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4191"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                    "value": "127.0.0.1:4140"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4143"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "_pod_ns",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                    "value": "ns:$(_pod_ns)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                    "value": "/var/run/linkerd/identity/end-entity"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                    "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                    "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                    "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                                },
                                                {
                                                    "name": "_pod_sa",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.serviceAccountName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "_l5d_ns",
                                                    "value": "linkerd"
                                                },
                                                {
                                                    "name": "_l5d_trustdomain",
                                                    "value": "cluster.local"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                    "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                    "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                    "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                    "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                }
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/metrics",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "linkerd-proxy",
                                            "ports": [
                                                {
                                                    "containerPort": 4143,
                                                    "name": "linkerd-proxy"
                                                },
                                                {
                                                    "containerPort": 4191,
                                                    "name": "linkerd-admin"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 2
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsUser": 2102
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/identity/end-entity",
                                                    "name": "linkerd-identity-end-entity"
                                                }
                                            ]
                                        }
                                    ],
                                    "initContainers": [
                                        {
                                            "args": [
                                                "--incoming-proxy-port",
                                                "4143",
                                                "--outgoing-proxy-port",
                                                "4140",
                                                "--proxy-uid",
                                                "2102",
                                                "--inbound-ports-to-ignore",
                                                "4190,4191",
                                                "--outbound-ports-to-ignore",
                                                "443"
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "linkerd-init",
                                            "resources": {
                                                "limits": {
                                                    "cpu": "100m",
                                                    "memory": "50Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "10Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "add": [
                                                        "NET_ADMIN",
                                                        "NET_RAW"
                                                    ]
                                                },
                                                "privileged": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsNonRoot": false,
                                                "runAsUser": 0
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError"
                                        }
                                    ],
                                    "nodeSelector": {
                                        "beta.kubernetes.io/os": "linux"
                                    },
                                    "serviceAccountName": "linkerd-proxy-injector",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "name": "linkerd-config"
                                            },
                                            "name": "config"
                                        },
                                        {
                                            "name": "tls",
                                            "secret": {
                                                "secretName": "linkerd-proxy-injector-tls"
                                            }
                                        },
                                        {
                                            "emptyDir": {
                                                "medium": "Memory"
                                            },
                                            "name": "linkerd-identity-end-entity"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"proxy-injector\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-proxy-injector\",\"namespace\":\"linkerd\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"linkerd.io/control-plane-component\":\"proxy-injector\"}},\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\",\"linkerd.io/identity-mode\":\"default\",\"linkerd.io/proxy-version\":\"stable-2.6.0\"},\"labels\":{\"linkerd.io/control-plane-component\":\"proxy-injector\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-proxy-injector\"}},\"spec\":{\"containers\":[{\"args\":[\"proxy-injector\",\"-log-level=info\"],\"image\":\"gcr.io/linkerd-io/controller:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ping\",\"port\":9995},\"initialDelaySeconds\":10},\"name\":\"proxy-injector\",\"ports\":[{\"containerPort\":8443,\"name\":\"proxy-injector\"},{\"containerPort\":9995,\"name\":\"admin-http\"}],\"readinessProbe\":{\"failureThreshold\":7,\"httpGet\":{\"path\":\"/ready\",\"port\":9995}},\"securityContext\":{\"runAsUser\":2103},\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/config\",\"name\":\"config\"},{\"mountPath\":\"/var/run/linkerd/tls\",\"name\":\"tls\",\"readOnly\":true}]},{\"env\":[{\"name\":\"LINKERD2_PROXY_LOG\",\"value\":\"warn,linkerd2_proxy=info\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_ADDR\",\"value\":\"linkerd-dst.linkerd.svc.cluster.local:8086\"},{\"name\":\"LINKERD2_PROXY_CONTROL_LISTEN_ADDR\",\"value\":\"0.0.0.0:4190\"},{\"name\":\"LINKERD2_PROXY_ADMIN_LISTEN_ADDR\",\"value\":\"0.0.0.0:4191\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR\",\"value\":\"127.0.0.1:4140\"},{\"name\":\"LINKERD2_PROXY_INBOUND_LISTEN_ADDR\",\"value\":\"0.0.0.0:4143\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_GET_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"_pod_ns\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LINKERD2_PROXY_DESTINATION_CONTEXT\",\"value\":\"ns:$(_pod_ns)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_DIR\",\"value\":\"/var/run/linkerd/identity/end-entity\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS\",\"value\":\"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\\n\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TOKEN_FILE\",\"value\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_ADDR\",\"value\":\"linkerd-identity.linkerd.svc.cluster.local:8080\"},{\"name\":\"_pod_sa\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"_l5d_ns\",\"value\":\"linkerd\"},{\"name\":\"_l5d_trustdomain\",\"value\":\"cluster.local\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_LOCAL_NAME\",\"value\":\"$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_NAME\",\"value\":\"linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_NAME\",\"value\":\"linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_TAP_SVC_NAME\",\"value\":\"linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"}],\"image\":\"gcr.io/linkerd-io/proxy:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/metrics\",\"port\":4191},\"initialDelaySeconds\":10},\"name\":\"linkerd-proxy\",\"ports\":[{\"containerPort\":4143,\"name\":\"linkerd-proxy\"},{\"containerPort\":4191,\"name\":\"linkerd-admin\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":4191},\"initialDelaySeconds\":2},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsUser\":2102},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/identity/end-entity\",\"name\":\"linkerd-identity-end-entity\"}]}],\"initContainers\":[{\"args\":[\"--incoming-proxy-port\",\"4143\",\"--outgoing-proxy-port\",\"4140\",\"--proxy-uid\",\"2102\",\"--inbound-ports-to-ignore\",\"4190,4191\",\"--outbound-ports-to-ignore\",\"443\"],\"image\":\"gcr.io/linkerd-io/proxy-init:v1.1.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"linkerd-init\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":false,\"runAsUser\":0},\"terminationMessagePolicy\":\"FallbackToLogsOnError\"}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"linkerd-proxy-injector\",\"volumes\":[{\"configMap\":{\"name\":\"linkerd-config\"},\"name\":\"config\"},{\"name\":\"tls\",\"secret\":{\"secretName\":\"linkerd-proxy-injector-tls\"}},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"linkerd-identity-end-entity\"}]}}}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:03:07Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-proxy-injector",
                        "namespace": "linkerd",
                        "resourceVersion": "45047",
                        "selfLink": "/apis/apps/v1/namespaces/linkerd/deployments/linkerd-proxy-injector",
                        "uid": "5ced21a4-b840-4c3d-8dd6-4a3db236eb46"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "proxy-injector"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "proxy-injector",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-proxy-injector"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "proxy-injector",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9995,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "proxy-injector",
                                        "ports": [
                                            {
                                                "containerPort": 8443,
                                                "name": "proxy-injector",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9995,
                                                "name": "admin-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9995,
                                                "scheme": "HTTP"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            },
                                            {
                                                "mountPath": "/var/run/linkerd/tls",
                                                "name": "tls",
                                                "readOnly": true
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "linkerd-proxy-injector",
                                "serviceAccountName": "linkerd-proxy-injector",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "name": "tls",
                                        "secret": {
                                            "defaultMode": 420,
                                            "secretName": "linkerd-proxy-injector-tls"
                                        }
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:03:33Z",
                                "lastUpdateTime": "2019-12-05T20:03:33Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T20:03:07Z",
                                "lastUpdateTime": "2019-12-05T20:03:33Z",
                                "message": "ReplicaSet \"linkerd-proxy-injector-69ff967777\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-proxy-injector",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta1:Deployment::linkerd/linkerd-proxy-injector",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta2:Deployment::linkerd/linkerd-proxy-injector",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Deployment::linkerd/linkerd-proxy-injector"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-prometheus",
                "custom": true,
                "id": "linkerd/linkerd-prometheus",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-prometheus",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "prometheus",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-prometheus"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "prometheus",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-prometheus"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--storage.tsdb.path=/data",
                                            "--storage.tsdb.retention.time=6h",
                                            "--config.file=/etc/prometheus/prometheus.yml",
                                            "--log.level=info"
                                        ],
                                        "image": "prom/prometheus:v2.11.1",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/-/healthy",
                                                "port": 9090
                                            },
                                            "initialDelaySeconds": 30,
                                            "timeoutSeconds": 30
                                        },
                                        "name": "prometheus",
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "name": "admin-http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/-/ready",
                                                "port": 9090
                                            },
                                            "initialDelaySeconds": 30,
                                            "timeoutSeconds": 30
                                        },
                                        "securityContext": {
                                            "runAsUser": 65534
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/data",
                                                "name": "data"
                                            },
                                            {
                                                "mountPath": "/etc/prometheus",
                                                "name": "prometheus-config",
                                                "readOnly": true
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_ROUTER_CAPACITY",
                                                "value": "10000"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 2
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "linkerd-prometheus",
                                "volumes": [
                                    {
                                        "emptyDir": {},
                                        "name": "data"
                                    },
                                    {
                                        "configMap": {
                                            "name": "linkerd-prometheus-config"
                                        },
                                        "name": "prometheus-config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "prometheus",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-prometheus",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "linkerd.io/control-plane-component": "prometheus",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-prometheus"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                        "linkerd.io/identity-mode": "default",
                                        "linkerd.io/proxy-version": "stable-2.6.0"
                                    },
                                    "labels": {
                                        "linkerd.io/control-plane-component": "prometheus",
                                        "linkerd.io/control-plane-ns": "linkerd",
                                        "linkerd.io/proxy-deployment": "linkerd-prometheus"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "--storage.tsdb.path=/data",
                                                "--storage.tsdb.retention.time=6h",
                                                "--config.file=/etc/prometheus/prometheus.yml",
                                                "--log.level=info"
                                            ],
                                            "image": "prom/prometheus:v2.11.1",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/-/healthy",
                                                    "port": 9090
                                                },
                                                "initialDelaySeconds": 30,
                                                "timeoutSeconds": 30
                                            },
                                            "name": "prometheus",
                                            "ports": [
                                                {
                                                    "containerPort": 9090,
                                                    "name": "admin-http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/-/ready",
                                                    "port": 9090
                                                },
                                                "initialDelaySeconds": 30,
                                                "timeoutSeconds": 30
                                            },
                                            "securityContext": {
                                                "runAsUser": 65534
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/data",
                                                    "name": "data"
                                                },
                                                {
                                                    "mountPath": "/etc/prometheus",
                                                    "name": "prometheus-config",
                                                    "readOnly": true
                                                }
                                            ]
                                        },
                                        {
                                            "env": [
                                                {
                                                    "name": "LINKERD2_PROXY_LOG",
                                                    "value": "warn,linkerd2_proxy=info"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                    "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4190"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4191"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                    "value": "127.0.0.1:4140"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4143"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "_pod_ns",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                    "value": "ns:$(_pod_ns)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_ROUTER_CAPACITY",
                                                    "value": "10000"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                    "value": "/var/run/linkerd/identity/end-entity"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                    "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                    "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                    "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                                },
                                                {
                                                    "name": "_pod_sa",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.serviceAccountName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "_l5d_ns",
                                                    "value": "linkerd"
                                                },
                                                {
                                                    "name": "_l5d_trustdomain",
                                                    "value": "cluster.local"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                    "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                    "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                    "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                    "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                }
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/metrics",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "linkerd-proxy",
                                            "ports": [
                                                {
                                                    "containerPort": 4143,
                                                    "name": "linkerd-proxy"
                                                },
                                                {
                                                    "containerPort": 4191,
                                                    "name": "linkerd-admin"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 2
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsUser": 2102
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/identity/end-entity",
                                                    "name": "linkerd-identity-end-entity"
                                                }
                                            ]
                                        }
                                    ],
                                    "initContainers": [
                                        {
                                            "args": [
                                                "--incoming-proxy-port",
                                                "4143",
                                                "--outgoing-proxy-port",
                                                "4140",
                                                "--proxy-uid",
                                                "2102",
                                                "--inbound-ports-to-ignore",
                                                "4190,4191",
                                                "--outbound-ports-to-ignore",
                                                "443"
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "linkerd-init",
                                            "resources": {
                                                "limits": {
                                                    "cpu": "100m",
                                                    "memory": "50Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "10Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "add": [
                                                        "NET_ADMIN",
                                                        "NET_RAW"
                                                    ]
                                                },
                                                "privileged": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsNonRoot": false,
                                                "runAsUser": 0
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError"
                                        }
                                    ],
                                    "nodeSelector": {
                                        "beta.kubernetes.io/os": "linux"
                                    },
                                    "serviceAccountName": "linkerd-prometheus",
                                    "volumes": [
                                        {
                                            "emptyDir": {},
                                            "name": "data"
                                        },
                                        {
                                            "configMap": {
                                                "name": "linkerd-prometheus-config"
                                            },
                                            "name": "prometheus-config"
                                        },
                                        {
                                            "emptyDir": {
                                                "medium": "Memory"
                                            },
                                            "name": "linkerd-identity-end-entity"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"prometheus\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-prometheus\",\"namespace\":\"linkerd\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"linkerd.io/control-plane-component\":\"prometheus\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-prometheus\"}},\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\",\"linkerd.io/identity-mode\":\"default\",\"linkerd.io/proxy-version\":\"stable-2.6.0\"},\"labels\":{\"linkerd.io/control-plane-component\":\"prometheus\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-prometheus\"}},\"spec\":{\"containers\":[{\"args\":[\"--storage.tsdb.path=/data\",\"--storage.tsdb.retention.time=6h\",\"--config.file=/etc/prometheus/prometheus.yml\",\"--log.level=info\"],\"image\":\"prom/prometheus:v2.11.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/-/healthy\",\"port\":9090},\"initialDelaySeconds\":30,\"timeoutSeconds\":30},\"name\":\"prometheus\",\"ports\":[{\"containerPort\":9090,\"name\":\"admin-http\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/-/ready\",\"port\":9090},\"initialDelaySeconds\":30,\"timeoutSeconds\":30},\"securityContext\":{\"runAsUser\":65534},\"volumeMounts\":[{\"mountPath\":\"/data\",\"name\":\"data\"},{\"mountPath\":\"/etc/prometheus\",\"name\":\"prometheus-config\",\"readOnly\":true}]},{\"env\":[{\"name\":\"LINKERD2_PROXY_LOG\",\"value\":\"warn,linkerd2_proxy=info\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_ADDR\",\"value\":\"linkerd-dst.linkerd.svc.cluster.local:8086\"},{\"name\":\"LINKERD2_PROXY_CONTROL_LISTEN_ADDR\",\"value\":\"0.0.0.0:4190\"},{\"name\":\"LINKERD2_PROXY_ADMIN_LISTEN_ADDR\",\"value\":\"0.0.0.0:4191\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR\",\"value\":\"127.0.0.1:4140\"},{\"name\":\"LINKERD2_PROXY_INBOUND_LISTEN_ADDR\",\"value\":\"0.0.0.0:4143\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_GET_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"_pod_ns\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LINKERD2_PROXY_DESTINATION_CONTEXT\",\"value\":\"ns:$(_pod_ns)\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_ROUTER_CAPACITY\",\"value\":\"10000\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_DIR\",\"value\":\"/var/run/linkerd/identity/end-entity\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS\",\"value\":\"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\\n\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TOKEN_FILE\",\"value\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_ADDR\",\"value\":\"linkerd-identity.linkerd.svc.cluster.local:8080\"},{\"name\":\"_pod_sa\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"_l5d_ns\",\"value\":\"linkerd\"},{\"name\":\"_l5d_trustdomain\",\"value\":\"cluster.local\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_LOCAL_NAME\",\"value\":\"$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_NAME\",\"value\":\"linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_NAME\",\"value\":\"linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_TAP_SVC_NAME\",\"value\":\"linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"}],\"image\":\"gcr.io/linkerd-io/proxy:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/metrics\",\"port\":4191},\"initialDelaySeconds\":10},\"name\":\"linkerd-proxy\",\"ports\":[{\"containerPort\":4143,\"name\":\"linkerd-proxy\"},{\"containerPort\":4191,\"name\":\"linkerd-admin\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":4191},\"initialDelaySeconds\":2},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsUser\":2102},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/identity/end-entity\",\"name\":\"linkerd-identity-end-entity\"}]}],\"initContainers\":[{\"args\":[\"--incoming-proxy-port\",\"4143\",\"--outgoing-proxy-port\",\"4140\",\"--proxy-uid\",\"2102\",\"--inbound-ports-to-ignore\",\"4190,4191\",\"--outbound-ports-to-ignore\",\"443\"],\"image\":\"gcr.io/linkerd-io/proxy-init:v1.1.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"linkerd-init\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":false,\"runAsUser\":0},\"terminationMessagePolicy\":\"FallbackToLogsOnError\"}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"linkerd-prometheus\",\"volumes\":[{\"emptyDir\":{},\"name\":\"data\"},{\"configMap\":{\"name\":\"linkerd-prometheus-config\"},\"name\":\"prometheus-config\"},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"linkerd-identity-end-entity\"}]}}}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:03:08Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "prometheus",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-prometheus",
                        "namespace": "linkerd",
                        "resourceVersion": "45089",
                        "selfLink": "/apis/apps/v1/namespaces/linkerd/deployments/linkerd-prometheus",
                        "uid": "e862ccc3-2b88-4319-9f3e-a404b5534fb7"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "prometheus",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-prometheus"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "prometheus",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-prometheus"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--storage.tsdb.path=/data",
                                            "--storage.tsdb.retention.time=6h",
                                            "--config.file=/etc/prometheus/prometheus.yml",
                                            "--log.level=info"
                                        ],
                                        "image": "prom/prometheus:v2.11.1",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/-/healthy",
                                                "port": 9090,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 30
                                        },
                                        "name": "prometheus",
                                        "ports": [
                                            {
                                                "containerPort": 9090,
                                                "name": "admin-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/-/ready",
                                                "port": 9090,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 30
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "runAsUser": 65534
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/data",
                                                "name": "data"
                                            },
                                            {
                                                "mountPath": "/etc/prometheus",
                                                "name": "prometheus-config",
                                                "readOnly": true
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_ROUTER_CAPACITY",
                                                "value": "10000"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "linkerd-prometheus",
                                "serviceAccountName": "linkerd-prometheus",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "emptyDir": {},
                                        "name": "data"
                                    },
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "linkerd-prometheus-config"
                                        },
                                        "name": "prometheus-config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:03:58Z",
                                "lastUpdateTime": "2019-12-05T20:03:58Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T20:03:08Z",
                                "lastUpdateTime": "2019-12-05T20:03:58Z",
                                "message": "ReplicaSet \"linkerd-prometheus-58476c5589\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-prometheus",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta1:Deployment::linkerd/linkerd-prometheus",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta2:Deployment::linkerd/linkerd-prometheus",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Deployment::linkerd/linkerd-prometheus"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:service$kubernetes:core/v1:Service::metrics-server",
                "custom": true,
                "id": "kube-system/metrics-server-peby28wf",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true"
                        },
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server-peby28wf",
                        "namespace": "kube-system"
                    },
                    "spec": {
                        "ports": [
                            {
                                "port": 443,
                                "protocol": "TCP",
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "app": "metrics-server"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "labels": {
                                "app": "metrics-server",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "metrics-server-peby28wf",
                            "namespace": "kube-system"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 443,
                                    "protocol": "TCP",
                                    "targetPort": "https"
                                }
                            ],
                            "selector": {
                                "app": "metrics-server"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\"},\"labels\":{\"app\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"metrics-server-peby28wf\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"app\":\"metrics-server\"},\"type\":\"ClusterIP\"}}\n",
                            "pulumi.com/autonamed": "true"
                        },
                        "creationTimestamp": "2019-12-05T07:30:58Z",
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server-peby28wf",
                        "namespace": "kube-system",
                        "resourceVersion": "1210",
                        "selfLink": "/api/v1/namespaces/kube-system/services/metrics-server-peby28wf",
                        "uid": "728087ce-7be1-4492-9377-fb29b31eb1b3"
                    },
                    "spec": {
                        "clusterIP": "10.245.80.198",
                        "ports": [
                            {
                                "port": 443,
                                "protocol": "TCP",
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "app": "metrics-server"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:service::metrics-server",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::linkerd/linkerd-proxy-injector",
                "custom": true,
                "id": "linkerd/linkerd-proxy-injector",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-proxy-injector",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "proxy-injector",
                                "port": 443,
                                "targetPort": "proxy-injector"
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "proxy-injector"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "proxy-injector",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-proxy-injector",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "proxy-injector",
                                    "port": 443,
                                    "targetPort": "proxy-injector"
                                }
                            ],
                            "selector": {
                                "linkerd.io/control-plane-component": "proxy-injector"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"proxy-injector\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-proxy-injector\",\"namespace\":\"linkerd\"},\"spec\":{\"ports\":[{\"name\":\"proxy-injector\",\"port\":443,\"targetPort\":\"proxy-injector\"}],\"selector\":{\"linkerd.io/control-plane-component\":\"proxy-injector\"},\"type\":\"ClusterIP\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:09Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-proxy-injector",
                        "namespace": "linkerd",
                        "resourceVersion": "44545",
                        "selfLink": "/api/v1/namespaces/linkerd/services/linkerd-proxy-injector",
                        "uid": "72433026-77ce-43e5-bdb2-7ad932eb1e0f"
                    },
                    "spec": {
                        "clusterIP": "10.245.79.141",
                        "ports": [
                            {
                                "name": "proxy-injector",
                                "port": 443,
                                "protocol": "TCP",
                                "targetPort": "proxy-injector"
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "proxy-injector"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-tap",
                "custom": true,
                "id": "linkerd/linkerd-tap",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-tap",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-tap"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "tap",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-tap"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "tap",
                                            "-controller-namespace=linkerd",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9998
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "tap",
                                        "ports": [
                                            {
                                                "containerPort": 8088,
                                                "name": "grpc"
                                            },
                                            {
                                                "containerPort": 8089,
                                                "name": "apiserver"
                                            },
                                            {
                                                "containerPort": 9998,
                                                "name": "admin-http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9998
                                            }
                                        },
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/tls",
                                                "name": "tls",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 2
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "linkerd-tap",
                                "volumes": [
                                    {
                                        "configMap": {
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    },
                                    {
                                        "name": "tls",
                                        "secret": {
                                            "secretName": "linkerd-tap-tls"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "linkerd.io/control-plane-component": "tap",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-tap"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                        "linkerd.io/identity-mode": "default",
                                        "linkerd.io/proxy-version": "stable-2.6.0"
                                    },
                                    "labels": {
                                        "linkerd.io/control-plane-component": "tap",
                                        "linkerd.io/control-plane-ns": "linkerd",
                                        "linkerd.io/proxy-deployment": "linkerd-tap"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "tap",
                                                "-controller-namespace=linkerd",
                                                "-log-level=info"
                                            ],
                                            "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/ping",
                                                    "port": 9998
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "tap",
                                            "ports": [
                                                {
                                                    "containerPort": 8088,
                                                    "name": "grpc"
                                                },
                                                {
                                                    "containerPort": 8089,
                                                    "name": "apiserver"
                                                },
                                                {
                                                    "containerPort": 9998,
                                                    "name": "admin-http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 7,
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 9998
                                                }
                                            },
                                            "securityContext": {
                                                "runAsUser": 2103
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/tls",
                                                    "name": "tls",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/run/linkerd/config",
                                                    "name": "config"
                                                }
                                            ]
                                        },
                                        {
                                            "env": [
                                                {
                                                    "name": "LINKERD2_PROXY_LOG",
                                                    "value": "warn,linkerd2_proxy=info"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                    "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4190"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4191"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                    "value": "127.0.0.1:4140"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4143"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "_pod_ns",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                    "value": "ns:$(_pod_ns)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                    "value": "/var/run/linkerd/identity/end-entity"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                    "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                    "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                    "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                                },
                                                {
                                                    "name": "_pod_sa",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.serviceAccountName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "_l5d_ns",
                                                    "value": "linkerd"
                                                },
                                                {
                                                    "name": "_l5d_trustdomain",
                                                    "value": "cluster.local"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                    "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                    "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                    "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                    "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                }
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/metrics",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "linkerd-proxy",
                                            "ports": [
                                                {
                                                    "containerPort": 4143,
                                                    "name": "linkerd-proxy"
                                                },
                                                {
                                                    "containerPort": 4191,
                                                    "name": "linkerd-admin"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 2
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsUser": 2102
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/identity/end-entity",
                                                    "name": "linkerd-identity-end-entity"
                                                }
                                            ]
                                        }
                                    ],
                                    "initContainers": [
                                        {
                                            "args": [
                                                "--incoming-proxy-port",
                                                "4143",
                                                "--outgoing-proxy-port",
                                                "4140",
                                                "--proxy-uid",
                                                "2102",
                                                "--inbound-ports-to-ignore",
                                                "4190,4191",
                                                "--outbound-ports-to-ignore",
                                                "443"
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "linkerd-init",
                                            "resources": {
                                                "limits": {
                                                    "cpu": "100m",
                                                    "memory": "50Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "10Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "add": [
                                                        "NET_ADMIN",
                                                        "NET_RAW"
                                                    ]
                                                },
                                                "privileged": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsNonRoot": false,
                                                "runAsUser": 0
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError"
                                        }
                                    ],
                                    "nodeSelector": {
                                        "beta.kubernetes.io/os": "linux"
                                    },
                                    "serviceAccountName": "linkerd-tap",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "name": "linkerd-config"
                                            },
                                            "name": "config"
                                        },
                                        {
                                            "emptyDir": {
                                                "medium": "Memory"
                                            },
                                            "name": "linkerd-identity-end-entity"
                                        },
                                        {
                                            "name": "tls",
                                            "secret": {
                                                "secretName": "linkerd-tap-tls"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-tap\",\"namespace\":\"linkerd\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-tap\"}},\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\",\"linkerd.io/identity-mode\":\"default\",\"linkerd.io/proxy-version\":\"stable-2.6.0\"},\"labels\":{\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-tap\"}},\"spec\":{\"containers\":[{\"args\":[\"tap\",\"-controller-namespace=linkerd\",\"-log-level=info\"],\"image\":\"gcr.io/linkerd-io/controller:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ping\",\"port\":9998},\"initialDelaySeconds\":10},\"name\":\"tap\",\"ports\":[{\"containerPort\":8088,\"name\":\"grpc\"},{\"containerPort\":8089,\"name\":\"apiserver\"},{\"containerPort\":9998,\"name\":\"admin-http\"}],\"readinessProbe\":{\"failureThreshold\":7,\"httpGet\":{\"path\":\"/ready\",\"port\":9998}},\"securityContext\":{\"runAsUser\":2103},\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/tls\",\"name\":\"tls\",\"readOnly\":true},{\"mountPath\":\"/var/run/linkerd/config\",\"name\":\"config\"}]},{\"env\":[{\"name\":\"LINKERD2_PROXY_LOG\",\"value\":\"warn,linkerd2_proxy=info\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_ADDR\",\"value\":\"linkerd-dst.linkerd.svc.cluster.local:8086\"},{\"name\":\"LINKERD2_PROXY_CONTROL_LISTEN_ADDR\",\"value\":\"0.0.0.0:4190\"},{\"name\":\"LINKERD2_PROXY_ADMIN_LISTEN_ADDR\",\"value\":\"0.0.0.0:4191\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR\",\"value\":\"127.0.0.1:4140\"},{\"name\":\"LINKERD2_PROXY_INBOUND_LISTEN_ADDR\",\"value\":\"0.0.0.0:4143\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_GET_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"_pod_ns\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LINKERD2_PROXY_DESTINATION_CONTEXT\",\"value\":\"ns:$(_pod_ns)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_DIR\",\"value\":\"/var/run/linkerd/identity/end-entity\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS\",\"value\":\"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\\n\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TOKEN_FILE\",\"value\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_ADDR\",\"value\":\"linkerd-identity.linkerd.svc.cluster.local:8080\"},{\"name\":\"_pod_sa\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"_l5d_ns\",\"value\":\"linkerd\"},{\"name\":\"_l5d_trustdomain\",\"value\":\"cluster.local\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_LOCAL_NAME\",\"value\":\"$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_NAME\",\"value\":\"linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_NAME\",\"value\":\"linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_TAP_SVC_NAME\",\"value\":\"linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"}],\"image\":\"gcr.io/linkerd-io/proxy:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/metrics\",\"port\":4191},\"initialDelaySeconds\":10},\"name\":\"linkerd-proxy\",\"ports\":[{\"containerPort\":4143,\"name\":\"linkerd-proxy\"},{\"containerPort\":4191,\"name\":\"linkerd-admin\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":4191},\"initialDelaySeconds\":2},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsUser\":2102},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/identity/end-entity\",\"name\":\"linkerd-identity-end-entity\"}]}],\"initContainers\":[{\"args\":[\"--incoming-proxy-port\",\"4143\",\"--outgoing-proxy-port\",\"4140\",\"--proxy-uid\",\"2102\",\"--inbound-ports-to-ignore\",\"4190,4191\",\"--outbound-ports-to-ignore\",\"443\"],\"image\":\"gcr.io/linkerd-io/proxy-init:v1.1.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"linkerd-init\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":false,\"runAsUser\":0},\"terminationMessagePolicy\":\"FallbackToLogsOnError\"}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"linkerd-tap\",\"volumes\":[{\"configMap\":{\"name\":\"linkerd-config\"},\"name\":\"config\"},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"linkerd-identity-end-entity\"},{\"name\":\"tls\",\"secret\":{\"secretName\":\"linkerd-tap-tls\"}}]}}}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:59Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-tap",
                        "namespace": "linkerd",
                        "resourceVersion": "45058",
                        "selfLink": "/apis/apps/v1/namespaces/linkerd/deployments/linkerd-tap",
                        "uid": "6b28f5a7-05f4-4607-86fa-0f3b26bf8c11"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-tap"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "tap",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-tap"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "tap",
                                            "-controller-namespace=linkerd",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9998,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "tap",
                                        "ports": [
                                            {
                                                "containerPort": 8088,
                                                "name": "grpc",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8089,
                                                "name": "apiserver",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9998,
                                                "name": "admin-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9998,
                                                "scheme": "HTTP"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/tls",
                                                "name": "tls",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "linkerd-tap",
                                "serviceAccountName": "linkerd-tap",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    },
                                    {
                                        "name": "tls",
                                        "secret": {
                                            "defaultMode": 420,
                                            "secretName": "linkerd-tap-tls"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:03:34Z",
                                "lastUpdateTime": "2019-12-05T20:03:34Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T20:02:59Z",
                                "lastUpdateTime": "2019-12-05T20:03:34Z",
                                "message": "ReplicaSet \"linkerd-tap-8c7c4fc57\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-tap",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta1:Deployment::linkerd/linkerd-tap",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta2:Deployment::linkerd/linkerd-tap",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Deployment::linkerd/linkerd-tap"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::linkerd/linkerd-heartbeat",
                "custom": true,
                "id": "linkerd/linkerd-heartbeat",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:RoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-heartbeat",
                        "namespace": "linkerd"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "linkerd-heartbeat"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-heartbeat",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-heartbeat",
                            "namespace": "linkerd"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "linkerd-heartbeat"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-heartbeat",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-heartbeat\",\"namespace\":\"linkerd\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"linkerd-heartbeat\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-heartbeat\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:55Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-heartbeat",
                        "namespace": "linkerd",
                        "resourceVersion": "44671",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/linkerd/rolebindings/linkerd-heartbeat",
                        "uid": "d6501c64-528e-4909-8762-2795616a29c7"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "linkerd-heartbeat"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-heartbeat",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::linkerd-linkerd-controller",
                "custom": true,
                "id": "linkerd-linkerd-controller",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-controller"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "extensions",
                                "apps"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "replicasets",
                                "statefulsets"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "endpoints",
                                "services",
                                "replicationcontrollers",
                                "namespaces"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "linkerd.io"
                            ],
                            "resources": [
                                "serviceprofiles"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "split.smi-spec.io"
                            ],
                            "resources": [
                                "trafficsplits"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "controller",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-controller"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "extensions",
                                    "apps"
                                ],
                                "resources": [
                                    "daemonsets",
                                    "deployments",
                                    "replicasets",
                                    "statefulsets"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions",
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "endpoints",
                                    "services",
                                    "replicationcontrollers",
                                    "namespaces"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "linkerd.io"
                                ],
                                "resources": [
                                    "serviceprofiles"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "split.smi-spec.io"
                                ],
                                "resources": [
                                    "trafficsplits"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"controller\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-controller\"},\"rules\":[{\"apiGroups\":[\"extensions\",\"apps\"],\"resources\":[\"daemonsets\",\"deployments\",\"replicasets\",\"statefulsets\"],\"verbs\":[\"list\",\"get\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"list\",\"get\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"endpoints\",\"services\",\"replicationcontrollers\",\"namespaces\"],\"verbs\":[\"list\",\"get\",\"watch\"]},{\"apiGroups\":[\"linkerd.io\"],\"resources\":[\"serviceprofiles\"],\"verbs\":[\"list\",\"get\",\"watch\"]},{\"apiGroups\":[\"split.smi-spec.io\"],\"resources\":[\"trafficsplits\"],\"verbs\":[\"list\",\"get\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:24Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-controller",
                        "resourceVersion": "44595",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/linkerd-linkerd-controller",
                        "uid": "7295c12c-b47e-42b5-92f1-26f18dff882a"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "extensions",
                                "apps"
                            ],
                            "resources": [
                                "daemonsets",
                                "deployments",
                                "replicasets",
                                "statefulsets"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "endpoints",
                                "services",
                                "replicationcontrollers",
                                "namespaces"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "linkerd.io"
                            ],
                            "resources": [
                                "serviceprofiles"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "split.smi-spec.io"
                            ],
                            "resources": [
                                "trafficsplits"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::metrics-server-aggregated",
                "custom": true,
                "id": "system:metrics-server-aggregated-reader",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                            "rbac.authorization.k8s.io/aggregate-to-edit": "true",
                            "rbac.authorization.k8s.io/aggregate-to-view": "true"
                        },
                        "name": "system:metrics-server-aggregated-reader"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "metrics.k8s.io"
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app": "metrics-server",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                                "rbac.authorization.k8s.io/aggregate-to-edit": "true",
                                "rbac.authorization.k8s.io/aggregate-to-view": "true"
                            },
                            "name": "system:metrics-server-aggregated-reader"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "metrics.k8s.io"
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"rbac.authorization.k8s.io/aggregate-to-admin\":\"true\",\"rbac.authorization.k8s.io/aggregate-to-edit\":\"true\",\"rbac.authorization.k8s.io/aggregate-to-view\":\"true\"},\"name\":\"system:metrics-server-aggregated-reader\"},\"rules\":[{\"apiGroups\":[\"metrics.k8s.io\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T07:30:58Z",
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                            "rbac.authorization.k8s.io/aggregate-to-edit": "true",
                            "rbac.authorization.k8s.io/aggregate-to-view": "true"
                        },
                        "name": "system:metrics-server-aggregated-reader",
                        "resourceVersion": "1208",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Ametrics-server-aggregated-reader",
                        "uid": "1461867b-90e4-42fe-ade2-bd44a7376339"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "metrics.k8s.io"
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac::metrics-server",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::metrics-server",
                "custom": true,
                "id": "system:metrics-server",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "system:metrics-server"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "nodes",
                                "nodes/stats"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app": "metrics-server",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "system:metrics-server"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "nodes",
                                    "nodes/stats"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"system:metrics-server\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"nodes\",\"nodes/stats\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T07:30:58Z",
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "system:metrics-server",
                        "resourceVersion": "1209",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Ametrics-server",
                        "uid": "92037e73-b541-44a4-96af-9c319ece9414"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "nodes",
                                "nodes/stats"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac::metrics-server",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::linkerd-linkerd-proxy-injector",
                "custom": true,
                "id": "linkerd-linkerd-proxy-injector",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-proxy-injector"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces",
                                "replicationcontrollers"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "apps"
                            ],
                            "resources": [
                                "deployments",
                                "replicasets",
                                "daemonsets",
                                "statefulsets"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "proxy-injector",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-proxy-injector"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces",
                                    "replicationcontrollers"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions",
                                    "apps"
                                ],
                                "resources": [
                                    "deployments",
                                    "replicasets",
                                    "daemonsets",
                                    "statefulsets"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions",
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "verbs": [
                                    "list",
                                    "get",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"proxy-injector\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-proxy-injector\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\",\"replicationcontrollers\"],\"verbs\":[\"list\",\"get\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"apps\"],\"resources\":[\"deployments\",\"replicasets\",\"daemonsets\",\"statefulsets\"],\"verbs\":[\"list\",\"get\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"list\",\"get\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:04Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "proxy-injector",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-proxy-injector",
                        "resourceVersion": "44520",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/linkerd-linkerd-proxy-injector",
                        "uid": "5329a443-5ccc-44c5-a72e-285ba4eb67b4"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces",
                                "replicationcontrollers"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "apps"
                            ],
                            "resources": [
                                "deployments",
                                "replicasets",
                                "daemonsets",
                                "statefulsets"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "get",
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::linkerd-linkerd-destination",
                "custom": true,
                "id": "linkerd-linkerd-destination",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "destination",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-destination"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-destination"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-destination",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "destination",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-destination"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "linkerd-linkerd-destination"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-destination",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"destination\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-destination\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"linkerd-linkerd-destination\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-destination\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:28Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "destination",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-destination",
                        "resourceVersion": "44605",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/linkerd-linkerd-destination",
                        "uid": "97f0be9b-e1bc-457d-bd5e-8d542e130fd1"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-destination"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-destination",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:batch/v1beta1:CronJob::linkerd/linkerd-heartbeat",
                "custom": true,
                "id": "linkerd/linkerd-heartbeat",
                "type": "kubernetes:batch/v1beta1:CronJob",
                "inputs": {
                    "apiVersion": "batch/v1beta1",
                    "kind": "CronJob",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "heartbeat",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-heartbeat",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "jobTemplate": {
                            "spec": {
                                "template": {
                                    "metadata": {
                                        "annotations": {
                                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                                        },
                                        "labels": {
                                            "linkerd.io/control-plane-component": "heartbeat"
                                        }
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "args": [
                                                    "heartbeat",
                                                    "-prometheus-url=http://linkerd-prometheus.linkerd.svc.cluster.local:9090",
                                                    "-controller-namespace=linkerd",
                                                    "-log-level=info"
                                                ],
                                                "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                                "imagePullPolicy": "IfNotPresent",
                                                "name": "heartbeat",
                                                "securityContext": {
                                                    "runAsUser": 2103
                                                }
                                            }
                                        ],
                                        "nodeSelector": {
                                            "beta.kubernetes.io/os": "linux"
                                        },
                                        "restartPolicy": "Never",
                                        "serviceAccountName": "linkerd-heartbeat"
                                    }
                                }
                            }
                        },
                        "schedule": "0 0 * * *",
                        "successfulJobsHistoryLimit": 0
                    }
                },
                "outputs": {
                    "__initialApiVersion": "batch/v1beta1",
                    "__inputs": {
                        "apiVersion": "batch/v1beta1",
                        "kind": "CronJob",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "heartbeat",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-heartbeat",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "jobTemplate": {
                                "spec": {
                                    "template": {
                                        "metadata": {
                                            "annotations": {
                                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                                            },
                                            "labels": {
                                                "linkerd.io/control-plane-component": "heartbeat"
                                            }
                                        },
                                        "spec": {
                                            "containers": [
                                                {
                                                    "args": [
                                                        "heartbeat",
                                                        "-prometheus-url=http://linkerd-prometheus.linkerd.svc.cluster.local:9090",
                                                        "-controller-namespace=linkerd",
                                                        "-log-level=info"
                                                    ],
                                                    "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                                    "imagePullPolicy": "IfNotPresent",
                                                    "name": "heartbeat",
                                                    "securityContext": {
                                                        "runAsUser": 2103
                                                    }
                                                }
                                            ],
                                            "nodeSelector": {
                                                "beta.kubernetes.io/os": "linux"
                                            },
                                            "restartPolicy": "Never",
                                            "serviceAccountName": "linkerd-heartbeat"
                                        }
                                    }
                                }
                            },
                            "schedule": "0 0 * * *",
                            "successfulJobsHistoryLimit": 0
                        }
                    },
                    "apiVersion": "batch/v1beta1",
                    "kind": "CronJob",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"batch/v1beta1\",\"kind\":\"CronJob\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"heartbeat\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-heartbeat\",\"namespace\":\"linkerd\"},\"spec\":{\"jobTemplate\":{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"linkerd.io/control-plane-component\":\"heartbeat\"}},\"spec\":{\"containers\":[{\"args\":[\"heartbeat\",\"-prometheus-url=http://linkerd-prometheus.linkerd.svc.cluster.local:9090\",\"-controller-namespace=linkerd\",\"-log-level=info\"],\"image\":\"gcr.io/linkerd-io/controller:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"heartbeat\",\"securityContext\":{\"runAsUser\":2103}}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"restartPolicy\":\"Never\",\"serviceAccountName\":\"linkerd-heartbeat\"}}}},\"schedule\":\"0 0 * * *\",\"successfulJobsHistoryLimit\":0}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:32Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "heartbeat",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-heartbeat",
                        "namespace": "linkerd",
                        "resourceVersion": "59317",
                        "selfLink": "/apis/batch/v1beta1/namespaces/linkerd/cronjobs/linkerd-heartbeat",
                        "uid": "f27e90cb-fbb9-45ee-93e4-8405750e33cc"
                    },
                    "spec": {
                        "concurrencyPolicy": "Allow",
                        "failedJobsHistoryLimit": 1,
                        "jobTemplate": {
                            "metadata": {},
                            "spec": {
                                "template": {
                                    "metadata": {
                                        "annotations": {
                                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                                        },
                                        "labels": {
                                            "linkerd.io/control-plane-component": "heartbeat"
                                        }
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "args": [
                                                    "heartbeat",
                                                    "-prometheus-url=http://linkerd-prometheus.linkerd.svc.cluster.local:9090",
                                                    "-controller-namespace=linkerd",
                                                    "-log-level=info"
                                                ],
                                                "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                                "imagePullPolicy": "IfNotPresent",
                                                "name": "heartbeat",
                                                "resources": {},
                                                "securityContext": {
                                                    "runAsUser": 2103
                                                },
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File"
                                            }
                                        ],
                                        "dnsPolicy": "ClusterFirst",
                                        "nodeSelector": {
                                            "beta.kubernetes.io/os": "linux"
                                        },
                                        "restartPolicy": "Never",
                                        "schedulerName": "default-scheduler",
                                        "securityContext": {},
                                        "serviceAccount": "linkerd-heartbeat",
                                        "serviceAccountName": "linkerd-heartbeat",
                                        "terminationGracePeriodSeconds": 30
                                    }
                                }
                            }
                        },
                        "schedule": "0 0 * * *",
                        "successfulJobsHistoryLimit": 0,
                        "suspend": false
                    },
                    "status": {
                        "lastScheduleTime": "2019-12-06T00:00:00Z"
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::linkerd-linkerd-controller",
                "custom": true,
                "id": "linkerd-linkerd-controller",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-controller"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-controller",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "controller",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-linkerd-controller"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "linkerd-linkerd-controller"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "linkerd-controller",
                                "namespace": "linkerd"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"controller\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-linkerd-controller\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"linkerd-linkerd-controller\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"linkerd-controller\",\"namespace\":\"linkerd\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T20:02:26Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-linkerd-controller",
                        "resourceVersion": "44598",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/linkerd-linkerd-controller",
                        "uid": "35fcdafd-6794-44ea-8360-9c26e22ed2ce"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "linkerd-linkerd-controller"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "linkerd-controller",
                            "namespace": "linkerd"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::linkerd/linkerd-tap",
                "custom": true,
                "id": "linkerd/linkerd-tap",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-tap",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "grpc",
                                "port": 8088,
                                "targetPort": 8088
                            },
                            {
                                "name": "apiserver",
                                "port": 443,
                                "targetPort": "apiserver"
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "tap"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-tap",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "grpc",
                                    "port": 8088,
                                    "targetPort": 8088
                                },
                                {
                                    "name": "apiserver",
                                    "port": 443,
                                    "targetPort": "apiserver"
                                }
                            ],
                            "selector": {
                                "linkerd.io/control-plane-component": "tap"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-tap\",\"namespace\":\"linkerd\"},\"spec\":{\"ports\":[{\"name\":\"grpc\",\"port\":8088,\"targetPort\":8088},{\"name\":\"apiserver\",\"port\":443,\"targetPort\":\"apiserver\"}],\"selector\":{\"linkerd.io/control-plane-component\":\"tap\"},\"type\":\"ClusterIP\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:08Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-tap",
                        "namespace": "linkerd",
                        "resourceVersion": "44536",
                        "selfLink": "/api/v1/namespaces/linkerd/services/linkerd-tap",
                        "uid": "1b0db574-f89d-46ea-99dd-aa9229f5e751"
                    },
                    "spec": {
                        "clusterIP": "10.245.117.18",
                        "ports": [
                            {
                                "name": "grpc",
                                "port": 8088,
                                "protocol": "TCP",
                                "targetPort": 8088
                            },
                            {
                                "name": "apiserver",
                                "port": 443,
                                "protocol": "TCP",
                                "targetPort": "apiserver"
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "tap"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::linkerd/linkerd-web",
                "custom": true,
                "id": "linkerd/linkerd-web",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "web",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-web",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 8084,
                                "targetPort": 8084
                            },
                            {
                                "name": "admin-http",
                                "port": 9994,
                                "targetPort": 9994
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "web"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "web",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-web",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 8084,
                                    "targetPort": 8084
                                },
                                {
                                    "name": "admin-http",
                                    "port": 9994,
                                    "targetPort": 9994
                                }
                            ],
                            "selector": {
                                "linkerd.io/control-plane-component": "web"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"web\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-web\",\"namespace\":\"linkerd\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":8084,\"targetPort\":8084},{\"name\":\"admin-http\",\"port\":9994,\"targetPort\":9994}],\"selector\":{\"linkerd.io/control-plane-component\":\"web\"},\"type\":\"ClusterIP\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:16Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "web",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-web",
                        "namespace": "linkerd",
                        "resourceVersion": "44571",
                        "selfLink": "/api/v1/namespaces/linkerd/services/linkerd-web",
                        "uid": "6e75ca48-9507-4abf-8b49-671c33478b3e"
                    },
                    "spec": {
                        "clusterIP": "10.245.118.108",
                        "ports": [
                            {
                                "name": "http",
                                "port": 8084,
                                "protocol": "TCP",
                                "targetPort": 8084
                            },
                            {
                                "name": "admin-http",
                                "port": 9994,
                                "protocol": "TCP",
                                "targetPort": 9994
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "web"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Secret::linkerd/linkerd-tap-tls",
                "custom": true,
                "id": "linkerd/linkerd-tap-tls",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "crt.pem": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lSQUpSUC9YNFRHWDlDTVAwaW90ZDZPSWt3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWGJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDNXpkbU13SGhjTk1Ua3hNakExTWpNeApOakE0V2hjTk1qQXhNakEwTWpNeE5qQTRXakFpTVNBd0hnWURWUVFERXhkc2FXNXJaWEprTFhSaGNDNXNhVzVyClpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlhicmNiUys0UGQKcnF2eW5DMEhhbjQ0emMvVHBDQUxqb0hQWFFwVUdFYStmZldCS3M5NDdyQ2xYR2RjN2dncmZvTkNXZWNOK21OMQpRcFRNUGlqV1lkQjVCWk92RlhSNVRXK3VjM21OLzBMMTdzd2pZeTF1dlBzc1ZKVk9SNktkRWJNZWlCeGliODRFClhNZFBXSGN5Q1JiWkxMcm5aTkwxVUtDRy9TK1p4NWxPcThXemFWci81emhtZlpuLzZwdDBNcjlaVHdFOWczY1IKNHRRYnZ0V25PMmF3Y1BKNzJIdTkxQ25oZk9TTXlqanZUcmpkbkFPSk9Kc1V5dDZFMC9VZUJLY1lteG1LcVkwSApuYk5MdUlBUEhsaEMrdnBsSi9MekVyemV1cDM5azZ1NUV5dEpmWjluMVhZT1hBSVl6TG1WSWlsMzVCOXJBOE5OCm15TUZrYjM1UVcwQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFDUUIxOVdhOVBxMXpxNVFkQzU2ZllLenBqZ01HZzYvc21TekpyMm4yLzgvdmNFbWlMTEkzbFJUU0hECklOcERIb04yZGlzb3NRSEViVmczejJzSit0bGFUMUJ6aFN1Q2FyNjNuQ0NkSFdBaDA0ZnhuVWFDV09SbW1wVzUKRGRMZXdWbVJvY25lenowNUVZU3BPZThZQU5udmIzSEVONCtkRHlHQkU3YXo2ZktnaTFxL1JsVjJHUElQb0ZzTworbWY0WG9HczZXZU85UFNBQlRoSjRHNUJSbTJoczlPUjRyaXJDb0Z3enRUVWoxV0p1TWdRemJ2UW04d3JhcmlIClczTzgyT2pMSWtWR0t5d1pwVXN2N3g3eTJDZ3dzemxiNllGS1B0VW5XNWF4cVZkc3pPb1B2UXU4cHNENnl0NVoKN0poWVRPNTBBd0c4TGVuSDF6NTNNcVRFcGdXRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                        "key.pem": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWR1dHh0TDdnOTJ1cS9LY0xRZHFmampOejlPa0lBdU9nYzlkQ2xRWVJyNTk5WUVxCnozanVzS1ZjWjF6dUNDdCtnMEpaNXczNlkzVkNsTXcrS05aaDBIa0ZrNjhWZEhsTmI2NXplWTMvUXZYdXpDTmoKTFc2OCt5eFVsVTVIb3AwUnN4NklIR0p2emdSY3gwOVlkeklKRnRrc3V1ZGswdlZRb0liOUw1bkhtVTZyeGJOcApXdi9uT0daOW1mL3FtM1F5djFsUEFUMkRkeEhpMUJ1KzFhYzdackJ3OG52WWU3M1VLZUY4NUl6S09POU91TjJjCkE0azRteFRLM29UVDlSNEVweGliR1lxcGpRZWRzMHU0Z0E4ZVdFTDYrbVVuOHZNU3ZONjZuZjJUcTdrVEswbDkKbjJmVmRnNWNBaGpNdVpVaUtYZmtIMnNEdzAyYkl3V1J2ZmxCYlFJREFRQUJBb0lCQVFDRUhhV2FpZWJWelJMRwpxU2V3YmI5dFlOeE13dnZHekR6cWx0ZHN0UTBXVDBKemM2dWw1cGpXeWlGdXZhdFRvc01TaGVBU2JNRTl4a2d1CnNvcklJY0RsMEk0UWNYNTRxU09jbGhKQ2l1V2lVVnFJQkdpVnZhN0VJTnZVTFRyMkM4RE9mbE1wN2VvU1JRR28KSTYyTVhYM2QvcWF5aEpiMStKVXB4cHNOV0J4RjZZRzZLcitQeTZmcEViejY5WndFQmRnWkxjTVlTWU9rbyt5aApOakNwWmZvZGN3ZmcrR0RVTUY0ZWMwMkp0SUV5aXRoTjJrWTRuSDUwYWtGeEI4OWp1UTVodmRkak9TdEhqOTM2CnN4L3hLMlhzaDh6MStUckRNY2k3WlBxOEhocXRkZ2JjSnhKcEtXZXNZQjRwemVTUWI1a0VFeTR6QkdneGY5LzQKYzFITyt1UWhBb0dCQU9BL08rREl3eVBvTHBvVHZHUE1RRTdHYVpyV0c4OGQwMzhiWHc3ZGk4RGpIT3ZkQ3dGdApHVzdvZ1pmbjRmdG8xNmNSNmc0OVQwQ2lYU01YOU1ZdHRuZmlVVXJ3TVUvOVcvdy9haTQvenFlanN3cWthYjBjCmp3Z0ZBTHNXNzZHbUlkY3h3WlhxU25yNjlLSy91T1FoVGR0Q3ltSTA0a2lDdS84TUg0L204a3NaQW9HQkFQUWoKMjBGb2w3UFMzZUZiaXErZE9GcVN0b2VDT2pUbEFxcThEU3lDaWhpMDg2Y205RE8zcVZneGMxZ2FrWWtPbWZyRgpKeHg1RCtoU21kWkJHNFkzWlJ2SXNPd3BuNnZZSm5icUJRVlFZdERvOGFIMUNWRW1rMm9Vc24wWWdwczZnTzVUCnNwRzdZQ2c3dFEwdlo3Mk83UGdCS2VSanV0aXE0Sk10b2xzSDBVZDFBb0dCQUwveFlDOW5xS0J6ZkhBbHRIczMKdVZPMFFYQm5GQ2FVUVJQck9kSmZqOS9xaGpiZFhTNDdWQ202bWpLTUtNSXBXMjJGeC9Hb1NNM3FMQTU5MHVaTworb0JqRjNJdFpnZ3h0U3FVblM0NUw0b09kSklIYVBxV0YxZWw4Sm96WjZuVnFlR29sU3JkQUNPRDZ5SGpPVDhMCndyaUswdkI4azdPOU0yMTcwd2c1aGVzQkFvR0FLek9SSCtEdlAwM29IM0hBZDlUOVhPR3JWUTFSV1h6UTNQK0wKNFQxMFRHencxTHBLNmovc3dvTjFvcmlJMmxUd0lIVDB0OUFnWlg4QVkrNS9mVitlRDYyU3lTZVFicXRBR3pqTQpES1d0NXNQaHhrUURFdzRkZGQ4VnVwYzB2VjA3NVhDQUg5T2xiMWtwYjV6YzRhbEIrNXpSR2U0ZjZTbEx0aCtVCkpFR2M0ZVVDZ1lBeTBIK2I1RUFmYUJQUGtMRVllWnNBbUhSY1llb1pRYUpTSHBjdkRzekNVa0IxYklpckgzR0UKd1pIL1NnaXBFK3VobUVVdEhqQlorblRPWTQwY3RMVWFqdjJlR3ZpWGwzcFRKZFE2b3BsRW80ZmM2aFkxQ09LRgpNVC8yenZEaVp5QkFMN1ppMEh6YzJvSTFBdldod0NsSzJpZEF0YnFCTFI4cDI3TW1vb2I3RUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-tap-tls",
                        "namespace": "linkerd"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "crt.pem": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lSQUpSUC9YNFRHWDlDTVAwaW90ZDZPSWt3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWGJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDNXpkbU13SGhjTk1Ua3hNakExTWpNeApOakE0V2hjTk1qQXhNakEwTWpNeE5qQTRXakFpTVNBd0hnWURWUVFERXhkc2FXNXJaWEprTFhSaGNDNXNhVzVyClpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlhicmNiUys0UGQKcnF2eW5DMEhhbjQ0emMvVHBDQUxqb0hQWFFwVUdFYStmZldCS3M5NDdyQ2xYR2RjN2dncmZvTkNXZWNOK21OMQpRcFRNUGlqV1lkQjVCWk92RlhSNVRXK3VjM21OLzBMMTdzd2pZeTF1dlBzc1ZKVk9SNktkRWJNZWlCeGliODRFClhNZFBXSGN5Q1JiWkxMcm5aTkwxVUtDRy9TK1p4NWxPcThXemFWci81emhtZlpuLzZwdDBNcjlaVHdFOWczY1IKNHRRYnZ0V25PMmF3Y1BKNzJIdTkxQ25oZk9TTXlqanZUcmpkbkFPSk9Kc1V5dDZFMC9VZUJLY1lteG1LcVkwSApuYk5MdUlBUEhsaEMrdnBsSi9MekVyemV1cDM5azZ1NUV5dEpmWjluMVhZT1hBSVl6TG1WSWlsMzVCOXJBOE5OCm15TUZrYjM1UVcwQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFDUUIxOVdhOVBxMXpxNVFkQzU2ZllLenBqZ01HZzYvc21TekpyMm4yLzgvdmNFbWlMTEkzbFJUU0hECklOcERIb04yZGlzb3NRSEViVmczejJzSit0bGFUMUJ6aFN1Q2FyNjNuQ0NkSFdBaDA0ZnhuVWFDV09SbW1wVzUKRGRMZXdWbVJvY25lenowNUVZU3BPZThZQU5udmIzSEVONCtkRHlHQkU3YXo2ZktnaTFxL1JsVjJHUElQb0ZzTworbWY0WG9HczZXZU85UFNBQlRoSjRHNUJSbTJoczlPUjRyaXJDb0Z3enRUVWoxV0p1TWdRemJ2UW04d3JhcmlIClczTzgyT2pMSWtWR0t5d1pwVXN2N3g3eTJDZ3dzemxiNllGS1B0VW5XNWF4cVZkc3pPb1B2UXU4cHNENnl0NVoKN0poWVRPNTBBd0c4TGVuSDF6NTNNcVRFcGdXRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "key.pem": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWR1dHh0TDdnOTJ1cS9LY0xRZHFmampOejlPa0lBdU9nYzlkQ2xRWVJyNTk5WUVxCnozanVzS1ZjWjF6dUNDdCtnMEpaNXczNlkzVkNsTXcrS05aaDBIa0ZrNjhWZEhsTmI2NXplWTMvUXZYdXpDTmoKTFc2OCt5eFVsVTVIb3AwUnN4NklIR0p2emdSY3gwOVlkeklKRnRrc3V1ZGswdlZRb0liOUw1bkhtVTZyeGJOcApXdi9uT0daOW1mL3FtM1F5djFsUEFUMkRkeEhpMUJ1KzFhYzdackJ3OG52WWU3M1VLZUY4NUl6S09POU91TjJjCkE0azRteFRLM29UVDlSNEVweGliR1lxcGpRZWRzMHU0Z0E4ZVdFTDYrbVVuOHZNU3ZONjZuZjJUcTdrVEswbDkKbjJmVmRnNWNBaGpNdVpVaUtYZmtIMnNEdzAyYkl3V1J2ZmxCYlFJREFRQUJBb0lCQVFDRUhhV2FpZWJWelJMRwpxU2V3YmI5dFlOeE13dnZHekR6cWx0ZHN0UTBXVDBKemM2dWw1cGpXeWlGdXZhdFRvc01TaGVBU2JNRTl4a2d1CnNvcklJY0RsMEk0UWNYNTRxU09jbGhKQ2l1V2lVVnFJQkdpVnZhN0VJTnZVTFRyMkM4RE9mbE1wN2VvU1JRR28KSTYyTVhYM2QvcWF5aEpiMStKVXB4cHNOV0J4RjZZRzZLcitQeTZmcEViejY5WndFQmRnWkxjTVlTWU9rbyt5aApOakNwWmZvZGN3ZmcrR0RVTUY0ZWMwMkp0SUV5aXRoTjJrWTRuSDUwYWtGeEI4OWp1UTVodmRkak9TdEhqOTM2CnN4L3hLMlhzaDh6MStUckRNY2k3WlBxOEhocXRkZ2JjSnhKcEtXZXNZQjRwemVTUWI1a0VFeTR6QkdneGY5LzQKYzFITyt1UWhBb0dCQU9BL08rREl3eVBvTHBvVHZHUE1RRTdHYVpyV0c4OGQwMzhiWHc3ZGk4RGpIT3ZkQ3dGdApHVzdvZ1pmbjRmdG8xNmNSNmc0OVQwQ2lYU01YOU1ZdHRuZmlVVXJ3TVUvOVcvdy9haTQvenFlanN3cWthYjBjCmp3Z0ZBTHNXNzZHbUlkY3h3WlhxU25yNjlLSy91T1FoVGR0Q3ltSTA0a2lDdS84TUg0L204a3NaQW9HQkFQUWoKMjBGb2w3UFMzZUZiaXErZE9GcVN0b2VDT2pUbEFxcThEU3lDaWhpMDg2Y205RE8zcVZneGMxZ2FrWWtPbWZyRgpKeHg1RCtoU21kWkJHNFkzWlJ2SXNPd3BuNnZZSm5icUJRVlFZdERvOGFIMUNWRW1rMm9Vc24wWWdwczZnTzVUCnNwRzdZQ2c3dFEwdlo3Mk83UGdCS2VSanV0aXE0Sk10b2xzSDBVZDFBb0dCQUwveFlDOW5xS0J6ZkhBbHRIczMKdVZPMFFYQm5GQ2FVUVJQck9kSmZqOS9xaGpiZFhTNDdWQ202bWpLTUtNSXBXMjJGeC9Hb1NNM3FMQTU5MHVaTworb0JqRjNJdFpnZ3h0U3FVblM0NUw0b09kSklIYVBxV0YxZWw4Sm96WjZuVnFlR29sU3JkQUNPRDZ5SGpPVDhMCndyaUswdkI4azdPOU0yMTcwd2c1aGVzQkFvR0FLek9SSCtEdlAwM29IM0hBZDlUOVhPR3JWUTFSV1h6UTNQK0wKNFQxMFRHencxTHBLNmovc3dvTjFvcmlJMmxUd0lIVDB0OUFnWlg4QVkrNS9mVitlRDYyU3lTZVFicXRBR3pqTQpES1d0NXNQaHhrUURFdzRkZGQ4VnVwYzB2VjA3NVhDQUg5T2xiMWtwYjV6YzRhbEIrNXpSR2U0ZjZTbEx0aCtVCkpFR2M0ZVVDZ1lBeTBIK2I1RUFmYUJQUGtMRVllWnNBbUhSY1llb1pRYUpTSHBjdkRzekNVa0IxYklpckgzR0UKd1pIL1NnaXBFK3VobUVVdEhqQlorblRPWTQwY3RMVWFqdjJlR3ZpWGwzcFRKZFE2b3BsRW80ZmM2aFkxQ09LRgpNVC8yenZEaVp5QkFMN1ppMEh6YzJvSTFBdldod0NsSzJpZEF0YnFCTFI4cDI3TW1vb2I3RUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "tap",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-tap-tls",
                            "namespace": "linkerd"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "v1:N91KyOxmVLqyO4cu:MEvMBF6yltk4pytSCuWtP8YMhx2lRLecU5SZ7cjcaoUgefvrAL47pSE5Av7trgZ9ASAtUYbgSqss48sLsFR+iRyBGnz8p/aVSr0FBslizoL0L3lcvz6WahhQHQ9POE2lwFR5SSljr+tRueRkz+oBzt8UF2MDAEDuFqMw/Lnf9HBXhcpN6Zss0qPiJx5RbP1C5FIWRqxXop851bhfPbngpJehyJAdBsRwtKW4diBQ3YY/4o9q5tzKfg0w/hujup2f2wt/SyJxvC/YoMIsYIPNKYLoj/uRp7tHu+AtqKq/UFsFVeKZ7dWq2I/UdhsaAi0YzhQct0FmVk6xRfNuLPOYi8MJ5ktU/gWDcaidhD85JDceqZJrIFkFoj0UvEm/Dsz3XnlQaQQYm9IdsNFt9hNaBIYRAIlXwC9gEirnjor5jjnNG3iUIDbDRBjpK5APuu/ZJ1lSasl7TozxZk4pKra3VnUO7wGVwkAqwfRXLQHx0IRyiOhwvRnYXme/Ft1oChM9NFgDH/wa5ygfwkHn71OmEhFfdJW+zugiiavktBbpYpMUHz4GMmoibw5P9DsonjWXT/AQrJ4TSeNrmkBGP1PO7ZlF29jScpb9LoKHi9IErxKo2bdQFwINEgm4lfJz+8+qUk5Ni3JHJ7/YOMiDltrCR3kptTkYVZ5m76jnUtITrcORmEHXIEYUEUE9cLXmfxtdqm6oHTd2mMY4jcucwI6Wh65KJLynLckt+FTgE2xd4CKMGTgCj/VNxb3JcHwgu50S3dSvXo6T3L1DfksIzr4/GXLu5g6J4SN6bGz/Hdnp7oQEj1RkSQwcnz0Aq1Zr9aX+U9m2DdKVLf3i/edlFQpxSsPl7KGClicSMBQEGe51iGRXoEpJUw/IXaXDV4HeRtbKBt9IWtBkhs39ZOLp2FpMqUoFbdikqJBGQwQFT10kQC9z990/1w0eCxoAKHXrniDe7Iyq7p9b/O+fovVOM3XrZbIoPRsq1K5C2fyBTM3NvgEh+QZ+rr0fBiOuaJ1omcVEeAB4aOuXDxpVBxKpfulD0udCIXf0vaPyFGpY0SvVONqcJEI85dwrtSKvRbg0RylLyFKLzoG1qiGLTDDHvFr9iEsJxQQ/kNnjZW7/Ur7CWsfuEuy2ZasPUIdpoIqzNet4SKTlS/K4JPUvvy5m4L2ChH7YMMWXFRbxv+sKmMdEKTr7hIGZPFr1d2hx8tnQvqq8s6khO1CXtqfnEbi69BqxZLAkHtsEmJ1QBLB47YfjjMkO//kEkXmxZKsaeLLAQl7ecg51k3G1S8+FmQkru7lXwETIKPjFHxdiiEJH7vNBS+LE/C43g7RX4MT5sL+3FW/Ux1v9iSDBARZwVvRSE/X9Md/mHC80OlsVoUqm/AJ1XlzsxSY7w82eDsEF3x/9Z8f45qQL2dADfSP5mh0GThGOmVMjAEGAHW7zFoy41CXI1xF5SqtjHcHOnfujgNg73CV47r1jHJw2XTv0Q4j3SkIiy2us/BbhcUydVUpRDbn2SkiRS4THxTMj8vpUszNgx1LfrPf6csbtDHjb5ypc6mecgwl1D01RWnDso6nbFLXLipU0COnPAfXzqX9G6cbDbXk2T0LuFgiTYlGzpe1WlFLgZVldvh3Fl5nOfhBMoMIGlO8CV5VgwjTi/LmT0KRoCk3oY0RIFQTku/6/MBDMzSAR94Yl5lQPmVmePmQDTjq85cV8DuJO0pVW8B0Hg7xwbxAKZgc6yUNL5ztKg2k7qrPJdlxEmOvkz/mYbRi3BWDaPimGBhYRZxCwXtbNahUkgTCbVy8XWQnrzU79OwJ0XARnhSN9Bog08ZkbB5lfi4RC4EwMHT1rydFZikEMilBJ3q2VsOyESqM3cRVNNiWYz7absljdQuo+O7QJ0sRnWbc7ku/Px5mVtQqEK40/NNyml8wzzl4LDEROR9Ot1M/m5iO4DYCNmNAuQxccA+r1FbEkLXSeQJHkOrxUq7fxb55xrhdouJ5bGwtVKCJBDN+qE8q+bQcj3G1sn+dum59zBflUYLOZ3+h5e6ic6dEHK42iAFG5+KhssbvoLcPEluw+BbnLmaOqWdBagBpFNZouXgszWrI45KDbCNryY5a/Jfurb/BrIEk1DPaPT4r9Czspf4yK4QItcWou3dllgBq4SgkV9t9+4Fc8uEv4+JcDXxKWm4yLD9B4WdhB+v5NDyw3L9dLUDF/rLrDXmuCO1V5ivMARPSlyDWywWGtIzNSduqNjMhDRMEvAB86fwisQjOZRX9EzMFUFtUGfH+jtY773G6W2jyFsT6LStniymElIKngxRXZV2218TdXDvosiTGxNCHj8x0iejuf7UpgAPYz199OZFeMP1GqJUP2GZMvjWR70wjD3XxFUpV9z4rPI9iC0HgAVbG2pz2GlkGxKlFObzTpV9MCjvbucD59TvktzyUAni1CPQ3hDxjeziEUBczLuJ3Uhz5S4iG9mjdJPmxllrtBPL6PThjqyBMOMkLtnk0QxRhUq4Wnt0q2q+21N8s/CmQG4fmkKCYVOFc4U8JfHuWldRMrKRAx26pLslblKZfeyRHe1NoJsnx/aLjKWxnnKUMTI4hQWrpaobdljNvkm+s9l/sPfZ+baSoL/qOKcj4xoGdjECnZCB3a8oWWUEOiuI2kkvFTL8vz+kslo0y4Y83qwPgx9ILkqwZK3AxcxDQooyAddnETuVTjK4uRULyooqxAqYba0i4RZWsmriHjsqjq3l1Ci8yhI2M4bxClPdkRB88rLOJpkdIGq3z+HtPffr/+YKOoiqArPGnI3AYwqBfJuOrMm8zF0zHe1cFOdS3SHjk/I19ai+MhNRS6HjXr98jAZ/Iuj9V70KbfvMDZOLcHGNsJojuz1p/Jbb+1HA6Y0qbI3Us8sVDUEVn7iBgmaqC6pXVkh2P0EZG1TTlVWQNAp89DagPnUSzgZz+DAPTPqAr3Zw8w+QG18uNhZ/98PUbQaB4aH0iG9wzfZPKMRfWAhN0/ySYa764td0YrwYXhiT8oA1LXcaNIyb0qOmyREkysrV/cgR+yGmFFjA4O4dyRnd04zy8AM5SCufFilctYAX9Z38GeTDlh8ID+bGHgc5X4Dm9Psp38S3VphgHpVXBwokeVPUjg4vy7D+HO2V7BAzvjQMK5Cy/OtU4Y5lC4VkBqo85X2dvx6DPF24OqGr+ybKoXkYfje/rCN8J5EtKkfDPO8wHtICpbnb+BxJF8GSkjsN0VNFakBtGPAeveH/0oi4D6eQD6EsRXea34dXmmFB5wvp5oDje+9CRi8Feij7rn4/QjXMJ7439y9frlGuynhzvpMH8Qg+BXq6F1BEQGLotr08X//7wWKQKPXlkiXojtU6yvOvizO9Fh/nUvZz0MwjxwMRUvh04btefVDtH/A3a0KpqOP7LEDVud65ZdwJztO/csoiCDxOoebk+Wv4BREwjXRFniS4JVyiNKLctihn6WdQyi37IH6lMnVKD2d+WG8L+u8RzTT5OUPP2g+RXxmNRPiOzM3a2KMpfQ7KA1Vbf2JyF6OezTh0InVZrlCaqRBaYymzBOg3VE7iG0xcrl1GQMr1+RnA6nJ4oECnw3wv2de3dk2X7sxPtxc4HJgDYJU2++mWO+pDU2TxGQpdApQS1LHyY4LO5piCs2mJbhPgjAdw+OwVZ9c9XNxOTxljt21PX+O/IT6oWkbZZtBH7rQ1LN+VHEuagSBPrOVdnB+Tt/Kzgb9b8qLQpBAwSZBCNtLX6teM0+VW0Ln0EXffgCp582zhsSt+tgBFvufb3cxdFrFkz6NZIykFxGpCcl8XxxepRcXW4NlLu9rYampn29vXJN6hrKYaHmkWOJ0UjAGqxkx+Zpi7Qxlp9D0nnkkVuUtwN1JTl0ayDkHv5ONncQRFPY6cro5Z48CaZ66UbmbYrnGAgt0fczEqstdp8ll36+peJBWfuKx27spjc61/xPh7ykapcL8y5p3qIerAftASjwuQ2JvrC++LPpO+2VaMWqi01KdklbyCApbP8KjRMjZTAlgsLfJYklQ5dOxG+onzdXb/8guMRfDgOEHRNzqvrQ7KvkBq6rv23wyJVD7eaktTqgsUFDiwGsRGZGtD4UVbmBUBOusYMhx/OSRjtuWXp9tpzJLFi0YfyfRuvTxSvyoP2U8u4zNUyMj9M+GueiN5x9F6rI784aLVVoSVz/Pl6IKI3PEUttqn5MvcfNQaNnSqXRG8Inz2QTruEUzat/GJ3Z1Dm9SmD08kpRf5x41ZYPuODGihm57HS6TUVaIHWnhkPhNiKIHydHf8d2n9D2a+OxW3uZdNgpqYnlRnrbdV7DT6aPeUaE60jf0HjFFeuz4CTYgfaCxAob9AxmcEYzwjC1FWV1jj50nhsbjc88aTH13NQ6IK6sPIT6BmkAMP6eFI86OFlWWiH6IzMOKW6F9CC4Nhi9SavrH+u0P23/l9YDXOtwazbl8LVCyWC9lEQY862g6z3zcKhnAuRXe6ByPwgm29PypcX9IipepVYuTHAWrKCiHGC/ZEtOVzjY02RITEsOA75TSlIXweK9uJDowCNdb6yWbYJ5L+Bm1LaajM/KQ5WjYH1UEBWynLMcXeuCGm1XPqvXcG0vIU7Yvka9AlbAnTzmcQNyq8Vdz0z7vuq1l9/29iRALUkv18iWY0CdvE2xFhuR5gbpjrEAdIyy8yBcoG8OoA/7wruvV+9oWMy25FkbqbTbzpRTfCGUfzOh6vmLFty6tJL3KHnUUKG+tL0bfIYNA+GSJ77zB16AB/y67xh2BGJnO6GyGrvegZWZ4GruowcWnUIbWAtEulHkEFelUK1ykAT7f5XKV1gSCUdBbY6hfRJWsIyZ+yjt3c44Wap3oECe2ZSFkIoFrPbAhGhx6Z/aEg7TQD3cv4d79GxTrJaxQnvgeOpujC3mQeQeTWfqj9v2mNbm+tjqpD/sGpvyccSEGpsZ7e2Ss1TnRVnZZrSreZMro1yy/HjHpyVaJP0XIBUiJabEpalgTkZoQjbh/KyVJZUCAhmOW9C52J+t9rLzEPKqH90RCN1RArPFwg7SzoPojmup"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"crt.pem\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lSQUpSUC9YNFRHWDlDTVAwaW90ZDZPSWt3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWGJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDNXpkbU13SGhjTk1Ua3hNakExTWpNeApOakE0V2hjTk1qQXhNakEwTWpNeE5qQTRXakFpTVNBd0hnWURWUVFERXhkc2FXNXJaWEprTFhSaGNDNXNhVzVyClpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlhicmNiUys0UGQKcnF2eW5DMEhhbjQ0emMvVHBDQUxqb0hQWFFwVUdFYStmZldCS3M5NDdyQ2xYR2RjN2dncmZvTkNXZWNOK21OMQpRcFRNUGlqV1lkQjVCWk92RlhSNVRXK3VjM21OLzBMMTdzd2pZeTF1dlBzc1ZKVk9SNktkRWJNZWlCeGliODRFClhNZFBXSGN5Q1JiWkxMcm5aTkwxVUtDRy9TK1p4NWxPcThXemFWci81emhtZlpuLzZwdDBNcjlaVHdFOWczY1IKNHRRYnZ0V25PMmF3Y1BKNzJIdTkxQ25oZk9TTXlqanZUcmpkbkFPSk9Kc1V5dDZFMC9VZUJLY1lteG1LcVkwSApuYk5MdUlBUEhsaEMrdnBsSi9MekVyemV1cDM5azZ1NUV5dEpmWjluMVhZT1hBSVl6TG1WSWlsMzVCOXJBOE5OCm15TUZrYjM1UVcwQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFDUUIxOVdhOVBxMXpxNVFkQzU2ZllLenBqZ01HZzYvc21TekpyMm4yLzgvdmNFbWlMTEkzbFJUU0hECklOcERIb04yZGlzb3NRSEViVmczejJzSit0bGFUMUJ6aFN1Q2FyNjNuQ0NkSFdBaDA0ZnhuVWFDV09SbW1wVzUKRGRMZXdWbVJvY25lenowNUVZU3BPZThZQU5udmIzSEVONCtkRHlHQkU3YXo2ZktnaTFxL1JsVjJHUElQb0ZzTworbWY0WG9HczZXZU85UFNBQlRoSjRHNUJSbTJoczlPUjRyaXJDb0Z3enRUVWoxV0p1TWdRemJ2UW04d3JhcmlIClczTzgyT2pMSWtWR0t5d1pwVXN2N3g3eTJDZ3dzemxiNllGS1B0VW5XNWF4cVZkc3pPb1B2UXU4cHNENnl0NVoKN0poWVRPNTBBd0c4TGVuSDF6NTNNcVRFcGdXRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"key.pem\":\"LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWR1dHh0TDdnOTJ1cS9LY0xRZHFmampOejlPa0lBdU9nYzlkQ2xRWVJyNTk5WUVxCnozanVzS1ZjWjF6dUNDdCtnMEpaNXczNlkzVkNsTXcrS05aaDBIa0ZrNjhWZEhsTmI2NXplWTMvUXZYdXpDTmoKTFc2OCt5eFVsVTVIb3AwUnN4NklIR0p2emdSY3gwOVlkeklKRnRrc3V1ZGswdlZRb0liOUw1bkhtVTZyeGJOcApXdi9uT0daOW1mL3FtM1F5djFsUEFUMkRkeEhpMUJ1KzFhYzdackJ3OG52WWU3M1VLZUY4NUl6S09POU91TjJjCkE0azRteFRLM29UVDlSNEVweGliR1lxcGpRZWRzMHU0Z0E4ZVdFTDYrbVVuOHZNU3ZONjZuZjJUcTdrVEswbDkKbjJmVmRnNWNBaGpNdVpVaUtYZmtIMnNEdzAyYkl3V1J2ZmxCYlFJREFRQUJBb0lCQVFDRUhhV2FpZWJWelJMRwpxU2V3YmI5dFlOeE13dnZHekR6cWx0ZHN0UTBXVDBKemM2dWw1cGpXeWlGdXZhdFRvc01TaGVBU2JNRTl4a2d1CnNvcklJY0RsMEk0UWNYNTRxU09jbGhKQ2l1V2lVVnFJQkdpVnZhN0VJTnZVTFRyMkM4RE9mbE1wN2VvU1JRR28KSTYyTVhYM2QvcWF5aEpiMStKVXB4cHNOV0J4RjZZRzZLcitQeTZmcEViejY5WndFQmRnWkxjTVlTWU9rbyt5aApOakNwWmZvZGN3ZmcrR0RVTUY0ZWMwMkp0SUV5aXRoTjJrWTRuSDUwYWtGeEI4OWp1UTVodmRkak9TdEhqOTM2CnN4L3hLMlhzaDh6MStUckRNY2k3WlBxOEhocXRkZ2JjSnhKcEtXZXNZQjRwemVTUWI1a0VFeTR6QkdneGY5LzQKYzFITyt1UWhBb0dCQU9BL08rREl3eVBvTHBvVHZHUE1RRTdHYVpyV0c4OGQwMzhiWHc3ZGk4RGpIT3ZkQ3dGdApHVzdvZ1pmbjRmdG8xNmNSNmc0OVQwQ2lYU01YOU1ZdHRuZmlVVXJ3TVUvOVcvdy9haTQvenFlanN3cWthYjBjCmp3Z0ZBTHNXNzZHbUlkY3h3WlhxU25yNjlLSy91T1FoVGR0Q3ltSTA0a2lDdS84TUg0L204a3NaQW9HQkFQUWoKMjBGb2w3UFMzZUZiaXErZE9GcVN0b2VDT2pUbEFxcThEU3lDaWhpMDg2Y205RE8zcVZneGMxZ2FrWWtPbWZyRgpKeHg1RCtoU21kWkJHNFkzWlJ2SXNPd3BuNnZZSm5icUJRVlFZdERvOGFIMUNWRW1rMm9Vc24wWWdwczZnTzVUCnNwRzdZQ2c3dFEwdlo3Mk83UGdCS2VSanV0aXE0Sk10b2xzSDBVZDFBb0dCQUwveFlDOW5xS0J6ZkhBbHRIczMKdVZPMFFYQm5GQ2FVUVJQck9kSmZqOS9xaGpiZFhTNDdWQ202bWpLTUtNSXBXMjJGeC9Hb1NNM3FMQTU5MHVaTworb0JqRjNJdFpnZ3h0U3FVblM0NUw0b09kSklIYVBxV0YxZWw4Sm96WjZuVnFlR29sU3JkQUNPRDZ5SGpPVDhMCndyaUswdkI4azdPOU0yMTcwd2c1aGVzQkFvR0FLek9SSCtEdlAwM29IM0hBZDlUOVhPR3JWUTFSV1h6UTNQK0wKNFQxMFRHencxTHBLNmovc3dvTjFvcmlJMmxUd0lIVDB0OUFnWlg4QVkrNS9mVitlRDYyU3lTZVFicXRBR3pqTQpES1d0NXNQaHhrUURFdzRkZGQ4VnVwYzB2VjA3NVhDQUg5T2xiMWtwYjV6YzRhbEIrNXpSR2U0ZjZTbEx0aCtVCkpFR2M0ZVVDZ1lBeTBIK2I1RUFmYUJQUGtMRVllWnNBbUhSY1llb1pRYUpTSHBjdkRzekNVa0IxYklpckgzR0UKd1pIL1NnaXBFK3VobUVVdEhqQlorblRPWTQwY3RMVWFqdjJlR3ZpWGwzcFRKZFE2b3BsRW80ZmM2aFkxQ09LRgpNVC8yenZEaVp5QkFMN1ppMEh6YzJvSTFBdldod0NsSzJpZEF0YnFCTFI4cDI3TW1vb2I3RUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\"},\"kind\":\"Secret\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"tap\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-tap-tls\",\"namespace\":\"linkerd\"},\"type\":\"Opaque\"}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T23:18:27Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "tap",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-tap-tls",
                        "namespace": "linkerd",
                        "resourceVersion": "56545",
                        "selfLink": "/api/v1/namespaces/linkerd/secrets/linkerd-tap-tls",
                        "uid": "2a15640a-2b3f-4834-bcad-63c6bee7de16"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null,
                    "type": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-grafana",
                "custom": true,
                "id": "linkerd/linkerd-grafana",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "grafana",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-grafana",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "grafana",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-grafana"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "grafana",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-grafana"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "GF_PATHS_DATA",
                                                "value": "/data"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/grafana:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/api/health",
                                                "port": 3000
                                            },
                                            "initialDelaySeconds": 30
                                        },
                                        "name": "grafana",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/api/health",
                                                "port": 3000
                                            }
                                        },
                                        "securityContext": {
                                            "runAsUser": 472
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/data",
                                                "name": "data"
                                            },
                                            {
                                                "mountPath": "/etc/grafana",
                                                "name": "grafana-config",
                                                "readOnly": true
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 2
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "linkerd-grafana",
                                "volumes": [
                                    {
                                        "emptyDir": {},
                                        "name": "data"
                                    },
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "grafana.ini",
                                                    "path": "grafana.ini"
                                                },
                                                {
                                                    "key": "datasources.yaml",
                                                    "path": "provisioning/datasources/datasources.yaml"
                                                },
                                                {
                                                    "key": "dashboards.yaml",
                                                    "path": "provisioning/dashboards/dashboards.yaml"
                                                }
                                            ],
                                            "name": "linkerd-grafana-config"
                                        },
                                        "name": "grafana-config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "grafana",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-grafana",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "linkerd.io/control-plane-component": "grafana",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-grafana"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                        "linkerd.io/identity-mode": "default",
                                        "linkerd.io/proxy-version": "stable-2.6.0"
                                    },
                                    "labels": {
                                        "linkerd.io/control-plane-component": "grafana",
                                        "linkerd.io/control-plane-ns": "linkerd",
                                        "linkerd.io/proxy-deployment": "linkerd-grafana"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "GF_PATHS_DATA",
                                                    "value": "/data"
                                                }
                                            ],
                                            "image": "gcr.io/linkerd-io/grafana:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/api/health",
                                                    "port": 3000
                                                },
                                                "initialDelaySeconds": 30
                                            },
                                            "name": "grafana",
                                            "ports": [
                                                {
                                                    "containerPort": 3000,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/api/health",
                                                    "port": 3000
                                                }
                                            },
                                            "securityContext": {
                                                "runAsUser": 472
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/data",
                                                    "name": "data"
                                                },
                                                {
                                                    "mountPath": "/etc/grafana",
                                                    "name": "grafana-config",
                                                    "readOnly": true
                                                }
                                            ]
                                        },
                                        {
                                            "env": [
                                                {
                                                    "name": "LINKERD2_PROXY_LOG",
                                                    "value": "warn,linkerd2_proxy=info"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                    "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4190"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4191"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                    "value": "127.0.0.1:4140"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4143"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "_pod_ns",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                    "value": "ns:$(_pod_ns)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                    "value": "/var/run/linkerd/identity/end-entity"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                    "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                    "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                    "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                                },
                                                {
                                                    "name": "_pod_sa",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.serviceAccountName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "_l5d_ns",
                                                    "value": "linkerd"
                                                },
                                                {
                                                    "name": "_l5d_trustdomain",
                                                    "value": "cluster.local"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                    "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                    "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                    "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                    "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                }
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/metrics",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "linkerd-proxy",
                                            "ports": [
                                                {
                                                    "containerPort": 4143,
                                                    "name": "linkerd-proxy"
                                                },
                                                {
                                                    "containerPort": 4191,
                                                    "name": "linkerd-admin"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 2
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsUser": 2102
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/identity/end-entity",
                                                    "name": "linkerd-identity-end-entity"
                                                }
                                            ]
                                        }
                                    ],
                                    "initContainers": [
                                        {
                                            "args": [
                                                "--incoming-proxy-port",
                                                "4143",
                                                "--outgoing-proxy-port",
                                                "4140",
                                                "--proxy-uid",
                                                "2102",
                                                "--inbound-ports-to-ignore",
                                                "4190,4191",
                                                "--outbound-ports-to-ignore",
                                                "443"
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "linkerd-init",
                                            "resources": {
                                                "limits": {
                                                    "cpu": "100m",
                                                    "memory": "50Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "10Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "add": [
                                                        "NET_ADMIN",
                                                        "NET_RAW"
                                                    ]
                                                },
                                                "privileged": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsNonRoot": false,
                                                "runAsUser": 0
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError"
                                        }
                                    ],
                                    "nodeSelector": {
                                        "beta.kubernetes.io/os": "linux"
                                    },
                                    "serviceAccountName": "linkerd-grafana",
                                    "volumes": [
                                        {
                                            "emptyDir": {},
                                            "name": "data"
                                        },
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "grafana.ini",
                                                        "path": "grafana.ini"
                                                    },
                                                    {
                                                        "key": "datasources.yaml",
                                                        "path": "provisioning/datasources/datasources.yaml"
                                                    },
                                                    {
                                                        "key": "dashboards.yaml",
                                                        "path": "provisioning/dashboards/dashboards.yaml"
                                                    }
                                                ],
                                                "name": "linkerd-grafana-config"
                                            },
                                            "name": "grafana-config"
                                        },
                                        {
                                            "emptyDir": {
                                                "medium": "Memory"
                                            },
                                            "name": "linkerd-identity-end-entity"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"grafana\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-grafana\",\"namespace\":\"linkerd\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"linkerd.io/control-plane-component\":\"grafana\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-grafana\"}},\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\",\"linkerd.io/identity-mode\":\"default\",\"linkerd.io/proxy-version\":\"stable-2.6.0\"},\"labels\":{\"linkerd.io/control-plane-component\":\"grafana\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-grafana\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GF_PATHS_DATA\",\"value\":\"/data\"}],\"image\":\"gcr.io/linkerd-io/grafana:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/api/health\",\"port\":3000},\"initialDelaySeconds\":30},\"name\":\"grafana\",\"ports\":[{\"containerPort\":3000,\"name\":\"http\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/api/health\",\"port\":3000}},\"securityContext\":{\"runAsUser\":472},\"volumeMounts\":[{\"mountPath\":\"/data\",\"name\":\"data\"},{\"mountPath\":\"/etc/grafana\",\"name\":\"grafana-config\",\"readOnly\":true}]},{\"env\":[{\"name\":\"LINKERD2_PROXY_LOG\",\"value\":\"warn,linkerd2_proxy=info\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_ADDR\",\"value\":\"linkerd-dst.linkerd.svc.cluster.local:8086\"},{\"name\":\"LINKERD2_PROXY_CONTROL_LISTEN_ADDR\",\"value\":\"0.0.0.0:4190\"},{\"name\":\"LINKERD2_PROXY_ADMIN_LISTEN_ADDR\",\"value\":\"0.0.0.0:4191\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR\",\"value\":\"127.0.0.1:4140\"},{\"name\":\"LINKERD2_PROXY_INBOUND_LISTEN_ADDR\",\"value\":\"0.0.0.0:4143\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_GET_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"_pod_ns\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LINKERD2_PROXY_DESTINATION_CONTEXT\",\"value\":\"ns:$(_pod_ns)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_DIR\",\"value\":\"/var/run/linkerd/identity/end-entity\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS\",\"value\":\"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\\n\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TOKEN_FILE\",\"value\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_ADDR\",\"value\":\"linkerd-identity.linkerd.svc.cluster.local:8080\"},{\"name\":\"_pod_sa\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"_l5d_ns\",\"value\":\"linkerd\"},{\"name\":\"_l5d_trustdomain\",\"value\":\"cluster.local\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_LOCAL_NAME\",\"value\":\"$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_NAME\",\"value\":\"linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_NAME\",\"value\":\"linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_TAP_SVC_NAME\",\"value\":\"linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"}],\"image\":\"gcr.io/linkerd-io/proxy:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/metrics\",\"port\":4191},\"initialDelaySeconds\":10},\"name\":\"linkerd-proxy\",\"ports\":[{\"containerPort\":4143,\"name\":\"linkerd-proxy\"},{\"containerPort\":4191,\"name\":\"linkerd-admin\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":4191},\"initialDelaySeconds\":2},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsUser\":2102},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/identity/end-entity\",\"name\":\"linkerd-identity-end-entity\"}]}],\"initContainers\":[{\"args\":[\"--incoming-proxy-port\",\"4143\",\"--outgoing-proxy-port\",\"4140\",\"--proxy-uid\",\"2102\",\"--inbound-ports-to-ignore\",\"4190,4191\",\"--outbound-ports-to-ignore\",\"443\"],\"image\":\"gcr.io/linkerd-io/proxy-init:v1.1.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"linkerd-init\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":false,\"runAsUser\":0},\"terminationMessagePolicy\":\"FallbackToLogsOnError\"}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"linkerd-grafana\",\"volumes\":[{\"emptyDir\":{},\"name\":\"data\"},{\"configMap\":{\"items\":[{\"key\":\"grafana.ini\",\"path\":\"grafana.ini\"},{\"key\":\"datasources.yaml\",\"path\":\"provisioning/datasources/datasources.yaml\"},{\"key\":\"dashboards.yaml\",\"path\":\"provisioning/dashboards/dashboards.yaml\"}],\"name\":\"linkerd-grafana-config\"},\"name\":\"grafana-config\"},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"linkerd-identity-end-entity\"}]}}}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:03:10Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "grafana",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-grafana",
                        "namespace": "linkerd",
                        "resourceVersion": "45054",
                        "selfLink": "/apis/apps/v1/namespaces/linkerd/deployments/linkerd-grafana",
                        "uid": "e008e858-1028-4948-a268-c72c21202c2c"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "grafana",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-grafana"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "grafana",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-grafana"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "GF_PATHS_DATA",
                                                "value": "/data"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/grafana:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/api/health",
                                                "port": 3000,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "grafana",
                                        "ports": [
                                            {
                                                "containerPort": 3000,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/api/health",
                                                "port": 3000,
                                                "scheme": "HTTP"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "runAsUser": 472
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/data",
                                                "name": "data"
                                            },
                                            {
                                                "mountPath": "/etc/grafana",
                                                "name": "grafana-config",
                                                "readOnly": true
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "linkerd-grafana",
                                "serviceAccountName": "linkerd-grafana",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "emptyDir": {},
                                        "name": "data"
                                    },
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "items": [
                                                {
                                                    "key": "grafana.ini",
                                                    "path": "grafana.ini"
                                                },
                                                {
                                                    "key": "datasources.yaml",
                                                    "path": "provisioning/datasources/datasources.yaml"
                                                },
                                                {
                                                    "key": "dashboards.yaml",
                                                    "path": "provisioning/dashboards/dashboards.yaml"
                                                }
                                            ],
                                            "name": "linkerd-grafana-config"
                                        },
                                        "name": "grafana-config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:03:34Z",
                                "lastUpdateTime": "2019-12-05T20:03:34Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T20:03:10Z",
                                "lastUpdateTime": "2019-12-05T20:03:34Z",
                                "message": "ReplicaSet \"linkerd-grafana-8684dc645f\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-grafana",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta1:Deployment::linkerd/linkerd-grafana",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta2:Deployment::linkerd/linkerd-grafana",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Deployment::linkerd/linkerd-grafana"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::linkerd/linkerd-sp-validator",
                "custom": true,
                "id": "linkerd/linkerd-sp-validator",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-sp-validator",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "sp-validator",
                                "port": 443,
                                "targetPort": "sp-validator"
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "sp-validator"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "sp-validator",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-sp-validator",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "sp-validator",
                                    "port": 443,
                                    "targetPort": "sp-validator"
                                }
                            ],
                            "selector": {
                                "linkerd.io/control-plane-component": "sp-validator"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"sp-validator\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-sp-validator\",\"namespace\":\"linkerd\"},\"spec\":{\"ports\":[{\"name\":\"sp-validator\",\"port\":443,\"targetPort\":\"sp-validator\"}],\"selector\":{\"linkerd.io/control-plane-component\":\"sp-validator\"},\"type\":\"ClusterIP\"}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:02:27Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "sp-validator",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-sp-validator",
                        "namespace": "linkerd",
                        "resourceVersion": "44602",
                        "selfLink": "/api/v1/namespaces/linkerd/services/linkerd-sp-validator",
                        "uid": "33c9a096-4244-4468-9069-7d2f7896b43b"
                    },
                    "spec": {
                        "clusterIP": "10.245.131.248",
                        "ports": [
                            {
                                "name": "sp-validator",
                                "port": 443,
                                "protocol": "TCP",
                                "targetPort": "sp-validator"
                            }
                        ],
                        "selector": {
                            "linkerd.io/control-plane-component": "sp-validator"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-controller",
                "custom": true,
                "id": "linkerd/linkerd-controller",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-controller",
                        "namespace": "linkerd"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "controller",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-controller"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "controller",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-controller"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "public-api",
                                            "-prometheus-url=http://linkerd-prometheus.linkerd.svc.cluster.local:9090",
                                            "-destination-addr=linkerd-dst.linkerd.svc.cluster.local:8086",
                                            "-controller-namespace=linkerd",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9995
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "public-api",
                                        "ports": [
                                            {
                                                "containerPort": 8085,
                                                "name": "http"
                                            },
                                            {
                                                "containerPort": 9995,
                                                "name": "admin-http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9995
                                            }
                                        },
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            }
                                        ]
                                    },
                                    {
                                        "args": [
                                            "destination",
                                            "-addr=:8086",
                                            "-controller-namespace=linkerd",
                                            "-enable-h2-upgrade=true",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9996
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "destination",
                                        "ports": [
                                            {
                                                "containerPort": 8086,
                                                "name": "grpc"
                                            },
                                            {
                                                "containerPort": 9996,
                                                "name": "admin-http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9996
                                            }
                                        },
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 10
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191
                                            },
                                            "initialDelaySeconds": 2
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "serviceAccountName": "linkerd-controller",
                                "volumes": [
                                    {
                                        "configMap": {
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "linkerd.io/control-plane-component": "controller",
                                "linkerd.io/control-plane-ns": "linkerd"
                            },
                            "name": "linkerd-controller",
                            "namespace": "linkerd"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "linkerd.io/control-plane-component": "controller",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-controller"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                        "linkerd.io/identity-mode": "default",
                                        "linkerd.io/proxy-version": "stable-2.6.0"
                                    },
                                    "labels": {
                                        "linkerd.io/control-plane-component": "controller",
                                        "linkerd.io/control-plane-ns": "linkerd",
                                        "linkerd.io/proxy-deployment": "linkerd-controller"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "public-api",
                                                "-prometheus-url=http://linkerd-prometheus.linkerd.svc.cluster.local:9090",
                                                "-destination-addr=linkerd-dst.linkerd.svc.cluster.local:8086",
                                                "-controller-namespace=linkerd",
                                                "-log-level=info"
                                            ],
                                            "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/ping",
                                                    "port": 9995
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "public-api",
                                            "ports": [
                                                {
                                                    "containerPort": 8085,
                                                    "name": "http"
                                                },
                                                {
                                                    "containerPort": 9995,
                                                    "name": "admin-http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 7,
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 9995
                                                }
                                            },
                                            "securityContext": {
                                                "runAsUser": 2103
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/config",
                                                    "name": "config"
                                                }
                                            ]
                                        },
                                        {
                                            "args": [
                                                "destination",
                                                "-addr=:8086",
                                                "-controller-namespace=linkerd",
                                                "-enable-h2-upgrade=true",
                                                "-log-level=info"
                                            ],
                                            "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/ping",
                                                    "port": 9996
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "destination",
                                            "ports": [
                                                {
                                                    "containerPort": 8086,
                                                    "name": "grpc"
                                                },
                                                {
                                                    "containerPort": 9996,
                                                    "name": "admin-http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 7,
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 9996
                                                }
                                            },
                                            "securityContext": {
                                                "runAsUser": 2103
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/config",
                                                    "name": "config"
                                                }
                                            ]
                                        },
                                        {
                                            "env": [
                                                {
                                                    "name": "LINKERD2_PROXY_LOG",
                                                    "value": "warn,linkerd2_proxy=info"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                    "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4190"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4191"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                    "value": "127.0.0.1:4140"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                    "value": "0.0.0.0:4143"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                    "value": "svc.cluster.local."
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                    "value": "10000ms"
                                                },
                                                {
                                                    "name": "_pod_ns",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                    "value": "ns:$(_pod_ns)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                    "value": "/var/run/linkerd/identity/end-entity"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                    "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                    "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                    "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                                },
                                                {
                                                    "name": "_pod_sa",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.serviceAccountName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "_l5d_ns",
                                                    "value": "linkerd"
                                                },
                                                {
                                                    "name": "_l5d_trustdomain",
                                                    "value": "cluster.local"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                    "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                    "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                    "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                },
                                                {
                                                    "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                    "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                                }
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/metrics",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 10
                                            },
                                            "name": "linkerd-proxy",
                                            "ports": [
                                                {
                                                    "containerPort": 4143,
                                                    "name": "linkerd-proxy"
                                                },
                                                {
                                                    "containerPort": 4191,
                                                    "name": "linkerd-admin"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 4191
                                                },
                                                "initialDelaySeconds": 2
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsUser": 2102
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError",
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/run/linkerd/identity/end-entity",
                                                    "name": "linkerd-identity-end-entity"
                                                }
                                            ]
                                        }
                                    ],
                                    "initContainers": [
                                        {
                                            "args": [
                                                "--incoming-proxy-port",
                                                "4143",
                                                "--outgoing-proxy-port",
                                                "4140",
                                                "--proxy-uid",
                                                "2102",
                                                "--inbound-ports-to-ignore",
                                                "4190,4191",
                                                "--outbound-ports-to-ignore",
                                                "443"
                                            ],
                                            "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "name": "linkerd-init",
                                            "resources": {
                                                "limits": {
                                                    "cpu": "100m",
                                                    "memory": "50Mi"
                                                },
                                                "requests": {
                                                    "cpu": "10m",
                                                    "memory": "10Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "add": [
                                                        "NET_ADMIN",
                                                        "NET_RAW"
                                                    ]
                                                },
                                                "privileged": false,
                                                "readOnlyRootFilesystem": true,
                                                "runAsNonRoot": false,
                                                "runAsUser": 0
                                            },
                                            "terminationMessagePolicy": "FallbackToLogsOnError"
                                        }
                                    ],
                                    "nodeSelector": {
                                        "beta.kubernetes.io/os": "linux"
                                    },
                                    "serviceAccountName": "linkerd-controller",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "name": "linkerd-config"
                                            },
                                            "name": "config"
                                        },
                                        {
                                            "emptyDir": {
                                                "medium": "Memory"
                                            },
                                            "name": "linkerd-identity-end-entity"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"linkerd.io/control-plane-component\":\"controller\",\"linkerd.io/control-plane-ns\":\"linkerd\"},\"name\":\"linkerd-controller\",\"namespace\":\"linkerd\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"linkerd.io/control-plane-component\":\"controller\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-controller\"}},\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/created-by\":\"linkerd/helm stable-2.6.0\",\"linkerd.io/identity-mode\":\"default\",\"linkerd.io/proxy-version\":\"stable-2.6.0\"},\"labels\":{\"linkerd.io/control-plane-component\":\"controller\",\"linkerd.io/control-plane-ns\":\"linkerd\",\"linkerd.io/proxy-deployment\":\"linkerd-controller\"}},\"spec\":{\"containers\":[{\"args\":[\"public-api\",\"-prometheus-url=http://linkerd-prometheus.linkerd.svc.cluster.local:9090\",\"-destination-addr=linkerd-dst.linkerd.svc.cluster.local:8086\",\"-controller-namespace=linkerd\",\"-log-level=info\"],\"image\":\"gcr.io/linkerd-io/controller:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ping\",\"port\":9995},\"initialDelaySeconds\":10},\"name\":\"public-api\",\"ports\":[{\"containerPort\":8085,\"name\":\"http\"},{\"containerPort\":9995,\"name\":\"admin-http\"}],\"readinessProbe\":{\"failureThreshold\":7,\"httpGet\":{\"path\":\"/ready\",\"port\":9995}},\"securityContext\":{\"runAsUser\":2103},\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/config\",\"name\":\"config\"}]},{\"args\":[\"destination\",\"-addr=:8086\",\"-controller-namespace=linkerd\",\"-enable-h2-upgrade=true\",\"-log-level=info\"],\"image\":\"gcr.io/linkerd-io/controller:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ping\",\"port\":9996},\"initialDelaySeconds\":10},\"name\":\"destination\",\"ports\":[{\"containerPort\":8086,\"name\":\"grpc\"},{\"containerPort\":9996,\"name\":\"admin-http\"}],\"readinessProbe\":{\"failureThreshold\":7,\"httpGet\":{\"path\":\"/ready\",\"port\":9996}},\"securityContext\":{\"runAsUser\":2103},\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/config\",\"name\":\"config\"}]},{\"env\":[{\"name\":\"LINKERD2_PROXY_LOG\",\"value\":\"warn,linkerd2_proxy=info\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_ADDR\",\"value\":\"linkerd-dst.linkerd.svc.cluster.local:8086\"},{\"name\":\"LINKERD2_PROXY_CONTROL_LISTEN_ADDR\",\"value\":\"0.0.0.0:4190\"},{\"name\":\"LINKERD2_PROXY_ADMIN_LISTEN_ADDR\",\"value\":\"0.0.0.0:4191\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR\",\"value\":\"127.0.0.1:4140\"},{\"name\":\"LINKERD2_PROXY_INBOUND_LISTEN_ADDR\",\"value\":\"0.0.0.0:4143\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_GET_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES\",\"value\":\"svc.cluster.local.\"},{\"name\":\"LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE\",\"value\":\"10000ms\"},{\"name\":\"_pod_ns\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LINKERD2_PROXY_DESTINATION_CONTEXT\",\"value\":\"ns:$(_pod_ns)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_DIR\",\"value\":\"/var/run/linkerd/identity/end-entity\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS\",\"value\":\"-----BEGIN CERTIFICATE-----\\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\\n-----END CERTIFICATE-----\\n\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_TOKEN_FILE\",\"value\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_ADDR\",\"value\":\"linkerd-identity.linkerd.svc.cluster.local:8080\"},{\"name\":\"_pod_sa\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"_l5d_ns\",\"value\":\"linkerd\"},{\"name\":\"_l5d_trustdomain\",\"value\":\"cluster.local\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_LOCAL_NAME\",\"value\":\"$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_IDENTITY_SVC_NAME\",\"value\":\"linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_DESTINATION_SVC_NAME\",\"value\":\"linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"},{\"name\":\"LINKERD2_PROXY_TAP_SVC_NAME\",\"value\":\"linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)\"}],\"image\":\"gcr.io/linkerd-io/proxy:stable-2.6.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/metrics\",\"port\":4191},\"initialDelaySeconds\":10},\"name\":\"linkerd-proxy\",\"ports\":[{\"containerPort\":4143,\"name\":\"linkerd-proxy\"},{\"containerPort\":4191,\"name\":\"linkerd-admin\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":4191},\"initialDelaySeconds\":2},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsUser\":2102},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/var/run/linkerd/identity/end-entity\",\"name\":\"linkerd-identity-end-entity\"}]}],\"initContainers\":[{\"args\":[\"--incoming-proxy-port\",\"4143\",\"--outgoing-proxy-port\",\"4140\",\"--proxy-uid\",\"2102\",\"--inbound-ports-to-ignore\",\"4190,4191\",\"--outbound-ports-to-ignore\",\"443\"],\"image\":\"gcr.io/linkerd-io/proxy-init:v1.1.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"linkerd-init\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":false,\"runAsUser\":0},\"terminationMessagePolicy\":\"FallbackToLogsOnError\"}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"linkerd-controller\",\"volumes\":[{\"configMap\":{\"name\":\"linkerd-config\"},\"name\":\"config\"},{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"linkerd-identity-end-entity\"}]}}}}\n",
                            "linkerd.io/created-by": "linkerd/helm stable-2.6.0"
                        },
                        "creationTimestamp": "2019-12-05T20:03:10Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "linkerd.io/control-plane-component": "controller",
                            "linkerd.io/control-plane-ns": "linkerd"
                        },
                        "name": "linkerd-controller",
                        "namespace": "linkerd",
                        "resourceVersion": "45063",
                        "selfLink": "/apis/apps/v1/namespaces/linkerd/deployments/linkerd-controller",
                        "uid": "ed9a2c84-7448-4854-b8c8-fa71d6ad4702"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "linkerd.io/control-plane-component": "controller",
                                "linkerd.io/control-plane-ns": "linkerd",
                                "linkerd.io/proxy-deployment": "linkerd-controller"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/created-by": "linkerd/helm stable-2.6.0",
                                    "linkerd.io/identity-mode": "default",
                                    "linkerd.io/proxy-version": "stable-2.6.0"
                                },
                                "labels": {
                                    "linkerd.io/control-plane-component": "controller",
                                    "linkerd.io/control-plane-ns": "linkerd",
                                    "linkerd.io/proxy-deployment": "linkerd-controller"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "public-api",
                                            "-prometheus-url=http://linkerd-prometheus.linkerd.svc.cluster.local:9090",
                                            "-destination-addr=linkerd-dst.linkerd.svc.cluster.local:8086",
                                            "-controller-namespace=linkerd",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9995,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "public-api",
                                        "ports": [
                                            {
                                                "containerPort": 8085,
                                                "name": "http",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9995,
                                                "name": "admin-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9995,
                                                "scheme": "HTTP"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            }
                                        ]
                                    },
                                    {
                                        "args": [
                                            "destination",
                                            "-addr=:8086",
                                            "-controller-namespace=linkerd",
                                            "-enable-h2-upgrade=true",
                                            "-log-level=info"
                                        ],
                                        "image": "gcr.io/linkerd-io/controller:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": 9996,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "destination",
                                        "ports": [
                                            {
                                                "containerPort": 8086,
                                                "name": "grpc",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 9996,
                                                "name": "admin-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 7,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 9996,
                                                "scheme": "HTTP"
                                            },
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "runAsUser": 2103
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/config",
                                                "name": "config"
                                            }
                                        ]
                                    },
                                    {
                                        "env": [
                                            {
                                                "name": "LINKERD2_PROXY_LOG",
                                                "value": "warn,linkerd2_proxy=info"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
                                                "value": "linkerd-dst.linkerd.svc.cluster.local:8086"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
                                                "value": "0.0.0.0:4190"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
                                                "value": "0.0.0.0:4191"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
                                                "value": "127.0.0.1:4140"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
                                                "value": "0.0.0.0:4143"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_GET_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
                                                "value": "svc.cluster.local."
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
                                                "value": "10000ms"
                                            },
                                            {
                                                "name": "_pod_ns",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
                                                "value": "ns:$(_pod_ns)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_DIR",
                                                "value": "/var/run/linkerd/identity/end-entity"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS",
                                                "value": "-----BEGIN CERTIFICATE-----\nMIIBwTCCAWagAwIBAgIQAVquzbXQd28sdhU+7nmpVjAKBggqhkjOPQQDAjApMScw\nJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMTkxMjA1\nMTkzNjEwWhcNMjkxMjAyMTkzNjEwWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5r\nZXJkLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARq6t2p\nAWQLTmUeADoogB4aulslU6snMPHr4wGBv1GANFWIcjNyvjdOAIPKZBKu3jQCDUZC\nXwrux/N1h/D6nYD+o3AwbjAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB\n/wIBATAdBgNVHQ4EFgQUNsp9UPryMjBbhzJYtxqzCqcN2qswKQYDVR0RBCIwIIIe\naWRlbnRpdHkubGlua2VyZC5jbHVzdGVyLmxvY2FsMAoGCCqGSM49BAMCA0kAMEYC\nIQD6CqtYFKcf/l3FOJvSI91H7wENMCVwlE5KLNCFhpflsAIhAKBO/7+HQbWLkxe7\nhYxbpfvAR6l7kKIL9CHwhgwfxPpx\n-----END CERTIFICATE-----\n"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_TOKEN_FILE",
                                                "value": "/var/run/secrets/kubernetes.io/serviceaccount/token"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_ADDR",
                                                "value": "linkerd-identity.linkerd.svc.cluster.local:8080"
                                            },
                                            {
                                                "name": "_pod_sa",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.serviceAccountName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "_l5d_ns",
                                                "value": "linkerd"
                                            },
                                            {
                                                "name": "_l5d_trustdomain",
                                                "value": "cluster.local"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_LOCAL_NAME",
                                                "value": "$(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_IDENTITY_SVC_NAME",
                                                "value": "linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_DESTINATION_SVC_NAME",
                                                "value": "linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            },
                                            {
                                                "name": "LINKERD2_PROXY_TAP_SVC_NAME",
                                                "value": "linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)"
                                            }
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy:stable-2.6.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/metrics",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "linkerd-proxy",
                                        "ports": [
                                            {
                                                "containerPort": 4143,
                                                "name": "linkerd-proxy",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4191,
                                                "name": "linkerd-admin",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 4191,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsUser": 2102
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/run/linkerd/identity/end-entity",
                                                "name": "linkerd-identity-end-entity"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "initContainers": [
                                    {
                                        "args": [
                                            "--incoming-proxy-port",
                                            "4143",
                                            "--outgoing-proxy-port",
                                            "4140",
                                            "--proxy-uid",
                                            "2102",
                                            "--inbound-ports-to-ignore",
                                            "4190,4191",
                                            "--outbound-ports-to-ignore",
                                            "443"
                                        ],
                                        "image": "gcr.io/linkerd-io/proxy-init:v1.1.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "linkerd-init",
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "50Mi"
                                            },
                                            "requests": {
                                                "cpu": "10m",
                                                "memory": "10Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "add": [
                                                    "NET_ADMIN",
                                                    "NET_RAW"
                                                ]
                                            },
                                            "privileged": false,
                                            "readOnlyRootFilesystem": true,
                                            "runAsNonRoot": false,
                                            "runAsUser": 0
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "FallbackToLogsOnError"
                                    }
                                ],
                                "nodeSelector": {
                                    "beta.kubernetes.io/os": "linux"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "linkerd-controller",
                                "serviceAccountName": "linkerd-controller",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "linkerd-config"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "emptyDir": {
                                            "medium": "Memory"
                                        },
                                        "name": "linkerd-identity-end-entity"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T20:03:34Z",
                                "lastUpdateTime": "2019-12-05T20:03:34Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T20:03:10Z",
                                "lastUpdateTime": "2019-12-05T20:03:34Z",
                                "message": "ReplicaSet \"linkerd-controller-5b8f9d9b86\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::linkerd",
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::linkerd/linkerd-controller",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta1:Deployment::linkerd/linkerd-controller",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta2:Deployment::linkerd/linkerd-controller",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Deployment::linkerd/linkerd-controller"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::external-dns/external-dns",
                "custom": true,
                "id": "external-dns/external-dns",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "namespace": "external-dns"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "external-dns",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "external-dns",
                                "helm.sh/chart": "external-dns-2.12.0"
                            },
                            "name": "external-dns",
                            "namespace": "external-dns"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"external-dns\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"external-dns\",\"helm.sh/chart\":\"external-dns-2.12.0\"},\"name\":\"external-dns\",\"namespace\":\"external-dns\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T23:26:56Z",
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "namespace": "external-dns",
                        "resourceVersion": "57091",
                        "selfLink": "/api/v1/namespaces/external-dns/serviceaccounts/external-dns",
                        "uid": "2124542a-396b-4c43-a8d7-4d63c337ef00"
                    },
                    "secrets": [
                        {
                            "name": "external-dns-token-t4tlw"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::external-dns",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1beta1:ClusterRole::external-dns/external-dns",
                "custom": true,
                "id": "external-dns",
                "type": "kubernetes:rbac.authorization.k8s.io/v1beta1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "namespace": "external-dns"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "services",
                                "pods",
                                "nodes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.istio.io"
                            ],
                            "resources": [
                                "gateways"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1beta1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1beta1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "external-dns",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "external-dns",
                                "helm.sh/chart": "external-dns-2.12.0"
                            },
                            "name": "external-dns",
                            "namespace": "external-dns"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "services",
                                    "pods",
                                    "nodes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions",
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.istio.io"
                                ],
                                "resources": [
                                    "gateways"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"external-dns\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"external-dns\",\"helm.sh/chart\":\"external-dns-2.12.0\"},\"name\":\"external-dns\",\"namespace\":\"external-dns\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"services\",\"pods\",\"nodes\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"networking.istio.io\"],\"resources\":[\"gateways\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T23:27:10Z",
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "resourceVersion": "57109",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1beta1/clusterroles/external-dns",
                        "uid": "794e7662-218d-4f5e-99c3-9b9992a2317c"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "services",
                                "pods",
                                "nodes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.istio.io"
                            ],
                            "resources": [
                                "gateways"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::external-dns",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                    ],
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1beta1:ClusterRoleBinding::external-dns/external-dns",
                "custom": true,
                "id": "external-dns",
                "type": "kubernetes:rbac.authorization.k8s.io/v1beta1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "namespace": "external-dns"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "external-dns"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "external-dns",
                            "namespace": "external-dns"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1beta1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1beta1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "external-dns",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "external-dns",
                                "helm.sh/chart": "external-dns-2.12.0"
                            },
                            "name": "external-dns",
                            "namespace": "external-dns"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "external-dns"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "external-dns",
                                "namespace": "external-dns"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1beta1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"external-dns\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"external-dns\",\"helm.sh/chart\":\"external-dns-2.12.0\"},\"name\":\"external-dns\",\"namespace\":\"external-dns\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"external-dns\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"external-dns\",\"namespace\":\"external-dns\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T23:26:55Z",
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "resourceVersion": "57087",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings/external-dns",
                        "uid": "a3dfac22-7b6d-4a55-aa35-a4fe8895b62c"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "external-dns"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "external-dns",
                            "namespace": "external-dns"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::external-dns",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                    ],
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Secret::external-dns/external-dns",
                "custom": true,
                "id": "external-dns/external-dns",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "digitalocean_api_token": "YzYwNzE2MjNlZTc4ZWIxODUwODIyZjJiMDE1YTNkZjI1ZmJjNzI5NDMyNjkwYTA4YTE0MTkzMTk1ODdjNjY1Mg=="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "namespace": "external-dns"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "digitalocean_api_token": "YzYwNzE2MjNlZTc4ZWIxODUwODIyZjJiMDE1YTNkZjI1ZmJjNzI5NDMyNjkwYTA4YTE0MTkzMTk1ODdjNjY1Mg=="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "external-dns",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "external-dns",
                                "helm.sh/chart": "external-dns-2.12.0"
                            },
                            "name": "external-dns",
                            "namespace": "external-dns"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "v1:GR44FTjnjPNL6l9c:QOPYtUG91IfQ0/hdz9l6vO5ycmPZuKFogEI+1RPinvhcKpJDj7xwWBe+hyv7NPQJ6sTsnHJ8yfLLnm9aVXBSot9kTqybgpUUZCNyNKCVbrgn/PmjlBd5YylfGpQaSJ05JcIfFLSe+Z3SMUlfpdF2rafHWkw8alr7eP61i16Aqk1N6AQKsQ=="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"digitalocean_api_token\":\"YzYwNzE2MjNlZTc4ZWIxODUwODIyZjJiMDE1YTNkZjI1ZmJjNzI5NDMyNjkwYTA4YTE0MTkzMTk1ODdjNjY1Mg==\"},\"kind\":\"Secret\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"external-dns\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"external-dns\",\"helm.sh/chart\":\"external-dns-2.12.0\"},\"name\":\"external-dns\",\"namespace\":\"external-dns\"},\"type\":\"Opaque\"}\n"
                        },
                        "creationTimestamp": "2019-12-05T23:35:18Z",
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "namespace": "external-dns",
                        "resourceVersion": "57672",
                        "selfLink": "/api/v1/namespaces/external-dns/secrets/external-dns",
                        "uid": "52c4fa34-fe73-4157-9917-176874d8e20f"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::external-dns",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                    ],
                    "type": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::external-dns/external-dns",
                "custom": true,
                "id": "external-dns/external-dns",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "namespace": "external-dns"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "http",
                                "port": 7979,
                                "protocol": "TCP",
                                "targetPort": "http"
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/name": "external-dns"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "external-dns",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "external-dns",
                                "helm.sh/chart": "external-dns-2.12.0"
                            },
                            "name": "external-dns",
                            "namespace": "external-dns"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 7979,
                                    "protocol": "TCP",
                                    "targetPort": "http"
                                }
                            ],
                            "selector": {
                                "app.kubernetes.io/instance": "external-dns",
                                "app.kubernetes.io/name": "external-dns"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"external-dns\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"external-dns\",\"helm.sh/chart\":\"external-dns-2.12.0\"},\"name\":\"external-dns\",\"namespace\":\"external-dns\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":7979,\"protocol\":\"TCP\",\"targetPort\":\"http\"}],\"selector\":{\"app.kubernetes.io/instance\":\"external-dns\",\"app.kubernetes.io/name\":\"external-dns\"},\"type\":\"ClusterIP\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T23:26:59Z",
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "namespace": "external-dns",
                        "resourceVersion": "57097",
                        "selfLink": "/api/v1/namespaces/external-dns/services/external-dns",
                        "uid": "911f91b9-9c29-4c71-b4a7-c1143ebbf86e"
                    },
                    "spec": {
                        "clusterIP": "10.245.243.236",
                        "ports": [
                            {
                                "name": "http",
                                "port": 7979,
                                "protocol": "TCP",
                                "targetPort": "http"
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/name": "external-dns"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::external-dns",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                    ],
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::external-dns/external-dns",
                "custom": true,
                "id": "external-dns/external-dns",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "namespace": "external-dns"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "external-dns",
                                "app.kubernetes.io/name": "external-dns"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "checksum/secret": "2876743768fdae83ec241b634d61dd1e9c1607ef4c6a931942e911df30c549f4"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "external-dns",
                                    "app.kubernetes.io/managed-by": "Tiller",
                                    "app.kubernetes.io/name": "external-dns",
                                    "helm.sh/chart": "external-dns-2.12.0"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--log-level=info",
                                            "--policy=upsert-only",
                                            "--provider=digitalocean",
                                            "--registry=txt",
                                            "--interval=1m",
                                            "--source=service",
                                            "--source=ingress"
                                        ],
                                        "env": [
                                            {
                                                "name": "DO_TOKEN",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "digitalocean_api_token",
                                                        "name": "external-dns"
                                                    }
                                                }
                                            }
                                        ],
                                        "image": "docker.io/bitnami/external-dns:0.5.17-debian-9-r50",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 2,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "external-dns",
                                        "ports": [
                                            {
                                                "containerPort": 7979,
                                                "name": "http"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 6,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        }
                                    }
                                ],
                                "securityContext": {
                                    "fsGroup": 1001,
                                    "runAsUser": 1001
                                },
                                "serviceAccountName": "external-dns"
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "external-dns",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "external-dns",
                                "helm.sh/chart": "external-dns-2.12.0"
                            },
                            "name": "external-dns",
                            "namespace": "external-dns"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app.kubernetes.io/instance": "external-dns",
                                    "app.kubernetes.io/name": "external-dns"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "checksum/secret": "2876743768fdae83ec241b634d61dd1e9c1607ef4c6a931942e911df30c549f4"
                                    },
                                    "labels": {
                                        "app.kubernetes.io/instance": "external-dns",
                                        "app.kubernetes.io/managed-by": "Tiller",
                                        "app.kubernetes.io/name": "external-dns",
                                        "helm.sh/chart": "external-dns-2.12.0"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "--log-level=info",
                                                "--policy=upsert-only",
                                                "--provider=digitalocean",
                                                "--registry=txt",
                                                "--interval=1m",
                                                "--source=service",
                                                "--source=ingress"
                                            ],
                                            "env": [
                                                {
                                                    "name": "DO_TOKEN",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "digitalocean_api_token",
                                                            "name": "external-dns"
                                                        }
                                                    }
                                                }
                                            ],
                                            "image": "docker.io/bitnami/external-dns:0.5.17-debian-9-r50",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "failureThreshold": 2,
                                                "httpGet": {
                                                    "path": "/healthz",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 10,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 5
                                            },
                                            "name": "external-dns",
                                            "ports": [
                                                {
                                                    "containerPort": 7979,
                                                    "name": "http"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 6,
                                                "httpGet": {
                                                    "path": "/healthz",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 5,
                                                "periodSeconds": 10,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 5
                                            }
                                        }
                                    ],
                                    "securityContext": {
                                        "fsGroup": 1001,
                                        "runAsUser": 1001
                                    },
                                    "serviceAccountName": "external-dns"
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"external-dns\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"external-dns\",\"helm.sh/chart\":\"external-dns-2.12.0\"},\"name\":\"external-dns\",\"namespace\":\"external-dns\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"external-dns\",\"app.kubernetes.io/name\":\"external-dns\"}},\"template\":{\"metadata\":{\"annotations\":{\"checksum/secret\":\"2876743768fdae83ec241b634d61dd1e9c1607ef4c6a931942e911df30c549f4\"},\"labels\":{\"app.kubernetes.io/instance\":\"external-dns\",\"app.kubernetes.io/managed-by\":\"Tiller\",\"app.kubernetes.io/name\":\"external-dns\",\"helm.sh/chart\":\"external-dns-2.12.0\"}},\"spec\":{\"containers\":[{\"args\":[\"--log-level=info\",\"--policy=upsert-only\",\"--provider=digitalocean\",\"--registry=txt\",\"--interval=1m\",\"--source=service\",\"--source=ingress\"],\"env\":[{\"name\":\"DO_TOKEN\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"digitalocean_api_token\",\"name\":\"external-dns\"}}}],\"image\":\"docker.io/bitnami/external-dns:0.5.17-debian-9-r50\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":2,\"httpGet\":{\"path\":\"/healthz\",\"port\":\"http\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"external-dns\",\"ports\":[{\"containerPort\":7979,\"name\":\"http\"}],\"readinessProbe\":{\"failureThreshold\":6,\"httpGet\":{\"path\":\"/healthz\",\"port\":\"http\"},\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5}}],\"securityContext\":{\"fsGroup\":1001,\"runAsUser\":1001},\"serviceAccountName\":\"external-dns\"}}}}\n"
                        },
                        "creationTimestamp": "2019-12-05T23:27:12Z",
                        "generation": 2,
                        "labels": {
                            "app.kubernetes.io/instance": "external-dns",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "external-dns",
                            "helm.sh/chart": "external-dns-2.12.0"
                        },
                        "name": "external-dns",
                        "namespace": "external-dns",
                        "resourceVersion": "58108",
                        "selfLink": "/apis/apps/v1/namespaces/external-dns/deployments/external-dns",
                        "uid": "1c56f70f-0af4-4af6-9d7d-e28034b6d150"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "external-dns",
                                "app.kubernetes.io/name": "external-dns"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "checksum/secret": "2876743768fdae83ec241b634d61dd1e9c1607ef4c6a931942e911df30c549f4"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "external-dns",
                                    "app.kubernetes.io/managed-by": "Tiller",
                                    "app.kubernetes.io/name": "external-dns",
                                    "helm.sh/chart": "external-dns-2.12.0"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--log-level=info",
                                            "--policy=upsert-only",
                                            "--provider=digitalocean",
                                            "--registry=txt",
                                            "--interval=1m",
                                            "--source=service",
                                            "--source=ingress"
                                        ],
                                        "env": [
                                            {
                                                "name": "DO_TOKEN",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "digitalocean_api_token",
                                                        "name": "external-dns"
                                                    }
                                                }
                                            }
                                        ],
                                        "image": "docker.io/bitnami/external-dns:0.5.17-debian-9-r50",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 2,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "name": "external-dns",
                                        "ports": [
                                            {
                                                "containerPort": 7979,
                                                "name": "http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 6,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 5
                                        },
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {
                                    "fsGroup": 1001,
                                    "runAsUser": 1001
                                },
                                "serviceAccount": "external-dns",
                                "serviceAccountName": "external-dns",
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T23:27:12Z",
                                "lastUpdateTime": "2019-12-05T23:35:29Z",
                                "message": "ReplicaSet \"external-dns-55fd45f8db\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T23:41:22Z",
                                "lastUpdateTime": "2019-12-05T23:41:22Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            }
                        ],
                        "observedGeneration": 2,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::external-dns",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::external-dns"
                    ],
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::external-dns/external-dns",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta1:Deployment::external-dns/external-dns",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta2:Deployment::external-dns/external-dns",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Deployment::external-dns/external-dns"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:networking.k8s.io/v1beta1:Ingress::traefik/traefik-dashboard",
                "custom": true,
                "id": "traefik/traefik-dashboard",
                "type": "kubernetes:networking.k8s.io/v1beta1:Ingress",
                "inputs": {
                    "apiVersion": "networking.k8s.io/v1beta1",
                    "kind": "Ingress",
                    "metadata": {
                        "annotations": {
                            "kubernetes.io/ingress.class": "traefik",
                            "traefik.ingress.kubernetes.io/auth-secret": "authsecret",
                            "traefik.ingress.kubernetes.io/auth-type": "basic"
                        },
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik-dashboard",
                        "namespace": "traefik"
                    },
                    "spec": {
                        "rules": [
                            {
                                "host": "traefik.brewedhere.co",
                                "http": {
                                    "paths": [
                                        {
                                            "backend": {
                                                "serviceName": "traefik-dashboard",
                                                "servicePort": "dashboard-http"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "networking.k8s.io/v1beta1",
                    "__inputs": {
                        "apiVersion": "networking.k8s.io/v1beta1",
                        "kind": "Ingress",
                        "metadata": {
                            "annotations": {
                                "kubernetes.io/ingress.class": "traefik",
                                "traefik.ingress.kubernetes.io/auth-secret": "authsecret",
                                "traefik.ingress.kubernetes.io/auth-type": "basic"
                            },
                            "labels": {
                                "app": "traefik",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "chart": "traefik-1.82.3",
                                "heritage": "Tiller",
                                "release": "traefik"
                            },
                            "name": "traefik-dashboard",
                            "namespace": "traefik"
                        },
                        "spec": {
                            "rules": [
                                {
                                    "host": "traefik.brewedhere.co",
                                    "http": {
                                        "paths": [
                                            {
                                                "backend": {
                                                    "serviceName": "traefik-dashboard",
                                                    "servicePort": "dashboard-http"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "networking.k8s.io/v1beta1",
                    "kind": "Ingress",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"networking.k8s.io/v1beta1\",\"kind\":\"Ingress\",\"metadata\":{\"annotations\":{\"kubernetes.io/ingress.class\":\"traefik\",\"traefik.ingress.kubernetes.io/auth-secret\":\"authsecret\",\"traefik.ingress.kubernetes.io/auth-type\":\"basic\"},\"labels\":{\"app\":\"traefik\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"chart\":\"traefik-1.82.3\",\"heritage\":\"Tiller\",\"release\":\"traefik\"},\"name\":\"traefik-dashboard\",\"namespace\":\"traefik\"},\"spec\":{\"rules\":[{\"host\":\"traefik.brewedhere.co\",\"http\":{\"paths\":[{\"backend\":{\"serviceName\":\"traefik-dashboard\",\"servicePort\":\"dashboard-http\"}}]}}]}}\n",
                            "kubernetes.io/ingress.class": "traefik",
                            "traefik.ingress.kubernetes.io/auth-secret": "authsecret",
                            "traefik.ingress.kubernetes.io/auth-type": "basic"
                        },
                        "creationTimestamp": "2019-12-05T23:18:30Z",
                        "generation": 1,
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik-dashboard",
                        "namespace": "traefik",
                        "resourceVersion": "73278",
                        "selfLink": "/apis/networking.k8s.io/v1beta1/namespaces/traefik/ingresses/traefik-dashboard",
                        "uid": "0d432431-cdbf-4cdc-a772-69e9a674c1ae"
                    },
                    "spec": {
                        "rules": [
                            {
                                "host": "traefik.brewedhere.co",
                                "http": {
                                    "paths": [
                                        {
                                            "backend": {
                                                "serviceName": "traefik-dashboard",
                                                "servicePort": "dashboard-http"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "ip": "134.209.140.199"
                                }
                            ]
                        }
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::traefik",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                    ],
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:networking/v1beta1:Ingress::traefik/traefik-dashboard",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Ingress::traefik/traefik-dashboard"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ServiceAccount::traefik/traefik",
                "custom": true,
                "id": "traefik/traefik",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "traefik",
                        "namespace": "traefik"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "traefik",
                            "namespace": "traefik"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"traefik\",\"namespace\":\"traefik\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T23:50:05Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "traefik",
                        "namespace": "traefik",
                        "resourceVersion": "58638",
                        "selfLink": "/api/v1/namespaces/traefik/serviceaccounts/traefik",
                        "uid": "97e61d87-8881-4f2c-8b43-cf9c4a5d0e72"
                    },
                    "secrets": [
                        {
                            "name": "traefik-token-nlj8j"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::traefik",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::traefik/traefik",
                "custom": true,
                "id": "traefik",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "traefik",
                        "namespace": "traefik"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "traefik"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "traefik",
                            "namespace": "traefik"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "traefik",
                            "namespace": "traefik"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "traefik"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "traefik",
                                "namespace": "traefik"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"traefik\",\"namespace\":\"traefik\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"traefik\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"traefik\",\"namespace\":\"traefik\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T23:50:04Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "traefik",
                        "resourceVersion": "58633",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/traefik",
                        "uid": "6f6dd0ef-4822-496c-943c-889c970f6222"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "traefik"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "traefik",
                            "namespace": "traefik"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::traefik",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                    ],
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Secret::traefik/traefik-default-cert",
                "custom": true,
                "id": "traefik/traefik-default-cert",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVtekNDQTRPZ0F3SUJBZ0lKQUpBR1FsTW1DMGt5TUEwR0NTcUdTSWIzRFFFQkJRVUFNSUdQTVFzd0NRWUQKVlFRR0V3SlZVekVSTUE4R0ExVUVDQk1JUTI5c2IzSmhaRzh4RURBT0JnTlZCQWNUQjBKdmRXeGtaWEl4RkRBUwpCZ05WQkFvVEMwVjRZVzF3YkdWRGIzSndNUXN3Q1FZRFZRUUxFd0pKVkRFV01CUUdBMVVFQXhRTktpNWxlR0Z0CmNHeGxMbU52YlRFZ01CNEdDU3FHU0liM0RRRUpBUllSWVdSdGFXNUFaWGhoYlhCc1pTNWpiMjB3SGhjTk1UWXgKTURJME1qRXdPVFV5V2hjTk1UY3hNREkwTWpFd09UVXlXakNCanpFTE1Ba0dBMVVFQmhNQ1ZWTXhFVEFQQmdOVgpCQWdUQ0VOdmJHOXlZV1J2TVJBd0RnWURWUVFIRXdkQ2IzVnNaR1Z5TVJRd0VnWURWUVFLRXd0RmVHRnRjR3hsClEyOXljREVMTUFrR0ExVUVDeE1DU1ZReEZqQVVCZ05WQkFNVURTb3VaWGhoYlhCc1pTNWpiMjB4SURBZUJna3EKaGtpRzl3MEJDUUVXRVdGa2JXbHVRR1Y0WVcxd2JHVXVZMjl0TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQwpBUThBTUlJQkNnS0NBUUVBdHVKOW13dzlCYXA2SDROdUhYTFB6d1NVZFppNGJyYTFkN1ZiRUJaWWZDSStZNjRDCjJ1dThwdTNhVTVzYXVNYkQ5N2pRYW95VzZHOThPUHJlV284b3lmbmRJY3RFcmxueGpxelUyVVRWN3FEVHk0bkEKNU9aZW9SZUxmZXFSeGxsSjE0VmlhNVFkZ3l3R0xoRTlqZy9jN2U0WUp6bmg5S1dZMnFjVnhEdUdEM2llaHNEbgphTnpWNFdGOWNJZm1zOHp3UHZPTk5MZnNBbXc3dUhUKzNiSzEzSUloeDI3ZmV2cXVWcENzNDFQNnBzdStWTG4yCjVIRHk0MXRoQkN3T0wrTithbGJ0ZktTcXM3TEFzM25RTjFsdHpITHZ5MGE1RGhkakpUd2tQclQrVXhwb0tCOUgKNFpZazErRUR0N09QbGh5bzM3NDFRaE4vSkNZK2RKbkFMQnNValFJREFRQUJvNEgzTUlIME1CMEdBMVVkRGdRVwpCQlJwZVc1dFhMdHh3TXJvQXM5d2RNbTUzVVVJTERDQnhBWURWUjBqQklHOE1JRzVnQlJwZVc1dFhMdHh3TXJvCkFzOXdkTW01M1VVSUxLR0JsYVNCa2pDQmp6RUxNQWtHQTFVRUJoTUNWVk14RVRBUEJnTlZCQWdUQ0VOdmJHOXkKWVdSdk1SQXdEZ1lEVlFRSEV3ZENiM1ZzWkdWeU1SUXdFZ1lEVlFRS0V3dEZlR0Z0Y0d4bFEyOXljREVMTUFrRwpBMVVFQ3hNQ1NWUXhGakFVQmdOVkJBTVVEU291WlhoaGJYQnNaUzVqYjIweElEQWVCZ2txaGtpRzl3MEJDUUVXCkVXRmtiV2x1UUdWNFlXMXdiR1V1WTI5dGdna0FrQVpDVXlZTFNUSXdEQVlEVlIwVEJBVXdBd0VCL3pBTkJna3EKaGtpRzl3MEJBUVVGQUFPQ0FRRUFjR1hNZms4TlpzQit0OUtCemwxRmw2eUlqRWtqSE8wUFZVbEVjU0QyQjRiNwpQeG5NT2pkbWdQcmF1SGI5dW5YRWFMN3p5QXFhRDZ0YlhXVTZSeENBbWdMYWpWSk5aSE93NDVOMGhyRGtXZ0I4CkV2WnRRNTZhbW13QzFxSWhBaUE2MzkwRDNDc2V4N2dMNm5KbzdrYnIxWVdVRzN6SXZveGR6OFlEclpOZVdLTEQKcFJ2V2VuMGxNYnBqSVJQNFhac25DNDVDOWdWWGRoM0xSZTErd3lRcTZoOVFQaWxveG1ENk5wRTlpbVRPbjJBNQovYkozVktJekFNdWRlVTZrcHlZbEpCemRHMXVhSFRqUU9Xb3NHaXdlQ0tWVVhGNlV0aXNWZGRyeFF0aDZFTnlXCnZJRnFhWng4NCtEbFNDYzkzeWZrL0dsQnQrU0tHNDZ6RUhNQjlocVBiQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                        "tls.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdHVKOW13dzlCYXA2SDROdUhYTFB6d1NVZFppNGJyYTFkN1ZiRUJaWWZDSStZNjRDCjJ1dThwdTNhVTVzYXVNYkQ5N2pRYW95VzZHOThPUHJlV284b3lmbmRJY3RFcmxueGpxelUyVVRWN3FEVHk0bkEKNU9aZW9SZUxmZXFSeGxsSjE0VmlhNVFkZ3l3R0xoRTlqZy9jN2U0WUp6bmg5S1dZMnFjVnhEdUdEM2llaHNEbgphTnpWNFdGOWNJZm1zOHp3UHZPTk5MZnNBbXc3dUhUKzNiSzEzSUloeDI3ZmV2cXVWcENzNDFQNnBzdStWTG4yCjVIRHk0MXRoQkN3T0wrTithbGJ0ZktTcXM3TEFzM25RTjFsdHpITHZ5MGE1RGhkakpUd2tQclQrVXhwb0tCOUgKNFpZazErRUR0N09QbGh5bzM3NDFRaE4vSkNZK2RKbkFMQnNValFJREFRQUJBb0lCQUhrTHhka0dxNmtCWWQxVAp6MkU4YWFENnhneGpyY2JSdGFCcTc3L2hHbVhuQUdaWGVWcE81MG1SYW8wbHZ2VUgwaE0zUnZNTzVKOHBrdzNmCnRhWTQxT1dDTk1PMlYxb1MvQmZUK3Zsblh6V1hTemVQa0pXd2lIZVZMdVdEaVVMQVBHaWl4emF2RFMyUnlQRmEKeGVRdVNhdE5pTDBGeWJGMG5Zd3pST3ZoL2VSa2NKVnJRZlZudU1melFkOGgyMzZlb1UxU3B6UnhSNklubCs5UApNc1R2Wm5OQmY5d0FWcFo5c1NMMnB1V1g3SGNSMlVnem5oMDNZWUZJdGtDZndtbitEbEdva09YWHBVM282aWY5ClRIenBleHdubVJWSmFnRG85bTlQd2t4QXowOW80cXExdHJoU1g1U2p1K0xyNFJvOHg5bytXdUF1VnVwb0lHd0wKMWVseERFRUNnWUVBNzVaWGp1enNJR09PMkY5TStyYVFQcXMrRHZ2REpzQ3gyZnRudk1WWVJKcVliaGt6YnpsVQowSHBCVnk3NmE3WmF6Umxhd3RGZ3ljMlpyQThpM0F3K3J6d1pQclNJeWNieC9nUVduRzZlbFF1Y0FFVWdXODRNCkdSbXhKUGlmOGRQNUxsZXdRalFjUFJwZVoxMzlYODJreGRSSEdma1pscHlXQnFLajBTWExRSEVDZ1lFQXcybkEKbUVXdWQzZFJvam5zbnFOYjBlYXdFUFQrbzBjZ2RyaENQOTZQK1pEekNhcURUblZKV21PeWVxRlk1eVdSSEZOLwpzbEhXU2lTRUFjRXRYZys5aGlMc0RXdHVPdzhUZzYyN2VrOEh1UUtMb2tWWEFUWG1NZG9xOWRyQW9INU5hV2lECmRSY3dEU2EvamhIN3RZV1hKZDA4VkpUNlJJdU8vMVZpbDBtbEk5MENnWUVBb2lsNkhnMFNUV0hWWDNJeG9raEwKSFgrK1ExbjRYcFJ5VEg0eldydWY0TjlhYUxxNTY0QThmZGNodnFiWGJHeEN6U3RxR1E2cW1peUU1TVpoNjlxRgoyd21zZEpxeE14RnEzV2xhL0lxSzM0cTZEaHk3cUNld1hKVGRKNDc0Z3kvY0twZkRmeXZTS1RGZDBFejNvQTZLCmhqUUY0L2lNYnpxUStQREFQR0YrVHFFQ2dZQmQ1YnZncjJMMURzV1FJU3M4MHh3MDBSZDdIbTRaQVAxdGJuNk8KK0IvUWVNRC92UXBaTWV4c1hZbU9lV2Noc3FCMnJ2eW1MOEs3WDY1NnRWdGFYay9nVzNsM3ZVNTdYSFF4Q3RNUwpJMVYvcGVSNHRiN24yd0ZncFFlTm1XNkQ4QXk4Z0xiaUZhRkdRSDg5QWhFa0dTd1d5cWJKc2NoTUZZOUJ5OEtUCkZaVWZsUUtCZ0V3VzJkVUpOZEJMeXNycDhOTE1VbGt1ZnJxbllpUTNTQUhoNFZzWkg1TXU0MW55Yi95NUUyMW4KMk55d3ltWGRlb3VJcFZjcUlVTXl0L3FKRmhIcFJNeVEyWktPR0QyWG5YaENNVlRlL0FQNDJod294Nm02QkZpQgpvemZFa2wwak5uZmREcjZrL1p2MlQ1TnFzaWxaRXJBQlZGOTBKazdtUFBIa0Q2R1ZMUUJ4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik-default-cert",
                        "namespace": "traefik"
                    },
                    "type": "Opaque"
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVtekNDQTRPZ0F3SUJBZ0lKQUpBR1FsTW1DMGt5TUEwR0NTcUdTSWIzRFFFQkJRVUFNSUdQTVFzd0NRWUQKVlFRR0V3SlZVekVSTUE4R0ExVUVDQk1JUTI5c2IzSmhaRzh4RURBT0JnTlZCQWNUQjBKdmRXeGtaWEl4RkRBUwpCZ05WQkFvVEMwVjRZVzF3YkdWRGIzSndNUXN3Q1FZRFZRUUxFd0pKVkRFV01CUUdBMVVFQXhRTktpNWxlR0Z0CmNHeGxMbU52YlRFZ01CNEdDU3FHU0liM0RRRUpBUllSWVdSdGFXNUFaWGhoYlhCc1pTNWpiMjB3SGhjTk1UWXgKTURJME1qRXdPVFV5V2hjTk1UY3hNREkwTWpFd09UVXlXakNCanpFTE1Ba0dBMVVFQmhNQ1ZWTXhFVEFQQmdOVgpCQWdUQ0VOdmJHOXlZV1J2TVJBd0RnWURWUVFIRXdkQ2IzVnNaR1Z5TVJRd0VnWURWUVFLRXd0RmVHRnRjR3hsClEyOXljREVMTUFrR0ExVUVDeE1DU1ZReEZqQVVCZ05WQkFNVURTb3VaWGhoYlhCc1pTNWpiMjB4SURBZUJna3EKaGtpRzl3MEJDUUVXRVdGa2JXbHVRR1Y0WVcxd2JHVXVZMjl0TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQwpBUThBTUlJQkNnS0NBUUVBdHVKOW13dzlCYXA2SDROdUhYTFB6d1NVZFppNGJyYTFkN1ZiRUJaWWZDSStZNjRDCjJ1dThwdTNhVTVzYXVNYkQ5N2pRYW95VzZHOThPUHJlV284b3lmbmRJY3RFcmxueGpxelUyVVRWN3FEVHk0bkEKNU9aZW9SZUxmZXFSeGxsSjE0VmlhNVFkZ3l3R0xoRTlqZy9jN2U0WUp6bmg5S1dZMnFjVnhEdUdEM2llaHNEbgphTnpWNFdGOWNJZm1zOHp3UHZPTk5MZnNBbXc3dUhUKzNiSzEzSUloeDI3ZmV2cXVWcENzNDFQNnBzdStWTG4yCjVIRHk0MXRoQkN3T0wrTithbGJ0ZktTcXM3TEFzM25RTjFsdHpITHZ5MGE1RGhkakpUd2tQclQrVXhwb0tCOUgKNFpZazErRUR0N09QbGh5bzM3NDFRaE4vSkNZK2RKbkFMQnNValFJREFRQUJvNEgzTUlIME1CMEdBMVVkRGdRVwpCQlJwZVc1dFhMdHh3TXJvQXM5d2RNbTUzVVVJTERDQnhBWURWUjBqQklHOE1JRzVnQlJwZVc1dFhMdHh3TXJvCkFzOXdkTW01M1VVSUxLR0JsYVNCa2pDQmp6RUxNQWtHQTFVRUJoTUNWVk14RVRBUEJnTlZCQWdUQ0VOdmJHOXkKWVdSdk1SQXdEZ1lEVlFRSEV3ZENiM1ZzWkdWeU1SUXdFZ1lEVlFRS0V3dEZlR0Z0Y0d4bFEyOXljREVMTUFrRwpBMVVFQ3hNQ1NWUXhGakFVQmdOVkJBTVVEU291WlhoaGJYQnNaUzVqYjIweElEQWVCZ2txaGtpRzl3MEJDUUVXCkVXRmtiV2x1UUdWNFlXMXdiR1V1WTI5dGdna0FrQVpDVXlZTFNUSXdEQVlEVlIwVEJBVXdBd0VCL3pBTkJna3EKaGtpRzl3MEJBUVVGQUFPQ0FRRUFjR1hNZms4TlpzQit0OUtCemwxRmw2eUlqRWtqSE8wUFZVbEVjU0QyQjRiNwpQeG5NT2pkbWdQcmF1SGI5dW5YRWFMN3p5QXFhRDZ0YlhXVTZSeENBbWdMYWpWSk5aSE93NDVOMGhyRGtXZ0I4CkV2WnRRNTZhbW13QzFxSWhBaUE2MzkwRDNDc2V4N2dMNm5KbzdrYnIxWVdVRzN6SXZveGR6OFlEclpOZVdLTEQKcFJ2V2VuMGxNYnBqSVJQNFhac25DNDVDOWdWWGRoM0xSZTErd3lRcTZoOVFQaWxveG1ENk5wRTlpbVRPbjJBNQovYkozVktJekFNdWRlVTZrcHlZbEpCemRHMXVhSFRqUU9Xb3NHaXdlQ0tWVVhGNlV0aXNWZGRyeFF0aDZFTnlXCnZJRnFhWng4NCtEbFNDYzkzeWZrL0dsQnQrU0tHNDZ6RUhNQjlocVBiQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "tls.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdHVKOW13dzlCYXA2SDROdUhYTFB6d1NVZFppNGJyYTFkN1ZiRUJaWWZDSStZNjRDCjJ1dThwdTNhVTVzYXVNYkQ5N2pRYW95VzZHOThPUHJlV284b3lmbmRJY3RFcmxueGpxelUyVVRWN3FEVHk0bkEKNU9aZW9SZUxmZXFSeGxsSjE0VmlhNVFkZ3l3R0xoRTlqZy9jN2U0WUp6bmg5S1dZMnFjVnhEdUdEM2llaHNEbgphTnpWNFdGOWNJZm1zOHp3UHZPTk5MZnNBbXc3dUhUKzNiSzEzSUloeDI3ZmV2cXVWcENzNDFQNnBzdStWTG4yCjVIRHk0MXRoQkN3T0wrTithbGJ0ZktTcXM3TEFzM25RTjFsdHpITHZ5MGE1RGhkakpUd2tQclQrVXhwb0tCOUgKNFpZazErRUR0N09QbGh5bzM3NDFRaE4vSkNZK2RKbkFMQnNValFJREFRQUJBb0lCQUhrTHhka0dxNmtCWWQxVAp6MkU4YWFENnhneGpyY2JSdGFCcTc3L2hHbVhuQUdaWGVWcE81MG1SYW8wbHZ2VUgwaE0zUnZNTzVKOHBrdzNmCnRhWTQxT1dDTk1PMlYxb1MvQmZUK3Zsblh6V1hTemVQa0pXd2lIZVZMdVdEaVVMQVBHaWl4emF2RFMyUnlQRmEKeGVRdVNhdE5pTDBGeWJGMG5Zd3pST3ZoL2VSa2NKVnJRZlZudU1melFkOGgyMzZlb1UxU3B6UnhSNklubCs5UApNc1R2Wm5OQmY5d0FWcFo5c1NMMnB1V1g3SGNSMlVnem5oMDNZWUZJdGtDZndtbitEbEdva09YWHBVM282aWY5ClRIenBleHdubVJWSmFnRG85bTlQd2t4QXowOW80cXExdHJoU1g1U2p1K0xyNFJvOHg5bytXdUF1VnVwb0lHd0wKMWVseERFRUNnWUVBNzVaWGp1enNJR09PMkY5TStyYVFQcXMrRHZ2REpzQ3gyZnRudk1WWVJKcVliaGt6YnpsVQowSHBCVnk3NmE3WmF6Umxhd3RGZ3ljMlpyQThpM0F3K3J6d1pQclNJeWNieC9nUVduRzZlbFF1Y0FFVWdXODRNCkdSbXhKUGlmOGRQNUxsZXdRalFjUFJwZVoxMzlYODJreGRSSEdma1pscHlXQnFLajBTWExRSEVDZ1lFQXcybkEKbUVXdWQzZFJvam5zbnFOYjBlYXdFUFQrbzBjZ2RyaENQOTZQK1pEekNhcURUblZKV21PeWVxRlk1eVdSSEZOLwpzbEhXU2lTRUFjRXRYZys5aGlMc0RXdHVPdzhUZzYyN2VrOEh1UUtMb2tWWEFUWG1NZG9xOWRyQW9INU5hV2lECmRSY3dEU2EvamhIN3RZV1hKZDA4VkpUNlJJdU8vMVZpbDBtbEk5MENnWUVBb2lsNkhnMFNUV0hWWDNJeG9raEwKSFgrK1ExbjRYcFJ5VEg0eldydWY0TjlhYUxxNTY0QThmZGNodnFiWGJHeEN6U3RxR1E2cW1peUU1TVpoNjlxRgoyd21zZEpxeE14RnEzV2xhL0lxSzM0cTZEaHk3cUNld1hKVGRKNDc0Z3kvY0twZkRmeXZTS1RGZDBFejNvQTZLCmhqUUY0L2lNYnpxUStQREFQR0YrVHFFQ2dZQmQ1YnZncjJMMURzV1FJU3M4MHh3MDBSZDdIbTRaQVAxdGJuNk8KK0IvUWVNRC92UXBaTWV4c1hZbU9lV2Noc3FCMnJ2eW1MOEs3WDY1NnRWdGFYay9nVzNsM3ZVNTdYSFF4Q3RNUwpJMVYvcGVSNHRiN24yd0ZncFFlTm1XNkQ4QXk4Z0xiaUZhRkdRSDg5QWhFa0dTd1d5cWJKc2NoTUZZOUJ5OEtUCkZaVWZsUUtCZ0V3VzJkVUpOZEJMeXNycDhOTE1VbGt1ZnJxbllpUTNTQUhoNFZzWkg1TXU0MW55Yi95NUUyMW4KMk55d3ltWGRlb3VJcFZjcUlVTXl0L3FKRmhIcFJNeVEyWktPR0QyWG5YaENNVlRlL0FQNDJod294Nm02QkZpQgpvemZFa2wwak5uZmREcjZrL1p2MlQ1TnFzaWxaRXJBQlZGOTBKazdtUFBIa0Q2R1ZMUUJ4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                        },
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app": "traefik",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "chart": "traefik-1.82.3",
                                "heritage": "Tiller",
                                "release": "traefik"
                            },
                            "name": "traefik-default-cert",
                            "namespace": "traefik"
                        },
                        "type": "Opaque"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "v1:7bNMDl4qa2cR+mGQ:TfjK3l1PFC6Gcz5fFpKOxRO1VCVtIk+q9ApNPvl9YHEuYQC+doI8otuj8jmD/8eFSUs3af3lPjjnOtSuSyNGH0LnTJVpwt4TCOVcGQm44nnJnbEr5TQw13E8v0TkaV80IiZWhUFTEN/9QqhlaaCPxf4Irhu91WxzYkVKf1vx4ACCntBcwGvrf2LsPyow+gR+yL8wXOjq4H0xJbSF1R8bCZK5J53gyyruk632q6k1l1YqARrQbHchsbgMjr+npaqmdI9mknAJww9Pv2aR6KYUCcBdSqOzEP91fsJ0qClwZyTlyxXQWKy5IiLqwcYZ2r6b0/366WFCdgmU2LxECsWZvaEHMeyF6kdBkhWYe+fEnik75rxSum8zgEA1aGUNR0kE2c3wHlmrsn4WDMtrbtPDLkqNMfQ8NarUlllhpkQ4WxskKpF8J1cmWnmuAKwnSoE7WaWqO1eNge7mFQ4N4izIHLFRuPdhsICX9O5+MJfMIT+spuOIDKwb4PZ7zsMUhrK10lO8Y7ZK2eYgnbdxXEZmshn5OGECB29IhnFe6o4MIbw5r6qFRTTbdggSgjkuI2oDKuMeDd7WqSGtPqopk4COvX2kWGu5MBoAg9CXJeqFXDhw6xtesCjZ1G6ufBKT7/LJ5UOgqgnbgZ5TY34tQ+I34vmXD7xg/NIFeTFHXkNpiZSxm1HAMOTTvEZvn9OdnYk5Ied0i6hL+lOEUAxSaRSMd5berwkyo6AtfH9yxSuSYfFsa9OJGiizE63FwGCDASXemjtNJ2ObA7uIJCC+YWdiQslAMOVHAStW1FGwSYhfXN0WmfmNfhlsYs0Nl39M29acUEfVJQRtOaXB44UxaKpuao+1E5vVnJdbkPY++LUU/f3Ska38gQ6fmiti603PKxM5zU5oDYpH3n2vs+wafqWAeKUUvJuTphZ9i2wBeH2COFWknsSFPX9mOq6U1VUWHMzG0u41rk0WUom0lDVhxPaBv5Z4SZ+45y/UKu7za8eWKNAj1KMjFA67IhExwv3hucrB5f7zR3k8J2eFxxPrf7s0X3DyfmT7KGwzIu6bekFy7fJuTPckxo04Khj9Si2aIMoj12heQKZ4B/MzXGtgT24FhkVd7wxxCISDgAu0DmQrmykRarxHG+M5oKUnK1eoFtvp4Ow7mSywp+Y5ZFTAoi4Ki6y+aIY2JWo8/HJcpGjO1BFH8Xwc8ItA7wh5a24uwGPHsOC8YNjaDqrUBG2UUoN6hdeHGsxZa66c0fouBkcmvXiZhnHqQJgS4xOmU3YhCx6q8AVZukKGYM/RO4b3aliQcXwUaXrQV1UbzExpZiHhEqscRe2XPPhiQYwbbs7Qr3vvQXd2H8UeLpUBnMULKWNfEznxzenmpkfiL5agDf2Czw8DKjKF75gKJRoHwlUR+a2i9dJVb747Cnex8Qr/fgi8mnRiOktmspgvW3hpwdLsHrrRUhe5Bcx3DZIgMqssTWzHril3vDItvWfoG5F0IAyoZi1nGSRHn04SHIP6oZ1afNTulw/o/36aIKRQxBCAdX0UhFDesIFJRhF1BV10jZRYeaVPBmuRHQrnOLTZVRSAwhGuzFt0ITI82uibtvhFV1tyRZYDlLx9TxKmJnu7j7Wndz+/h5nqtqaZdaTpO4MzeckAbEt+ATPY+aU08omjpLwrAQozoagO2n931LfQNif9ndmCuHAu+gjq+gzKiT6Vxo0mW+ZSo7qbkGkjyERRAuXzOTTdkGe9ngnVkoRBMQYUJ/CJbW/QDuNgunZytTxZ04K1YtYWAi8psJlDKt82zMx9YW+zgz7W5fc5Xg1RWr+TpTU41WxKvloxtv1KxjFzQOLL7BBK5gsLsuOMf72u2Ab3jIHC3xqIuZnlnZNUVQB6upS+LrlC63j/ZMpqthnvnkuHMy6Ur7TOPnnaceLPfNMN0HbnRyTbk4WtSYQOZiYDsQj39xopabmRIzK5Mq0lFWq7TQv4HMn3NMfY1qlXvqstmrWcBqH7LgxufcbQ4xKuLErAsF5hVu1QH8Id7WlB0GwIHUCYb/QCYwNbleeupx7WQIlz59NytjWW68g6yuuT/Pz8pPe1g5+ndc4xoxitSYn3zZwzFJtw6C9XFmsFZRSwhCCU/Au/1T4OW2/JxP5qLce0mM+guu9EV30nr9e8nrMuWkT0zLYEA7Q/tqtI40xQkaDeHh6PM/XKn/iK9GL46QWjKj598klsz1gaH3YOS6FcaQ5UgYZFAGUVNMP2J9UqCm/lDZhUlpqES7qfoFvQ3hLWviH4GRe8jEVxxjidGgyBiBwqqWk3fPAvaAhzBg3Bv/F/5C/edBAZg+vbVd3ntB4c3YIXUdyyUf/7p66/K1GBwsOto22FYQjSfCPfA4el08G4VyG7venGJMwp3MD3ZqgeLQoRN1KI1ImWz31vLkQdgAg6fpWAxZq7uarSe/NiJtEMJUb0Wy1/cm/+7EED8r5pVUg2Th9G8FibleNMGuyDW/ICVZCwoZTj54ELjFZ7NLhosqXkESSr9X44zFkst17tKoK6gKKQgpKrQ86IpBLk6JUj2bwpvWSqJ54JfdNivJXApGtHdhVhvY07saK1Ren12U/WRymZUfHbAueilxdhqrLCL4RcDiRmgT4A/qO/xasEZIrYdTpbpJ06zCbJi878Cagme0vqVpFS9r1SkXnb6h42p0mog7rjRUuShh5bk02+A1XxAlaxkkqM2vs9Ak1aFmz3AKvemo5XRAeJLWwksWN7+vHVFAaShS4+Dvm5OLKRKMWrmS8JEgU1+gCRhA916BZPK2oYzp6DuoksBSczkZiinrbXuNtgZbwT+4UqSP/5w3HQzxY44w4fKQorawUTnvEA72vBcHofRhP6eTqTbK3KnR0uBUpl7xBzGs7/GGxBKh768CviPXeTw6hhyRnj3/hggtD8ClrUzT2W0JViO6SKcc/P0wpn7di8ickTBF4xGAhUx6/QbS3kc7GsIKWom6gw7lh3gARsC1pQxz7YxSTUS6A1hY4Ru5deF/p3pwQGtaWCoaIQ0EcBlkXMC3Fm5fYznBadSY5EooOs0GfUdP4hrj5pOUS3wAUhkjmBiFeXXUaGfCOOF0J74ZXzuK7grKlqkSKoL6WALsq2Ra7K5c/lirJP3ta7YdW7P2NANEuRjQyNsZcIcRA4f33oLjg2M1uLJZc8mgUE+71Ip8a5zaXroQZWxG7RNHxLmohlvTseZA6vCmAKO4mJGMvHm9nzcP8Bw0w2dnSf7bmiELnOnoKMQwWHiywdzPPAgFQ22zc1Mmi1/DbuIjRIbzU0pM397I1Jjy8swwiAb1kEu7/N1siLD0BC8C38Tox6RLA2pa/SYQZWQh3/BNgbj0Rt4mIRuTaT82tjrvJYGLGxIaXpwz3KJAKfURjU6g60E1vMZerHdD24s2EoaPAB5eR31st/EBwOnzmSI+PIzoJya7h27Bw1jjXOvdKZSyzJ5dgg6Ig1LSXea0ULjdljVEbQe+UTOHm4gny9orooOUclXXC5xtbhx2WZOwi/s1ww7nzhPdBQo26qh9r9UhrQ/yFXCumtB65SXHZPLlcV5z0ax0sDTAmR7q9zfSOoKWhxxzTDgs1Aq2pqZHfmQSwqacBg5SkWl39kdMwcgtnjec4GTnp9FcWovUpC3g9YZymRrGTHcozBp7N0nahBT/RoB3/e28CQb2G31laZx0hyVfusQAHbAprHI2wp1Gkjzx0v50/JP3YMwFVI79V0LaheWe/ngGaJFRzIgMC0R8wUe5DaZV/ACGztSKQE2rg2ZL10bz9BWlFpWG2AXS16uHT8yKhE5r1A/LdF/xY4LbVLoRdCfoMyVy84IcFd6a+hnpGOZpwFE6MKPpT3rC4KMVxj0Ff9TB4/n6I2YrNBLTOygxdWyRK7MI5+2oYLcnYGp4pHeL5F3xCkzoZyFgBN6Ri558WMOMsqfjO8nsIl+rNdsTVbGCN8rV61Bo8CEtC4Y8r+M6B0pIH1NhJcncpRh0k8lvA5RgGEPXsQOoaMtC48Xi9tt9EKC/X2kbHr6BAcBcL3Kfyk4Fx9Feld+P6ORWzR4RIgN5392BdKiY7dfrJeQYRfIqclPTGZe/UD/4zB3C9SX2Lnep1urUdIOlh+bGS2fm7upkwKOZ3JnOgA1TFrIZph31WNZ8NJ2FXKVdVAgjWmcp6WY/ftKqsP3+MfbPgkDZPZ7bHZsaG843iVl7O2GxM7JbcfZs52dLi2azN67+zBhvAEviNysUEQcrMfn0deOZstSC4eYOO2qBZUljjqim9izUsJmfc9d5RHdp9glhhdw0Cz6bnRCYPk8dfIlU7UyvLjF1TL2PnUGFRXyLDDen742kQY5+/Sc0TZ07Llr2DbGRSCBrtXpv/vINqHQm7pPyg4hBcrg6WD/jrT6VCk80KVoUr1YyVRxqsXKzdeqvKYCAu03JVTKe4V8vMZcQ4ntyzDvgBdwhEGsupVe1pXEH5YAOhny01AjZa+3NKpdRegLr36pb1u+Yg15N2IuetG0UbwBJi38J1juJdIGg84Pz6lEgXn7jPSqRxJNCJE2bRhPJL8e7ruFNldhkWBq32lYtLcS6t5q/u2eTLbERnf776ys4QmX7BImETzkboBQ9qng36PazwmmMSGP5XMovUcrKh1G6aF4upyNvvDtIyMZ85Sl/x7qCajX7O7kZIY0mDW7i5ev2c7qoTY7nu+0LjHGO8qyyMJZzMvFT6CW7WJ4xjiKXDKcwqZAb0Fz6+/Anx17oD1AFlwShtoiG/Bl4HkoNvV5jUIkdHV+1K9TU6IvI39aF2IU+sZMTA8KwLnHfmbOuRN7ASy2moNsiGfLWGeUmihZosP3tAJ+we2BbfI37YnAnhVLuf5xzCjgjzRsmJG1TgtbzGsTCY3v+EfwoRQlMigVDVgA4c2YYjfsULvKu3+FVA7ei2O+A6skTtaj5F7VX0NeJk5EvFNj0IpB2T8zEtW+FSfzMnM/g0wZE2SRP0pugNbtE35FCRJOPVHpAUMVqL2jajdENMO+tVZwd7Bv65w2gDRID2RFSjSB7dmPZrtp9Uf2nULE7ww69V0ttPnVF6haCGtRvAWNEIev9pckehvaiXK6un5uM5nuANBkUR4cYQEY2AIF3yFeF9UrszF+u8qYMTcNU8MCfRes2tcnlm8IFImH0r8NZsmIQGd/7VfEp0lxKbkSdVSFQIIAYUQgTpCCC+SyamJJCCSDnAO9O1sXUBMbSLwcRvR57xo+e7SkSjIvO27d732nXkwnpVy+yqsz6KEtT4r1fZ8jO8qC31l/JM8wi83obMJWoKA9+nD65G7LYU1wu7o3u1IYbFNxAj4defcDlWPze/tJB8h4oZvdgo7ueGPz0rePebE6pPJyu3gC+9bdyeiUATqcBRT0f7tD5FScbEeqB9e2SZloHI7nc2JpmyUUklQgL9SjoNXF7Tmo3lSfMm6CgF128TgGe+o58kNmsuFPgcASwNOsjIGkB7PITbEoedpOCpHypWAd0I2518MK/csCpUYFLUNT01w2paeILk8r2zcmJhcxYjcz1syxM8Ns+BgMELdz28ChcnbF9Z2cyGemT+IkfLBfsPkHq9fSlamk1BoxG1201fFi/gOafDWhJs8nExnTyuk0JemwAlXEKTTZiqwCU/NosoBybh1AsLP8xckJsNxsbguL7s7sW6Q5GFjq5yocMdS3gIWlzLDZxMItO/cHO7Wblss+pmMDbSSzffj2DO8iMNFPxa/xGXBBA76eDRVDx/p7/Mvm5oIdyHegyjOrYhot0QV8zwWPHct4DZ4X7tYlNyt/NPHbKyI5EcfoSL+/b4c4DTlKMoawbaTIx2D2lkVVtScL6KQYm60gDlmYnL/02KZEwLYK5cXH1HSUy19w69MqtfaOM6L0h8fJmEUQavdnrcn1TeDOMQIPx6EuORPqjBvDvgDyE5EROR5S7wKU2fx+VZpDem0w5gp9kmymTBbIc8M1jCFs19xtp04o5OhUmipi/uQ+qKGAAyFOoXu"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"tls.crt\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVtekNDQTRPZ0F3SUJBZ0lKQUpBR1FsTW1DMGt5TUEwR0NTcUdTSWIzRFFFQkJRVUFNSUdQTVFzd0NRWUQKVlFRR0V3SlZVekVSTUE4R0ExVUVDQk1JUTI5c2IzSmhaRzh4RURBT0JnTlZCQWNUQjBKdmRXeGtaWEl4RkRBUwpCZ05WQkFvVEMwVjRZVzF3YkdWRGIzSndNUXN3Q1FZRFZRUUxFd0pKVkRFV01CUUdBMVVFQXhRTktpNWxlR0Z0CmNHeGxMbU52YlRFZ01CNEdDU3FHU0liM0RRRUpBUllSWVdSdGFXNUFaWGhoYlhCc1pTNWpiMjB3SGhjTk1UWXgKTURJME1qRXdPVFV5V2hjTk1UY3hNREkwTWpFd09UVXlXakNCanpFTE1Ba0dBMVVFQmhNQ1ZWTXhFVEFQQmdOVgpCQWdUQ0VOdmJHOXlZV1J2TVJBd0RnWURWUVFIRXdkQ2IzVnNaR1Z5TVJRd0VnWURWUVFLRXd0RmVHRnRjR3hsClEyOXljREVMTUFrR0ExVUVDeE1DU1ZReEZqQVVCZ05WQkFNVURTb3VaWGhoYlhCc1pTNWpiMjB4SURBZUJna3EKaGtpRzl3MEJDUUVXRVdGa2JXbHVRR1Y0WVcxd2JHVXVZMjl0TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQwpBUThBTUlJQkNnS0NBUUVBdHVKOW13dzlCYXA2SDROdUhYTFB6d1NVZFppNGJyYTFkN1ZiRUJaWWZDSStZNjRDCjJ1dThwdTNhVTVzYXVNYkQ5N2pRYW95VzZHOThPUHJlV284b3lmbmRJY3RFcmxueGpxelUyVVRWN3FEVHk0bkEKNU9aZW9SZUxmZXFSeGxsSjE0VmlhNVFkZ3l3R0xoRTlqZy9jN2U0WUp6bmg5S1dZMnFjVnhEdUdEM2llaHNEbgphTnpWNFdGOWNJZm1zOHp3UHZPTk5MZnNBbXc3dUhUKzNiSzEzSUloeDI3ZmV2cXVWcENzNDFQNnBzdStWTG4yCjVIRHk0MXRoQkN3T0wrTithbGJ0ZktTcXM3TEFzM25RTjFsdHpITHZ5MGE1RGhkakpUd2tQclQrVXhwb0tCOUgKNFpZazErRUR0N09QbGh5bzM3NDFRaE4vSkNZK2RKbkFMQnNValFJREFRQUJvNEgzTUlIME1CMEdBMVVkRGdRVwpCQlJwZVc1dFhMdHh3TXJvQXM5d2RNbTUzVVVJTERDQnhBWURWUjBqQklHOE1JRzVnQlJwZVc1dFhMdHh3TXJvCkFzOXdkTW01M1VVSUxLR0JsYVNCa2pDQmp6RUxNQWtHQTFVRUJoTUNWVk14RVRBUEJnTlZCQWdUQ0VOdmJHOXkKWVdSdk1SQXdEZ1lEVlFRSEV3ZENiM1ZzWkdWeU1SUXdFZ1lEVlFRS0V3dEZlR0Z0Y0d4bFEyOXljREVMTUFrRwpBMVVFQ3hNQ1NWUXhGakFVQmdOVkJBTVVEU291WlhoaGJYQnNaUzVqYjIweElEQWVCZ2txaGtpRzl3MEJDUUVXCkVXRmtiV2x1UUdWNFlXMXdiR1V1WTI5dGdna0FrQVpDVXlZTFNUSXdEQVlEVlIwVEJBVXdBd0VCL3pBTkJna3EKaGtpRzl3MEJBUVVGQUFPQ0FRRUFjR1hNZms4TlpzQit0OUtCemwxRmw2eUlqRWtqSE8wUFZVbEVjU0QyQjRiNwpQeG5NT2pkbWdQcmF1SGI5dW5YRWFMN3p5QXFhRDZ0YlhXVTZSeENBbWdMYWpWSk5aSE93NDVOMGhyRGtXZ0I4CkV2WnRRNTZhbW13QzFxSWhBaUE2MzkwRDNDc2V4N2dMNm5KbzdrYnIxWVdVRzN6SXZveGR6OFlEclpOZVdLTEQKcFJ2V2VuMGxNYnBqSVJQNFhac25DNDVDOWdWWGRoM0xSZTErd3lRcTZoOVFQaWxveG1ENk5wRTlpbVRPbjJBNQovYkozVktJekFNdWRlVTZrcHlZbEpCemRHMXVhSFRqUU9Xb3NHaXdlQ0tWVVhGNlV0aXNWZGRyeFF0aDZFTnlXCnZJRnFhWng4NCtEbFNDYzkzeWZrL0dsQnQrU0tHNDZ6RUhNQjlocVBiQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\",\"tls.key\":\"LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdHVKOW13dzlCYXA2SDROdUhYTFB6d1NVZFppNGJyYTFkN1ZiRUJaWWZDSStZNjRDCjJ1dThwdTNhVTVzYXVNYkQ5N2pRYW95VzZHOThPUHJlV284b3lmbmRJY3RFcmxueGpxelUyVVRWN3FEVHk0bkEKNU9aZW9SZUxmZXFSeGxsSjE0VmlhNVFkZ3l3R0xoRTlqZy9jN2U0WUp6bmg5S1dZMnFjVnhEdUdEM2llaHNEbgphTnpWNFdGOWNJZm1zOHp3UHZPTk5MZnNBbXc3dUhUKzNiSzEzSUloeDI3ZmV2cXVWcENzNDFQNnBzdStWTG4yCjVIRHk0MXRoQkN3T0wrTithbGJ0ZktTcXM3TEFzM25RTjFsdHpITHZ5MGE1RGhkakpUd2tQclQrVXhwb0tCOUgKNFpZazErRUR0N09QbGh5bzM3NDFRaE4vSkNZK2RKbkFMQnNValFJREFRQUJBb0lCQUhrTHhka0dxNmtCWWQxVAp6MkU4YWFENnhneGpyY2JSdGFCcTc3L2hHbVhuQUdaWGVWcE81MG1SYW8wbHZ2VUgwaE0zUnZNTzVKOHBrdzNmCnRhWTQxT1dDTk1PMlYxb1MvQmZUK3Zsblh6V1hTemVQa0pXd2lIZVZMdVdEaVVMQVBHaWl4emF2RFMyUnlQRmEKeGVRdVNhdE5pTDBGeWJGMG5Zd3pST3ZoL2VSa2NKVnJRZlZudU1melFkOGgyMzZlb1UxU3B6UnhSNklubCs5UApNc1R2Wm5OQmY5d0FWcFo5c1NMMnB1V1g3SGNSMlVnem5oMDNZWUZJdGtDZndtbitEbEdva09YWHBVM282aWY5ClRIenBleHdubVJWSmFnRG85bTlQd2t4QXowOW80cXExdHJoU1g1U2p1K0xyNFJvOHg5bytXdUF1VnVwb0lHd0wKMWVseERFRUNnWUVBNzVaWGp1enNJR09PMkY5TStyYVFQcXMrRHZ2REpzQ3gyZnRudk1WWVJKcVliaGt6YnpsVQowSHBCVnk3NmE3WmF6Umxhd3RGZ3ljMlpyQThpM0F3K3J6d1pQclNJeWNieC9nUVduRzZlbFF1Y0FFVWdXODRNCkdSbXhKUGlmOGRQNUxsZXdRalFjUFJwZVoxMzlYODJreGRSSEdma1pscHlXQnFLajBTWExRSEVDZ1lFQXcybkEKbUVXdWQzZFJvam5zbnFOYjBlYXdFUFQrbzBjZ2RyaENQOTZQK1pEekNhcURUblZKV21PeWVxRlk1eVdSSEZOLwpzbEhXU2lTRUFjRXRYZys5aGlMc0RXdHVPdzhUZzYyN2VrOEh1UUtMb2tWWEFUWG1NZG9xOWRyQW9INU5hV2lECmRSY3dEU2EvamhIN3RZV1hKZDA4VkpUNlJJdU8vMVZpbDBtbEk5MENnWUVBb2lsNkhnMFNUV0hWWDNJeG9raEwKSFgrK1ExbjRYcFJ5VEg0eldydWY0TjlhYUxxNTY0QThmZGNodnFiWGJHeEN6U3RxR1E2cW1peUU1TVpoNjlxRgoyd21zZEpxeE14RnEzV2xhL0lxSzM0cTZEaHk3cUNld1hKVGRKNDc0Z3kvY0twZkRmeXZTS1RGZDBFejNvQTZLCmhqUUY0L2lNYnpxUStQREFQR0YrVHFFQ2dZQmQ1YnZncjJMMURzV1FJU3M4MHh3MDBSZDdIbTRaQVAxdGJuNk8KK0IvUWVNRC92UXBaTWV4c1hZbU9lV2Noc3FCMnJ2eW1MOEs3WDY1NnRWdGFYay9nVzNsM3ZVNTdYSFF4Q3RNUwpJMVYvcGVSNHRiN24yd0ZncFFlTm1XNkQ4QXk4Z0xiaUZhRkdRSDg5QWhFa0dTd1d5cWJKc2NoTUZZOUJ5OEtUCkZaVWZsUUtCZ0V3VzJkVUpOZEJMeXNycDhOTE1VbGt1ZnJxbllpUTNTQUhoNFZzWkg1TXU0MW55Yi95NUUyMW4KMk55d3ltWGRlb3VJcFZjcUlVTXl0L3FKRmhIcFJNeVEyWktPR0QyWG5YaENNVlRlL0FQNDJod294Nm02QkZpQgpvemZFa2wwak5uZmREcjZrL1p2MlQ1TnFzaWxaRXJBQlZGOTBKazdtUFBIa0Q2R1ZMUUJ4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\"},\"kind\":\"Secret\",\"metadata\":{\"labels\":{\"app\":\"traefik\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"chart\":\"traefik-1.82.3\",\"heritage\":\"Tiller\",\"release\":\"traefik\"},\"name\":\"traefik-default-cert\",\"namespace\":\"traefik\"},\"type\":\"Opaque\"}\n"
                        },
                        "creationTimestamp": "2019-12-06T03:51:17Z",
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik-default-cert",
                        "namespace": "traefik",
                        "resourceVersion": "72711",
                        "selfLink": "/api/v1/namespaces/traefik/secrets/traefik-default-cert",
                        "uid": "7c5f28a0-5ae2-4a35-b9de-6ea650f7d080"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::traefik",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                    ],
                    "type": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:PersistentVolumeClaim::traefik/traefik-acme",
                "custom": true,
                "id": "traefik/traefik-acme",
                "type": "kubernetes:core/v1:PersistentVolumeClaim",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "PersistentVolumeClaim",
                    "metadata": {
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik-acme",
                        "namespace": "traefik"
                    },
                    "spec": {
                        "accessModes": [
                            "ReadWriteOnce"
                        ],
                        "resources": {
                            "requests": {
                                "storage": "1Gi"
                            }
                        },
                        "storageClassName": "do-block-storage"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "labels": {
                                "app": "traefik",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "chart": "traefik-1.82.3",
                                "heritage": "Tiller",
                                "release": "traefik"
                            },
                            "name": "traefik-acme",
                            "namespace": "traefik"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "1Gi"
                                }
                            },
                            "storageClassName": "do-block-storage"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "PersistentVolumeClaim",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"PersistentVolumeClaim\",\"metadata\":{\"labels\":{\"app\":\"traefik\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"chart\":\"traefik-1.82.3\",\"heritage\":\"Tiller\",\"release\":\"traefik\"},\"name\":\"traefik-acme\",\"namespace\":\"traefik\"},\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"1Gi\"}},\"storageClassName\":\"do-block-storage\"}}\n",
                            "pv.kubernetes.io/bind-completed": "yes",
                            "pv.kubernetes.io/bound-by-controller": "yes",
                            "volume.beta.kubernetes.io/storage-provisioner": "dobs.csi.digitalocean.com"
                        },
                        "creationTimestamp": "2019-12-06T04:14:45Z",
                        "finalizers": [
                            "kubernetes.io/pvc-protection"
                        ],
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik-acme",
                        "namespace": "traefik",
                        "resourceVersion": "74392",
                        "selfLink": "/api/v1/namespaces/traefik/persistentvolumeclaims/traefik-acme",
                        "uid": "d732b277-90d1-4845-b508-11ce27c40e09"
                    },
                    "spec": {
                        "accessModes": [
                            "ReadWriteOnce"
                        ],
                        "resources": {
                            "requests": {
                                "storage": "1Gi"
                            }
                        },
                        "storageClassName": "do-block-storage",
                        "volumeMode": "Filesystem",
                        "volumeName": "pvc-d732b277-90d1-4845-b508-11ce27c40e09"
                    },
                    "status": {
                        "accessModes": [
                            "ReadWriteOnce"
                        ],
                        "capacity": {
                            "storage": "1Gi"
                        },
                        "phase": "Bound"
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::traefik",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                    ],
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::traefik/traefik-dashboard",
                "custom": true,
                "id": "traefik/traefik-dashboard",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik-dashboard",
                        "namespace": "traefik"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "dashboard-http",
                                "port": 80,
                                "targetPort": 8080
                            }
                        ],
                        "selector": {
                            "app": "traefik",
                            "release": "traefik"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app": "traefik",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "chart": "traefik-1.82.3",
                                "heritage": "Tiller",
                                "release": "traefik"
                            },
                            "name": "traefik-dashboard",
                            "namespace": "traefik"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "dashboard-http",
                                    "port": 80,
                                    "targetPort": 8080
                                }
                            ],
                            "selector": {
                                "app": "traefik",
                                "release": "traefik"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app\":\"traefik\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"chart\":\"traefik-1.82.3\",\"heritage\":\"Tiller\",\"release\":\"traefik\"},\"name\":\"traefik-dashboard\",\"namespace\":\"traefik\"},\"spec\":{\"ports\":[{\"name\":\"dashboard-http\",\"port\":80,\"targetPort\":8080}],\"selector\":{\"app\":\"traefik\",\"release\":\"traefik\"},\"type\":\"ClusterIP\"}}\n"
                        },
                        "creationTimestamp": "2019-12-05T23:13:28Z",
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik-dashboard",
                        "namespace": "traefik",
                        "resourceVersion": "56159",
                        "selfLink": "/api/v1/namespaces/traefik/services/traefik-dashboard",
                        "uid": "9ad06e40-8659-482f-8bca-a47c4694f275"
                    },
                    "spec": {
                        "clusterIP": "10.245.71.146",
                        "ports": [
                            {
                                "name": "dashboard-http",
                                "port": 80,
                                "protocol": "TCP",
                                "targetPort": 8080
                            }
                        ],
                        "selector": {
                            "app": "traefik",
                            "release": "traefik"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::traefik",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                    ],
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:Service::traefik/traefik",
                "custom": true,
                "id": "traefik/traefik",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik",
                        "namespace": "traefik"
                    },
                    "spec": {
                        "externalTrafficPolicy": "Cluster",
                        "ports": [
                            {
                                "name": "http",
                                "port": 80,
                                "targetPort": "http"
                            },
                            {
                                "name": "https",
                                "port": 443,
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "app": "traefik",
                            "release": "traefik"
                        },
                        "type": "LoadBalancer"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app": "traefik",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "chart": "traefik-1.82.3",
                                "heritage": "Tiller",
                                "release": "traefik"
                            },
                            "name": "traefik",
                            "namespace": "traefik"
                        },
                        "spec": {
                            "externalTrafficPolicy": "Cluster",
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 80,
                                    "targetPort": "http"
                                },
                                {
                                    "name": "https",
                                    "port": 443,
                                    "targetPort": "https"
                                }
                            ],
                            "selector": {
                                "app": "traefik",
                                "release": "traefik"
                            },
                            "type": "LoadBalancer"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app\":\"traefik\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"chart\":\"traefik-1.82.3\",\"heritage\":\"Tiller\",\"release\":\"traefik\"},\"name\":\"traefik\",\"namespace\":\"traefik\"},\"spec\":{\"externalTrafficPolicy\":\"Cluster\",\"ports\":[{\"name\":\"http\",\"port\":80,\"targetPort\":\"http\"},{\"name\":\"https\",\"port\":443,\"targetPort\":\"https\"}],\"selector\":{\"app\":\"traefik\",\"release\":\"traefik\"},\"type\":\"LoadBalancer\"}}\n",
                            "kubernetes.digitalocean.com/load-balancer-id": "1d148613-4df0-462f-9458-222d25942b26"
                        },
                        "creationTimestamp": "2019-12-05T21:39:46Z",
                        "finalizers": [
                            "service.kubernetes.io/load-balancer-cleanup"
                        ],
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik",
                        "namespace": "traefik",
                        "resourceVersion": "73285",
                        "selfLink": "/api/v1/namespaces/traefik/services/traefik",
                        "uid": "8cadfa8a-e311-40c1-b13e-cc02a5c960fe"
                    },
                    "spec": {
                        "clusterIP": "10.245.250.131",
                        "externalTrafficPolicy": "Cluster",
                        "ports": [
                            {
                                "name": "http",
                                "nodePort": 32752,
                                "port": 80,
                                "protocol": "TCP",
                                "targetPort": "http"
                            },
                            {
                                "name": "https",
                                "nodePort": 31407,
                                "port": 443,
                                "protocol": "TCP",
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "app": "traefik",
                            "release": "traefik"
                        },
                        "sessionAffinity": "None",
                        "type": "LoadBalancer"
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "ip": "134.209.140.199"
                                }
                            ]
                        }
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::traefik",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                    ],
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::traefik/traefik",
                "custom": true,
                "id": "traefik",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "traefik",
                        "namespace": "traefik"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "services",
                                "endpoints",
                                "secrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "ingresses/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "traefik",
                            "namespace": "traefik"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "pods",
                                    "services",
                                    "endpoints",
                                    "secrets"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "ingresses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "ingresses/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"traefik\",\"namespace\":\"traefik\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\",\"services\",\"endpoints\",\"secrets\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\"],\"resources\":[\"ingresses/status\"],\"verbs\":[\"update\"]}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T23:50:03Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "traefik",
                        "resourceVersion": "58629",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterroles/traefik",
                        "uid": "62ad1de2-d810-405b-bd6a-06d532299d84"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "pods",
                                "services",
                                "endpoints",
                                "secrets"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "ingresses/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::traefik",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                    ],
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::metrics-server-auth",
                "custom": true,
                "id": "metrics-server:system:auth-delegator",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server:system:auth-delegator",
                        "namespace": "kube-system"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:auth-delegator"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "metrics-server",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app": "metrics-server",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "metrics-server:system:auth-delegator",
                            "namespace": "kube-system"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:auth-delegator"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "metrics-server",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"metrics-server:system:auth-delegator\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:auth-delegator\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"metrics-server\",\"namespace\":\"kube-system\"}]}\n"
                        },
                        "creationTimestamp": "2019-12-05T07:31:01Z",
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server:system:auth-delegator",
                        "resourceVersion": "1221",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/metrics-server%3Asystem%3Aauth-delegator",
                        "uid": "660c5173-c7a3-427c-93ba-0f4828a7d24f"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:auth-delegator"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "metrics-server",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac::metrics-server",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:core/v1:ServiceAccount::metrics-server"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": [
                        "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:core/v1:ServiceAccount::metrics-server"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:deployment$kubernetes:apps/v1:Deployment::metrics-server",
                "custom": true,
                "id": "kube-system/metrics-server-fzv5dhaw",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true"
                        },
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server-fzv5dhaw",
                        "namespace": "kube-system"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app": "metrics-server"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {},
                                "labels": {
                                    "app": "metrics-server"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/metrics-server",
                                            "--logtostderr",
                                            "--kubelet-preferred-address-types=InternalIP",
                                            "--cert-dir=/tmp",
                                            "--kubelet-insecure-tls",
                                            "--secure-port=8443"
                                        ],
                                        "image": "gcr.io/google_containers/metrics-server-amd64:v0.3.6",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "https",
                                                "scheme": "HTTPS"
                                            },
                                            "initialDelaySeconds": 20
                                        },
                                        "name": "metrics-server",
                                        "ports": [
                                            {
                                                "containerPort": 8443,
                                                "name": "https"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "https",
                                                "scheme": "HTTPS"
                                            },
                                            "initialDelaySeconds": 20
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "drop": [
                                                    "all"
                                                ]
                                            },
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 10001,
                                            "runAsNonRoot": true,
                                            "runAsUser": 10001
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/tmp",
                                                "name": "tmp"
                                            }
                                        ]
                                    }
                                ],
                                "hostNetwork": false,
                                "serviceAccountName": "metrics-server",
                                "volumes": [
                                    {
                                        "emptyDir": {},
                                        "name": "tmp"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "labels": {
                                "app": "metrics-server",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "metrics-server-fzv5dhaw",
                            "namespace": "kube-system"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app": "metrics-server"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {},
                                    "labels": {
                                        "app": "metrics-server"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "command": [
                                                "/metrics-server",
                                                "--logtostderr",
                                                "--kubelet-preferred-address-types=InternalIP",
                                                "--cert-dir=/tmp",
                                                "--kubelet-insecure-tls",
                                                "--secure-port=8443"
                                            ],
                                            "image": "gcr.io/google_containers/metrics-server-amd64:v0.3.6",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "httpGet": {
                                                    "path": "/healthz",
                                                    "port": "https",
                                                    "scheme": "HTTPS"
                                                },
                                                "initialDelaySeconds": 20
                                            },
                                            "name": "metrics-server",
                                            "ports": [
                                                {
                                                    "containerPort": 8443,
                                                    "name": "https"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/healthz",
                                                    "port": "https",
                                                    "scheme": "HTTPS"
                                                },
                                                "initialDelaySeconds": 20
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false,
                                                "capabilities": {
                                                    "drop": [
                                                        "all"
                                                    ]
                                                },
                                                "readOnlyRootFilesystem": true,
                                                "runAsGroup": 10001,
                                                "runAsNonRoot": true,
                                                "runAsUser": 10001
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/tmp",
                                                    "name": "tmp"
                                                }
                                            ]
                                        }
                                    ],
                                    "hostNetwork": false,
                                    "serviceAccountName": "metrics-server",
                                    "volumes": [
                                        {
                                            "emptyDir": {},
                                            "name": "tmp"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "5",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\"},\"labels\":{\"app\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"metrics-server-fzv5dhaw\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"metrics-server\"}},\"template\":{\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"metrics-server\"}},\"spec\":{\"containers\":[{\"command\":[\"/metrics-server\",\"--logtostderr\",\"--kubelet-preferred-address-types=InternalIP\",\"--cert-dir=/tmp\",\"--kubelet-insecure-tls\",\"--secure-port=8443\"],\"image\":\"gcr.io/google_containers/metrics-server-amd64:v0.3.6\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":20},\"name\":\"metrics-server\",\"ports\":[{\"containerPort\":8443,\"name\":\"https\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":20},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"all\"]},\"readOnlyRootFilesystem\":true,\"runAsGroup\":10001,\"runAsNonRoot\":true,\"runAsUser\":10001},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"hostNetwork\":false,\"serviceAccountName\":\"metrics-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp\"}]}}}}\n",
                            "pulumi.com/autonamed": "true"
                        },
                        "creationTimestamp": "2019-12-05T07:31:10Z",
                        "generation": 5,
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server-fzv5dhaw",
                        "namespace": "kube-system",
                        "resourceVersion": "3470",
                        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/metrics-server-fzv5dhaw",
                        "uid": "54c80cde-c1e6-4650-8434-183443b02588"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "metrics-server"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "app": "metrics-server"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/metrics-server",
                                            "--logtostderr",
                                            "--kubelet-preferred-address-types=InternalIP",
                                            "--cert-dir=/tmp",
                                            "--kubelet-insecure-tls",
                                            "--secure-port=8443"
                                        ],
                                        "image": "gcr.io/google_containers/metrics-server-amd64:v0.3.6",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "https",
                                                "scheme": "HTTPS"
                                            },
                                            "initialDelaySeconds": 20,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "metrics-server",
                                        "ports": [
                                            {
                                                "containerPort": 8443,
                                                "name": "https",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/healthz",
                                                "port": "https",
                                                "scheme": "HTTPS"
                                            },
                                            "initialDelaySeconds": 20,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {},
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false,
                                            "capabilities": {
                                                "drop": [
                                                    "all"
                                                ]
                                            },
                                            "readOnlyRootFilesystem": true,
                                            "runAsGroup": 10001,
                                            "runAsNonRoot": true,
                                            "runAsUser": 10001
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/tmp",
                                                "name": "tmp"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "metrics-server",
                                "serviceAccountName": "metrics-server",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "emptyDir": {},
                                        "name": "tmp"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T08:03:47Z",
                                "lastUpdateTime": "2019-12-05T08:03:47Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2019-12-05T07:31:10Z",
                                "lastUpdateTime": "2019-12-05T08:03:47Z",
                                "message": "ReplicaSet \"metrics-server-fzv5dhaw-5b79df8c56\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 5,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:deployment::metrics-server",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:core/v1:ServiceAccount::metrics-server"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": [
                        "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:core/v1:ServiceAccount::metrics-server"
                    ]
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:deployment$kubernetes:apps/v1:Deployment::metrics-server",
                    "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:deployment$kubernetes:apps/v1beta1:Deployment::metrics-server",
                    "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:deployment$kubernetes:apps/v1beta2:Deployment::metrics-server",
                    "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:deployment$kubernetes:extensions/v1beta1:Deployment::metrics-server"
                ]
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::metrics-server",
                "custom": true,
                "id": "kube-system/metrics-server-2b5wp18a",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:RoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true"
                        },
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server-2b5wp18a",
                        "namespace": "kube-system"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "extension-apiserver-authentication-reader"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "metrics-server",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "labels": {
                                "app": "metrics-server",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "metrics-server-2b5wp18a",
                            "namespace": "kube-system"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "extension-apiserver-authentication-reader"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "metrics-server",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\"},\"labels\":{\"app\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"metrics-server-2b5wp18a\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"extension-apiserver-authentication-reader\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"metrics-server\",\"namespace\":\"kube-system\"}]}\n",
                            "pulumi.com/autonamed": "true"
                        },
                        "creationTimestamp": "2019-12-05T07:31:03Z",
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server-2b5wp18a",
                        "namespace": "kube-system",
                        "resourceVersion": "1224",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/metrics-server-2b5wp18a",
                        "uid": "7f7930e7-eb34-4493-96cd-dadf0bd70d3d"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "extension-apiserver-authentication-reader"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "metrics-server",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac::metrics-server",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:core/v1:ServiceAccount::metrics-server"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": [
                        "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:core/v1:ServiceAccount::metrics-server"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:service$kubernetes:apiregistration/v1beta1:APIService::metrics-server",
                "custom": true,
                "id": "v1beta1.metrics.k8s.io",
                "type": "kubernetes:apiregistration/v1beta1:APIService",
                "inputs": {
                    "apiVersion": "apiregistration.k8s.io/v1beta1",
                    "kind": "APIService",
                    "metadata": {
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "v1beta1.metrics.k8s.io"
                    },
                    "spec": {
                        "group": "metrics.k8s.io",
                        "groupPriorityMinimum": 100,
                        "insecureSkipTLSVerify": true,
                        "service": {
                            "name": "metrics-server-peby28wf",
                            "namespace": "kube-system"
                        },
                        "version": "v1beta1",
                        "versionPriority": 100
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiregistration.k8s.io/v1beta1",
                    "__inputs": {
                        "apiVersion": "apiregistration.k8s.io/v1beta1",
                        "kind": "APIService",
                        "metadata": {
                            "labels": {
                                "app": "metrics-server",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "v1beta1.metrics.k8s.io"
                        },
                        "spec": {
                            "group": "metrics.k8s.io",
                            "groupPriorityMinimum": 100,
                            "insecureSkipTLSVerify": true,
                            "service": {
                                "name": "metrics-server-peby28wf",
                                "namespace": "kube-system"
                            },
                            "version": "v1beta1",
                            "versionPriority": 100
                        }
                    },
                    "apiVersion": "apiregistration.k8s.io/v1beta1",
                    "kind": "APIService",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiregistration.k8s.io/v1beta1\",\"kind\":\"APIService\",\"metadata\":{\"labels\":{\"app\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"v1beta1.metrics.k8s.io\"},\"spec\":{\"group\":\"metrics.k8s.io\",\"groupPriorityMinimum\":100,\"insecureSkipTLSVerify\":true,\"service\":{\"name\":\"metrics-server-peby28wf\",\"namespace\":\"kube-system\"},\"version\":\"v1beta1\",\"versionPriority\":100}}\n"
                        },
                        "creationTimestamp": "2019-12-05T07:31:28Z",
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "v1beta1.metrics.k8s.io",
                        "resourceVersion": "3472",
                        "selfLink": "/apis/apiregistration.k8s.io/v1beta1/apiservices/v1beta1.metrics.k8s.io",
                        "uid": "ecf7dcad-7ada-4b1b-95d4-b575c846e0a3"
                    },
                    "spec": {
                        "group": "metrics.k8s.io",
                        "groupPriorityMinimum": 100,
                        "insecureSkipTLSVerify": true,
                        "service": {
                            "name": "metrics-server-peby28wf",
                            "namespace": "kube-system",
                            "port": 443
                        },
                        "version": "v1beta1",
                        "versionPriority": 100
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-05T08:03:47Z",
                                "message": "all checks passed",
                                "reason": "Passed",
                                "status": "True",
                                "type": "Available"
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:service::metrics-server",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:service$kubernetes:core/v1:Service::metrics-server"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": [
                        "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:service$kubernetes:core/v1:Service::metrics-server"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::metrics-server",
                "custom": true,
                "id": "metrics-server-eqzueufi",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true"
                        },
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server-eqzueufi",
                        "namespace": "kube-system"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:metrics-server"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "metrics-server",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "labels": {
                                "app": "metrics-server",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "metrics-server-eqzueufi",
                            "namespace": "kube-system"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:metrics-server"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "metrics-server",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\"},\"labels\":{\"app\":\"metrics-server\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"metrics-server-eqzueufi\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:metrics-server\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"metrics-server\",\"namespace\":\"kube-system\"}]}\n",
                            "pulumi.com/autonamed": "true"
                        },
                        "creationTimestamp": "2019-12-05T07:31:04Z",
                        "labels": {
                            "app": "metrics-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "metrics-server-eqzueufi",
                        "resourceVersion": "1228",
                        "selfLink": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/metrics-server-eqzueufi",
                        "uid": "2ac41b19-4c87-46ba-a813-71d02d2c7531"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:metrics-server"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "metrics-server",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac::metrics-server",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:core/v1:ServiceAccount::metrics-server",
                    "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::metrics-server"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::k8s::d4914b7c-1c7e-44d9-b030-27b9a0615078",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": [
                        "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::metrics-server"
                    ],
                    "subjects": [
                        "urn:pulumi:cluster::brewed-here::k8s:metrics-server$k8s:metrics-server:rbac$kubernetes:core/v1:ServiceAccount::metrics-server"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:core/v1:ConfigMap::traefik/traefik",
                "custom": true,
                "id": "traefik/traefik",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "traefik.toml": "# traefik.toml\nlogLevel = \"info\"\ndefaultEntryPoints = [\"http\",\"https\"]\n[entryPoints]\n  [entryPoints.http]\n  address = \":80\"\n  compress = true\n    [entryPoints.http.redirect]\n      regex = \"^http://(.*)\"\n      replacement = \"https://$1\"\n  [entryPoints.https]\n  address = \":443\"\n  compress = true\n    [entryPoints.https.tls]\n      [[entryPoints.https.tls.certificates]]\n      CertFile = \"/ssl/tls.crt\"\n      KeyFile = \"/ssl/tls.key\"\n  [entryPoints.traefik]\n  address = \":8080\"\n[ping]\nentryPoint = \"http\"\n[kubernetes]\n  [kubernetes.ingressEndpoint]\n  publishedService = \"traefik/traefik\"\n[traefikLog]\n  format = \"json\"\n[acme]\nKeyType = \"RSA4096\"\nemail = \"timmyers09@gmail.com\"\nstorage = \"/acme/acme.json\"\nentryPoint = \"https\"\nonHostRule = true\nacmeLogging = true\n  [acme.tlsChallenge]\n[api]\n  entryPoint = \"traefik\"\n  dashboard = true\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik",
                        "namespace": "traefik"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "traefik.toml": "# traefik.toml\nlogLevel = \"info\"\ndefaultEntryPoints = [\"http\",\"https\"]\n[entryPoints]\n  [entryPoints.http]\n  address = \":80\"\n  compress = true\n    [entryPoints.http.redirect]\n      regex = \"^http://(.*)\"\n      replacement = \"https://$1\"\n  [entryPoints.https]\n  address = \":443\"\n  compress = true\n    [entryPoints.https.tls]\n      [[entryPoints.https.tls.certificates]]\n      CertFile = \"/ssl/tls.crt\"\n      KeyFile = \"/ssl/tls.key\"\n  [entryPoints.traefik]\n  address = \":8080\"\n[ping]\nentryPoint = \"http\"\n[kubernetes]\n  [kubernetes.ingressEndpoint]\n  publishedService = \"traefik/traefik\"\n[traefikLog]\n  format = \"json\"\n[acme]\nKeyType = \"RSA4096\"\nemail = \"timmyers09@gmail.com\"\nstorage = \"/acme/acme.json\"\nentryPoint = \"https\"\nonHostRule = true\nacmeLogging = true\n  [acme.tlsChallenge]\n[api]\n  entryPoint = \"traefik\"\n  dashboard = true\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app": "traefik",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "chart": "traefik-1.82.3",
                                "heritage": "Tiller",
                                "release": "traefik"
                            },
                            "name": "traefik",
                            "namespace": "traefik"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "traefik.toml": "# traefik.toml\nlogLevel = \"info\"\ndefaultEntryPoints = [\"http\",\"https\"]\n[entryPoints]\n  [entryPoints.http]\n  address = \":80\"\n  compress = true\n    [entryPoints.http.redirect]\n      regex = \"^http://(.*)\"\n      replacement = \"https://$1\"\n  [entryPoints.https]\n  address = \":443\"\n  compress = true\n    [entryPoints.https.tls]\n      [[entryPoints.https.tls.certificates]]\n      CertFile = \"/ssl/tls.crt\"\n      KeyFile = \"/ssl/tls.key\"\n  [entryPoints.traefik]\n  address = \":8080\"\n[ping]\nentryPoint = \"http\"\n[kubernetes]\n  [kubernetes.ingressEndpoint]\n  publishedService = \"traefik/traefik\"\n[traefikLog]\n  format = \"json\"\n[acme]\nKeyType = \"RSA4096\"\nemail = \"timmyers09@gmail.com\"\nstorage = \"/acme/acme.json\"\nentryPoint = \"https\"\nonHostRule = true\nacmeLogging = true\n  [acme.tlsChallenge]\n[api]\n  entryPoint = \"traefik\"\n  dashboard = true\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"traefik.toml\":\"# traefik.toml\\nlogLevel = \\\"info\\\"\\ndefaultEntryPoints = [\\\"http\\\",\\\"https\\\"]\\n[entryPoints]\\n  [entryPoints.http]\\n  address = \\\":80\\\"\\n  compress = true\\n    [entryPoints.http.redirect]\\n      regex = \\\"^http://(.*)\\\"\\n      replacement = \\\"https://$1\\\"\\n  [entryPoints.https]\\n  address = \\\":443\\\"\\n  compress = true\\n    [entryPoints.https.tls]\\n      [[entryPoints.https.tls.certificates]]\\n      CertFile = \\\"/ssl/tls.crt\\\"\\n      KeyFile = \\\"/ssl/tls.key\\\"\\n  [entryPoints.traefik]\\n  address = \\\":8080\\\"\\n[ping]\\nentryPoint = \\\"http\\\"\\n[kubernetes]\\n  [kubernetes.ingressEndpoint]\\n  publishedService = \\\"traefik/traefik\\\"\\n[traefikLog]\\n  format = \\\"json\\\"\\n[acme]\\nKeyType = \\\"RSA4096\\\"\\nemail = \\\"timmyers09@gmail.com\\\"\\nstorage = \\\"/acme/acme.json\\\"\\nentryPoint = \\\"https\\\"\\nonHostRule = true\\nacmeLogging = true\\n  [acme.tlsChallenge]\\n[api]\\n  entryPoint = \\\"traefik\\\"\\n  dashboard = true\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app\":\"traefik\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"chart\":\"traefik-1.82.3\",\"heritage\":\"Tiller\",\"release\":\"traefik\"},\"name\":\"traefik\",\"namespace\":\"traefik\"}}\n"
                        },
                        "creationTimestamp": "2019-12-06T05:17:43Z",
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik",
                        "namespace": "traefik",
                        "resourceVersion": "78387",
                        "selfLink": "/api/v1/namespaces/traefik/configmaps/traefik",
                        "uid": "b67ed67d-0a64-45ee-b500-cb75c7eb6a5e"
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::traefik",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::traefik/traefik",
                "custom": true,
                "id": "traefik/traefik",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik",
                        "namespace": "traefik"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app": "traefik",
                                "release": "traefik"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "checksum/config": "a8a9a418da94b0f8044143997b76c4ecb1f925997f29e398762b6f2ed080ab73"
                                },
                                "labels": {
                                    "app": "traefik",
                                    "chart": "traefik-1.82.3",
                                    "heritage": "Tiller",
                                    "release": "traefik"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--configfile=/config/traefik.toml"
                                        ],
                                        "image": "traefik:1.7.19",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 2
                                        },
                                        "name": "traefik",
                                        "ports": [
                                            {
                                                "containerPort": 80,
                                                "name": "http",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8880,
                                                "name": "httpn",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 443,
                                                "name": "https",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8080,
                                                "name": "dash",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 1,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": "http"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 2
                                        },
                                        "resources": {},
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/config",
                                                "name": "config"
                                            },
                                            {
                                                "mountPath": "/ssl",
                                                "name": "ssl"
                                            },
                                            {
                                                "mountPath": "/acme",
                                                "name": "acme"
                                            }
                                        ]
                                    }
                                ],
                                "serviceAccountName": "traefik",
                                "terminationGracePeriodSeconds": 60,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "name": "traefik"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "name": "ssl",
                                        "secret": {
                                            "secretName": "traefik-default-cert"
                                        }
                                    },
                                    {
                                        "name": "acme",
                                        "persistentVolumeClaim": {
                                            "claimName": "traefik-acme"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app": "traefik",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "chart": "traefik-1.82.3",
                                "heritage": "Tiller",
                                "release": "traefik"
                            },
                            "name": "traefik",
                            "namespace": "traefik"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app": "traefik",
                                    "release": "traefik"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "checksum/config": "a8a9a418da94b0f8044143997b76c4ecb1f925997f29e398762b6f2ed080ab73"
                                    },
                                    "labels": {
                                        "app": "traefik",
                                        "chart": "traefik-1.82.3",
                                        "heritage": "Tiller",
                                        "release": "traefik"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "--configfile=/config/traefik.toml"
                                            ],
                                            "image": "traefik:1.7.19",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/ping",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 10,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 2
                                            },
                                            "name": "traefik",
                                            "ports": [
                                                {
                                                    "containerPort": 80,
                                                    "name": "http",
                                                    "protocol": "TCP"
                                                },
                                                {
                                                    "containerPort": 8880,
                                                    "name": "httpn",
                                                    "protocol": "TCP"
                                                },
                                                {
                                                    "containerPort": 443,
                                                    "name": "https",
                                                    "protocol": "TCP"
                                                },
                                                {
                                                    "containerPort": 8080,
                                                    "name": "dash",
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 1,
                                                "httpGet": {
                                                    "path": "/ping",
                                                    "port": "http"
                                                },
                                                "initialDelaySeconds": 10,
                                                "periodSeconds": 10,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 2
                                            },
                                            "resources": {},
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/config",
                                                    "name": "config"
                                                },
                                                {
                                                    "mountPath": "/ssl",
                                                    "name": "ssl"
                                                },
                                                {
                                                    "mountPath": "/acme",
                                                    "name": "acme"
                                                }
                                            ]
                                        }
                                    ],
                                    "serviceAccountName": "traefik",
                                    "terminationGracePeriodSeconds": 60,
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "name": "traefik"
                                            },
                                            "name": "config"
                                        },
                                        {
                                            "name": "ssl",
                                            "secret": {
                                                "secretName": "traefik-default-cert"
                                            }
                                        },
                                        {
                                            "name": "acme",
                                            "persistentVolumeClaim": {
                                                "claimName": "traefik-acme"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "10",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app\":\"traefik\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"chart\":\"traefik-1.82.3\",\"heritage\":\"Tiller\",\"release\":\"traefik\"},\"name\":\"traefik\",\"namespace\":\"traefik\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"traefik\",\"release\":\"traefik\"}},\"template\":{\"metadata\":{\"annotations\":{\"checksum/config\":\"a8a9a418da94b0f8044143997b76c4ecb1f925997f29e398762b6f2ed080ab73\"},\"labels\":{\"app\":\"traefik\",\"chart\":\"traefik-1.82.3\",\"heritage\":\"Tiller\",\"release\":\"traefik\"}},\"spec\":{\"containers\":[{\"args\":[\"--configfile=/config/traefik.toml\"],\"image\":\"traefik:1.7.19\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/ping\",\"port\":\"http\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":2},\"name\":\"traefik\",\"ports\":[{\"containerPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":8880,\"name\":\"httpn\",\"protocol\":\"TCP\"},{\"containerPort\":443,\"name\":\"https\",\"protocol\":\"TCP\"},{\"containerPort\":8080,\"name\":\"dash\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":1,\"httpGet\":{\"path\":\"/ping\",\"port\":\"http\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":2},\"resources\":{},\"volumeMounts\":[{\"mountPath\":\"/config\",\"name\":\"config\"},{\"mountPath\":\"/ssl\",\"name\":\"ssl\"},{\"mountPath\":\"/acme\",\"name\":\"acme\"}]}],\"serviceAccountName\":\"traefik\",\"terminationGracePeriodSeconds\":60,\"volumes\":[{\"configMap\":{\"name\":\"traefik\"},\"name\":\"config\"},{\"name\":\"ssl\",\"secret\":{\"secretName\":\"traefik-default-cert\"}},{\"name\":\"acme\",\"persistentVolumeClaim\":{\"claimName\":\"traefik-acme\"}}]}}}}\n"
                        },
                        "creationTimestamp": "2019-12-05T21:39:47Z",
                        "generation": 10,
                        "labels": {
                            "app": "traefik",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "chart": "traefik-1.82.3",
                            "heritage": "Tiller",
                            "release": "traefik"
                        },
                        "name": "traefik",
                        "namespace": "traefik",
                        "resourceVersion": "78419",
                        "selfLink": "/apis/apps/v1/namespaces/traefik/deployments/traefik",
                        "uid": "eba0cb83-b44d-4be2-95a8-0ee0d91467bc"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "traefik",
                                "release": "traefik"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "checksum/config": "a8a9a418da94b0f8044143997b76c4ecb1f925997f29e398762b6f2ed080ab73"
                                },
                                "labels": {
                                    "app": "traefik",
                                    "chart": "traefik-1.82.3",
                                    "heritage": "Tiller",
                                    "release": "traefik"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--configfile=/config/traefik.toml"
                                        ],
                                        "image": "traefik:1.7.19",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 2
                                        },
                                        "name": "traefik",
                                        "ports": [
                                            {
                                                "containerPort": 80,
                                                "name": "http",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8880,
                                                "name": "httpn",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 443,
                                                "name": "https",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8080,
                                                "name": "dash",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 1,
                                            "httpGet": {
                                                "path": "/ping",
                                                "port": "http",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 10,
                                            "periodSeconds": 10,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 2
                                        },
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/config",
                                                "name": "config"
                                            },
                                            {
                                                "mountPath": "/ssl",
                                                "name": "ssl"
                                            },
                                            {
                                                "mountPath": "/acme",
                                                "name": "acme"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "traefik",
                                "serviceAccountName": "traefik",
                                "terminationGracePeriodSeconds": 60,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "traefik"
                                        },
                                        "name": "config"
                                    },
                                    {
                                        "name": "ssl",
                                        "secret": {
                                            "defaultMode": 420,
                                            "secretName": "traefik-default-cert"
                                        }
                                    },
                                    {
                                        "name": "acme",
                                        "persistentVolumeClaim": {
                                            "claimName": "traefik-acme"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2019-12-06T05:04:55Z",
                                "lastUpdateTime": "2019-12-06T05:04:55Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2019-12-06T04:10:18Z",
                                "lastUpdateTime": "2019-12-06T05:17:56Z",
                                "message": "ReplicaSet \"traefik-86f6cfc4bd\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 10,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart::traefik",
                "dependencies": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                ],
                "provider": "urn:pulumi:cluster::brewed-here::pulumi:providers:kubernetes::default_1_3_3::fc664eaf-2867-4761-9818-3615cd8990ac",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:cluster::brewed-here::kubernetes:core/v1:Namespace::traefik"
                    ],
                    "spec": null
                },
                "aliases": [
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1:Deployment::traefik/traefik",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta1:Deployment::traefik/traefik",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:apps/v1beta2:Deployment::traefik/traefik",
                    "urn:pulumi:cluster::brewed-here::kubernetes:helm.sh/v2:Chart$kubernetes:extensions/v1beta1:Deployment::traefik/traefik"
                ]
            }
        ]
    }
}
